%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: remote_working-08.eps
%%Creator: Adobe Illustrator(R) 23.1
%%For: Cheremisinov Oleg
%%CreationDate: 10/05/2020
%%BoundingBox: 0 0 1350 900
%%HiResBoundingBox: 0 0 1350 900
%%CropBox: 0 0 1350 900
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.1.1 x673 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 8 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.1 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2020-05-10T17:36:10+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-05-10T17:36:10+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-05-10T17:36:10+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>144</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAkAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A7r508xeY4ZIbfQrF5VjdzdzSKvpNxjqsYBZW/a51FPs9wd8fxBKwdh7wyMXm&#xA;Go6j/jfzBJeyXUNx5fsIqxC2u0FGPoiViEFyinnK1Hb9kAEcuJymWIgHc7/2uw44YsYnEcUx8uve&#xA;O7p+p6dp1sLL8tbWBQ1GiV/jJLD1ZPV3qF/m8KeGSiaxgfBwZZDM8RAF93Jiuu+YrPTINTe5uPj0&#xA;+CG6NvGgLmN5okUCppWTky9ffamHBlkchiR6QObDgkeX45frWfkt5hbVNXvJ5XZHuogz2LoEkglT&#xA;gHLd6Sh1K5bxREtiDxd362/Jp8kY+qJFbX3nny58no3nW6S08t3t2881utrG0/K3ZkdvSBcJzUEq&#xA;GIocnLJw/Fqx4uOQjysh4/5R/MbzPf6FqEN1dzXFzLcho25IrwwPwH7uQurAIwaoZTX+ap2x8v0n&#xA;cjb8bubrNF4UgP4e8/a9c8u69HetHbO7NeJBE89QoBLoGqOPbw2FcvhM8MQT6urp4/3hrl9jyvzp&#xA;LqOp/mFemONpFtNOuEWFGZas6TQICQGIqGJrQ5cZCIcueH1AX0CUt558p+VDYXtrPqH6QsI7u2hg&#xA;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&#xA;sVdirsVdirsVdir/AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:eff383df-1186-4a5a-af7c-da5189f73d0e</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:eff383df-1186-4a5a-af7c-da5189f73d0e</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:3475da6f-f821-6b47-9d03-3157c8745d3c</stRef:instanceID>
            <stRef:documentID>xmp.did:3eb636b9-3c86-4540-8758-407a64fdb135</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:eff383df-1186-4a5a-af7c-da5189f73d0e</stEvt:instanceID>
                  <stEvt:when>2020-05-10T17:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1500.000000</stDim:w>
            <stDim:h>750.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -900 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 900 li
1350 900 li
1350 0 li
cp
clp
487.895 359.415 mo
487.929 359.453 li
487.907 359.403 li
487.745 359.236 487.741 359.24 487.895 359.415 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.898039 .501961 .305882 rgb
f
1166.36 834.501 mo
1344.92 549.035 1272.62 191.228 1136.47 174.531 cv
1075.51 167.055 1023.17 176.526 965.329 138.241 cv
909.584 101.341 854.902 79.2972 790.574 87.2875 cv
661.975 103.261 584.904 227.579 479.326 300.497 cv
416.981 343.555 359.473 347.138 289.769 347.138 cv
233.942 347.138 175.293 348.649 132.018 398.484 cv
33.7754 511.618 85.3916 713.864 153.946 834.501 cv
1166.36 834.501 li
cp
1 .992157 .811765 rgb
f
1199.78 93.6879 mo
1199.78 630.019 li
706.186 630.019 li
706.186 93.6879 li
1199.78 93.6879 li
cp
.772549 1 .992157 rgb
f
959.423 163.585 mo
960.15 156.069 953.585 152.292 945.01 159.17 cv
953.979 148.236 933.128 138.811 925.46 150.179 cv
930.968 136.359 906.665 119.834 900.338 148.583 cv
897.125 143.363 892.241 135.802 884.74 135.974 cv
877.007 136.152 875.953 143.998 872.065 150.069 cv
863.756 138.405 849.872 131.91 840.969 146.926 cv
836.726 133.301 821.541 122.54 818.631 143.262 cv
813.559 132.539 807.828 113.505 791.227 119.786 cv
778.089 124.755 778.744 142.714 778.889 154.451 cv
772.204 147.566 757.417 142.55 749.28 150.197 cv
745.43 153.815 745.124 159.241 746.989 163.585 cv
959.423 163.585 li
cp
1 1 1 rgb
f
1109.05 361.312 mo
1109.78 353.794 1103.22 350.018 1094.64 356.896 cv
1103.61 345.961 1082.76 336.536 1075.09 347.905 cv
1080.6 334.085 1056.29 317.56 1049.97 346.309 cv
1046.76 341.088 1041.87 333.528 1034.37 333.7 cv
1026.64 333.877 1025.58 341.725 1021.7 347.795 cv
1013.39 336.131 999.503 329.635 990.599 344.652 cv
986.356 331.027 971.171 320.267 968.262 340.989 cv
963.188 330.265 957.459 311.232 940.857 317.512 cv
927.72 322.482 928.375 340.441 928.519 352.177 cv
921.834 345.292 907.048 340.276 898.91 347.922 cv
895.061 351.541 894.755 356.966 896.62 361.312 cv
1109.05 361.312 li
cp
f
1171.86 205.765 mo
1172.4 200.222 1167.55 197.438 1161.23 202.509 cv
1167.85 194.448 1152.47 187.498 1146.82 195.88 cv
1150.88 185.691 1132.96 173.507 1128.3 194.703 cv
1125.93 190.854 1122.33 185.28 1116.79 185.407 cv
1111.09 185.537 1110.32 191.324 1107.45 195.799 cv
1101.32 187.2 1091.09 182.41 1084.52 193.482 cv
1081.39 183.436 1070.2 175.502 1068.05 190.781 cv
1064.31 182.874 1060.09 168.84 1047.85 173.471 cv
1038.16 177.135 1038.64 190.376 1038.75 199.03 cv
1033.82 193.953 1022.92 190.255 1016.92 195.893 cv
1014.08 198.561 1013.86 202.561 1015.23 205.765 cv
1171.86 205.765 li
cp
f
1079.06 456.947 mo
1048.14 449.253 1017.91 452.102 984.859 448.93 cv
969.649 447.47 958.672 439.002 944.879 436.801 cv
929.105 434.285 913.761 443.654 899.118 442.464 cv
869.044 440.021 848.526 415.424 816.611 422.933 cv
795.499 427.9 773.818 433.778 752.432 438.852 cv
739.204 441.99 721.784 450.578 707.822 451.4 cv
707.822 459.246 li
720.308 472.98 li
742.196 466.203 776.801 472.98 800.971 472.98 cv
851.037 472.98 900.671 474.976 950.781 472.987 cv
995.354 471.217 1038.76 478.139 1083.06 475.43 cv
1108.24 473.89 1139.21 477.285 1163.08 472.527 cv
1145.09 460.59 1101.67 462.574 1079.06 456.947 cv
cp
.360784 .556863 .541176 rgb
f
707.822 466.009 mo
707.822 628.917 li
1199.78 628.917 li
1199.78 466.009 li
707.822 466.009 li
cp
.345098 .827451 .815686 rgb
f
934.681 458.787 mo
937.749 457.115 942.998 449.953 946.177 449.091 cv
944.336 453.18 941.933 459.085 940.717 463.358 cv
959.424 464.763 985.079 470.994 1003.7 474.245 cv
1001 469.181 980.953 443.685 980.092 438.813 cv
977.771 438.516 968.22 442.054 965.894 442.651 cv
959.729 444.695 976.589 437.152 978.416 436.224 cv
976.71 434.744 966.265 423.93 952.848 417.484 cv
951.83 418.047 950.842 418.633 949.9 419.263 cv
945.251 422.37 940.963 426.489 936.146 428.982 cv
940.698 425.062 945.039 420.523 949.303 415.917 cv
943.608 413.625 937.498 412.269 931.371 412.787 cv
924.202 413.398 904.928 424.388 900.589 441.879 cv
898.844 448.906 929.226 454.583 934.681 458.787 cv
cp
.564706 .596078 .117647 rgb
f
879.706 413.148 mo
880.569 409.762 886.217 402.908 886.267 399.615 cv
882.759 402.407 877.628 406.193 873.788 408.424 cv
867.813 390.643 857.589 370.386 849.844 353.138 cv
855.419 354.507 882.929 364.58 887.862 364.213 cv
888.723 366.387 887.65 376.516 887.646 378.918 cv
887.186 385.398 890.337 367.197 890.784 365.199 cv
892.641 366.487 905.696 373.943 915.253 385.355 cv
914.958 386.479 914.633 387.581 914.256 388.649 cv
912.392 393.921 909.456 399.092 908.229 404.376 cv
910.905 398.997 914.233 393.67 917.646 388.405 cv
921.271 393.357 924.094 398.943 925.101 405.01 cv
926.278 412.107 920.381 433.496 904.499 442.015 cv
898.121 445.438 885.125 417.396 879.706 413.148 cv
cp
f
882.156 408.903 mo
889.905 407.131 897.322 406.509 905.118 407.027 cv
910.859 407.408 916.426 409.606 922.139 409.861 cv
922.571 415.998 li
924.864 425.98 922.449 437.629 921.714 448.061 cv
918.007 448.131 910.219 448.291 910.219 448.291 cv
910.219 448.291 910.104 436.947 908.169 433.263 cv
907.973 437.717 907.033 444.598 908.06 448.465 cv
897.243 449.195 883.225 446.649 871.95 446.214 cv
872.419 442.791 873.279 439.157 873.93 435.647 cv
869.525 437.864 863.678 447.138 863.678 447.138 cv
863.678 447.138 856.835 447.23 853.293 447.055 cv
855.742 442.414 860.249 437.023 863.991 432.94 cv
858.413 435.855 852.637 441.973 846.394 443.188 cv
841.635 444.114 835.096 440.812 830.189 440.411 cv
844.099 425.841 862.333 413.435 882.156 408.903 cv
cp
.776471 .776471 .294118 rgb
f
880.413 389.299 mo
888.28 390.433 895.425 392.52 902.512 395.807 cv
907.732 398.229 912.135 402.282 917.372 404.576 cv
915.568 410.457 li
914.118 420.595 907.673 430.596 903.235 440.066 cv
899.751 438.797 892.426 436.146 892.426 436.146 cv
892.426 436.146 896.401 425.517 895.92 421.385 cv
894.134 425.47 890.782 431.553 890.349 435.531 cv
879.993 432.32 867.829 424.902 857.468 420.44 cv
859.136 417.414 861.247 414.332 863.115 411.29 cv
858.209 411.776 849.415 418.326 849.415 418.326 cv
849.415 418.326 842.998 415.95 839.757 414.513 cv
843.711 411.064 849.855 407.655 854.815 405.19 cv
848.563 405.904 840.973 409.535 834.71 408.422 cv
829.938 407.574 825.024 402.141 820.59 400.001 cv
838.81 391.411 860.286 386.396 880.413 389.299 cv
cp
.498039 .509804 .0823529 rgb
f
958.645 456.839 mo
955.596 449.497 951.802 443.094 946.86 437.042 cv
943.22 432.586 938.201 429.326 934.681 424.821 cv
929.43 428.025 li
919.968 431.945 911.878 440.668 903.804 447.316 cv
905.897 450.377 910.282 456.816 910.282 456.816 cv
910.282 456.816 919.593 450.329 923.715 449.771 cv
920.2 452.514 915.14 457.27 911.393 458.675 cv
917.071 467.911 927.273 477.856 934.166 486.788 cv
936.684 484.422 939.145 481.613 941.628 479.048 cv
942.374 483.921 938.211 494.065 938.211 494.065 cv
938.211 494.065 942.104 499.693 944.299 502.476 cv
946.659 497.79 948.44 490.993 949.597 485.576 cv
950.455 491.811 948.819 500.065 951.45 505.856 cv
953.456 510.269 959.938 513.681 963.109 517.446 cv
966.914 497.665 966.447 475.617 958.645 456.839 cv
cp
f
912.843 427.597 mo
912.843 427.597 912.77 427.617 912.616 427.663 cv
912.482 427.698 li
912.415 427.717 li
912.396 427.731 li
912.355 427.757 li
912.329 427.764 li
912.295 427.784 li
911.955 427.924 911.326 428.239 910.452 428.806 cv
910.011 429.093 909.51 429.434 908.962 429.841 cv
908.661 430.062 908.354 430.296 908.026 430.549 cv
907.746 430.763 907.452 430.997 907.151 431.238 cv
906.076 432.099 904.874 433.128 903.545 434.304 cv
903.264 434.55 902.971 434.805 902.676 435.072 cv
901.834 435.827 900.953 436.628 900.018 437.463 cv
899.65 437.797 899.276 438.138 898.889 438.486 cv
898.675 438.679 898.454 438.872 898.234 439.067 cv
897.84 439.427 897.438 439.781 897.019 440.149 cv
896.812 440.328 li
895.803 441.21 894.761 442.125 893.679 443.075 cv
892.596 444.016 891.48 444.998 890.325 446.007 cv
889.744 446.535 889.163 447.069 888.568 447.617 cv
887.967 448.158 887.365 448.705 886.751 449.267 cv
886.524 449.474 886.297 449.681 886.063 449.895 cv
885.676 450.248 885.282 450.61 884.881 450.97 cv
884.567 451.257 884.253 451.551 883.933 451.852 cv
883.618 452.153 883.298 452.453 882.977 452.753 cv
881.694 453.969 880.386 455.211 879.036 456.481 cv
877.7 457.77 876.351 459.1 874.961 460.455 cv
869.744 465.585 864.206 471.21 858.488 477.296 cv
858.147 477.657 857.807 478.017 857.467 478.384 cv
857.213 478.652 856.959 478.925 856.698 479.2 cv
856.571 479.327 856.444 479.467 856.317 479.6 cv
855.943 480.008 855.557 480.421 855.175 480.836 cv
854.407 481.664 853.639 482.493 852.864 483.334 cv
852.096 484.162 851.327 484.997 850.553 485.839 cv
849.771 486.701 848.99 487.57 848.201 488.445 cv
847.413 489.313 846.618 490.195 845.823 491.077 cv
845.049 491.952 844.273 492.84 843.499 493.729 cv
842.724 494.61 841.942 495.505 841.154 496.401 cv
840.767 496.848 840.379 497.302 839.985 497.763 cv
839.598 498.224 839.21 498.678 838.816 499.139 cv
832.551 506.494 826.278 514.276 820.119 522.338 cv
815.396 528.517 810.747 534.864 806.191 541.31 cv
805.449 542.358 804.708 543.413 803.974 544.469 cv
803.326 545.391 802.678 546.32 802.036 547.254 cv
790.3 564.228 779.325 581.737 769.491 598.443 cv
764.702 606.592 760.16 614.548 755.945 622.15 cv
755.838 622.337 755.731 622.524 755.631 622.711 cv
754.983 623.887 754.335 625.055 753.7 626.204 cv
753.354 626.839 753.013 627.467 752.665 628.088 cv
750.093 632.785 747.648 637.32 745.33 641.662 cv
721.65 641.662 li
722.966 639.411 724.336 637.086 725.759 634.695 cv
728.137 630.694 730.647 626.498 733.279 622.15 cv
735.104 619.144 736.987 616.065 738.931 612.918 cv
743.681 605.236 748.784 597.187 754.182 588.931 cv
759.585 580.674 765.29 572.224 771.249 563.734 cv
777.2 555.25 783.413 546.734 789.806 538.357 cv
796.205 529.981 802.791 521.745 809.478 513.801 cv
816.158 505.859 822.944 498.21 829.712 490.996 cv
830.132 490.548 830.553 490.094 830.974 489.647 cv
831.395 489.193 831.815 488.745 832.243 488.304 cv
833.098 487.415 833.953 486.528 834.795 485.652 cv
835.644 484.771 836.484 483.896 837.326 483.027 cv
838.162 482.185 838.996 481.344 839.824 480.509 cv
840.653 479.674 841.481 478.845 842.296 478.024 cv
842.951 477.37 li
843.158 477.169 843.365 476.962 843.579 476.761 cv
843.993 476.354 844.407 475.947 844.814 475.538 cv
845.643 474.731 846.458 473.922 847.279 473.12 cv
847.687 472.72 848.088 472.327 848.495 471.925 cv
848.902 471.531 849.317 471.137 849.718 470.749 cv
856.091 464.55 862.27 458.819 868.081 453.622 cv
868.348 453.381 li
869.824 452.072 871.261 450.783 872.684 449.54 cv
873.905 448.498 875.095 447.47 876.264 446.468 cv
876.471 446.287 876.678 446.114 876.885 445.933 cv
877.226 445.64 877.566 445.345 877.9 445.058 cv
878.241 444.772 878.568 444.484 878.915 444.203 cv
879.597 443.635 880.265 443.087 880.927 442.534 cv
882.242 441.445 883.524 440.382 884.768 439.354 cv
886.524 437.951 888.207 436.621 889.797 435.352 cv
890.018 435.179 890.238 435.005 890.452 434.831 cv
890.893 434.484 891.32 434.143 891.748 433.803 cv
892.242 433.409 892.729 433.014 893.211 432.626 cv
893.404 432.467 893.598 432.313 893.785 432.153 cv
893.979 431.999 li
894.239 431.779 894.5 431.572 894.754 431.358 cv
895.735 430.556 896.678 429.788 897.566 429.06 cv
901.167 426.134 904.192 423.89 906.61 422.494 cv
907.827 421.792 908.896 421.291 909.737 420.991 cv
909.917 420.93 li
910.098 420.87 li
910.211 420.837 910.324 420.803 910.425 420.77 cv
910.565 420.73 li
910.652 420.71 li
910.779 420.676 li
910.933 420.643 911.02 420.622 911.02 420.622 cv
911.654 423.055 li
911.821 423.696 li
912.843 427.597 li
cp
.568627 .254902 .258824 rgb
f
790.753 556.992 mo
790.797 557.026 li
790.753 556.992 li
cp
.466667 .196078 .211765 rgb
f
864.795 457.189 mo
861.107 461.638 856.678 465.465 853.104 470.242 cv
854.861 472.232 856.726 474.75 858.488 477.296 cv
858.147 477.657 857.807 478.017 857.467 478.384 cv
857.213 478.652 856.959 478.925 856.698 479.2 cv
854.661 477.209 852.656 475.218 850.573 473.301 cv
842.871 482.907 833.058 490.703 824.988 500.202 cv
826.672 502.152 828.408 503.768 829.685 505.899 cv
827.688 504.196 825.663 502.472 823.579 500.915 cv
814.421 510.889 806.866 521.991 798.896 532.66 cv
801.348 535.492 803.78 538.411 806.191 541.31 cv
805.449 542.358 804.708 543.413 803.974 544.469 cv
801.495 543.039 799.07 541.57 796.772 540.161 cv
793.8 544.523 790.173 549.185 787.882 553.848 cv
788.703 554.556 790.293 556.607 790.754 556.995 cv
789.063 555.611 787.527 555.651 785.805 555.324 cv
786.559 556.226 786.906 557.703 787.588 558.63 cv
781.429 557.621 775.831 572.699 772.838 577.562 cv
768.322 584.876 759.772 592.678 763.52 600.775 cv
758.477 598.937 755.357 597.721 751.456 600.814 cv
749.819 602.117 742.778 611.121 742.839 613.172 cv
742.912 615.778 745.651 618.963 749.077 622.15 cv
750.548 623.52 752.137 624.882 753.7 626.204 cv
753.354 626.839 753.013 627.467 752.665 628.088 cv
748.31 625.744 743.687 623.7 739.452 622.15 cv
738.857 621.93 738.27 621.722 737.688 621.522 cv
737.568 621.736 737.448 621.943 737.335 622.15 cv
733.279 629.405 731.363 635.937 730.715 641.662 cv
721.65 641.662 li
722.966 639.411 724.336 637.086 725.759 634.695 cv
728.137 630.694 730.647 626.498 733.279 622.15 cv
735.104 619.144 736.987 616.065 738.931 612.918 cv
743.681 605.236 748.784 597.187 754.182 588.931 cv
759.585 580.674 765.29 572.224 771.249 563.734 cv
777.2 555.25 783.413 546.734 789.806 538.357 cv
796.205 529.981 802.791 521.745 809.478 513.801 cv
816.158 505.859 822.944 498.21 829.712 490.996 cv
830.132 490.548 830.553 490.094 830.974 489.647 cv
831.395 489.193 831.815 488.745 832.243 488.304 cv
833.098 487.415 833.953 486.528 834.795 485.652 cv
835.644 484.771 836.484 483.896 837.326 483.027 cv
838.162 482.185 838.996 481.344 839.824 480.509 cv
840.653 479.674 841.481 478.845 842.296 478.024 cv
842.951 477.37 li
843.158 477.169 843.365 476.962 843.579 476.761 cv
843.993 476.354 844.407 475.947 844.814 475.538 cv
845.643 474.731 846.458 473.922 847.279 473.12 cv
847.687 472.72 848.088 472.327 848.495 471.925 cv
848.902 471.531 849.317 471.137 849.718 470.749 cv
856.091 464.55 862.27 458.819 868.081 453.622 cv
868.248 457.156 868.308 460.749 869.203 464.122 cv
867.974 461.739 866.244 459.467 864.795 457.189 cv
cp
f
904.253 407.254 mo
899.626 415.831 895.355 431.193 892.302 434.812 cv
893.838 437.953 900.761 443.513 901.481 446.726 cv
897.479 444.705 891.684 442.045 887.469 440.641 cv
885.238 459.267 877.88 484.621 873.809 503.084 cv
878.986 500.61 905.344 481.707 910.25 481.062 cv
910.649 478.759 907.537 469.059 907.044 466.708 cv
905.273 460.457 912.065 477.637 912.909 479.501 cv
914.465 477.863 925.729 467.906 932.762 454.787 cv
932.245 453.746 931.702 452.733 931.115 451.765 cv
928.217 446.982 924.291 442.517 922.013 437.593 cv
925.729 442.315 930.072 446.852 934.484 451.315 cv
935.562 448.945 936.475 446.495 937.15 443.991 cv
938.068 440.585 938.545 437.079 938.403 433.538 cv
938.111 426.351 927.982 406.609 910.7 401.502 cv
908.53 400.862 906.355 403.357 904.253 407.254 cv
cp
.776471 .776471 .294118 rgb
f
898.705 272.286 mo
901.889 268.908 905.713 257.55 909.338 255.181 cv
908.591 261.209 907.831 269.818 907.929 275.839 cv
931.705 270.301 965.935 268.288 990.307 265.179 cv
985.038 259.672 950.517 234.483 947.609 228.5 cv
944.614 229.027 934.077 237.376 931.412 239.067 cv
924.52 244.145 942.632 227.723 944.55 225.801 cv
941.871 224.551 924.816 214.632 905.715 211.548 cv
904.662 212.68 903.656 213.829 902.724 215.015 cv
898.115 220.876 894.34 227.908 889.292 233.038 cv
893.474 226.161 897.156 218.564 900.717 210.91 cv
892.777 210.178 884.675 210.822 877.255 213.907 cv
868.578 217.518 848.769 239.363 849.97 263.764 cv
850.449 273.565 890.344 268.977 898.705 272.286 cv
cp
.564706 .596078 .117647 rgb
f
813.188 234.703 mo
812.985 229.971 817.419 218.857 816.242 214.565 cv
812.935 219.569 807.986 226.499 804.056 230.906 cv
789.927 210.186 769.589 187.927 753.462 168.597 cv
760.906 168.181 798.889 170.424 804.881 168.006 cv
806.77 170.487 809.254 184.052 810.153 187.17 cv
812.024 195.757 809.081 170.903 808.883 168.135 cv
811.676 169.075 830.711 173.612 846.886 184.657 cv
846.943 186.233 846.955 187.789 846.889 189.324 cv
846.561 196.898 844.862 204.762 845.326 212.101 cv
846.626 204.069 848.754 195.846 851.009 187.672 cv
857.38 192.672 862.994 198.808 866.532 206.283 cv
870.67 215.026 871.403 245.099 854.88 262.401 cv
848.243 269.352 821.523 238.083 813.188 234.703 cv
cp
f
814.635 228.234 mo
823.596 222.885 832.579 219.159 842.461 216.763 cv
849.739 214.997 857.484 215.66 864.68 213.744 cv
867.531 221.535 li
874.143 233.581 875.532 249.648 878.551 263.47 cv
873.971 265.021 864.353 268.294 864.353 268.294 cv
864.353 268.294 859.934 253.619 856.141 249.602 cv
857.574 255.457 859.002 264.755 861.735 269.368 cv
848.567 274.571 830.188 276.786 816.016 280.657 cv
815.307 276.032 815.005 270.977 814.49 266.167 cv
809.854 270.777 806.081 285.111 806.081 285.111 cv
806.081 285.111 797.613 287.923 793.147 289.09 cv
794.441 282.105 798.01 273.335 801.12 266.566 cv
795.287 272.543 790.415 282.755 783.114 286.788 cv
777.551 289.86 768.18 288.15 761.933 289.56 cv
773.726 265.184 791.71 241.912 814.635 228.234 cv
cp
.776471 .776471 .294118 rgb
f
805.078 203.484 mo
815.282 201.86 824.947 201.757 834.993 203.232 cv
842.393 204.32 849.392 207.846 856.765 208.761 cv
856.741 217.101 li
858.76 230.826 854.52 246.338 852.574 260.369 cv
847.766 260.094 837.664 259.536 837.664 259.536 cv
837.664 259.536 838.599 244.183 836.441 239.012 cv
835.762 245.013 833.89 254.224 834.852 259.556 cv
820.771 259.464 802.861 254.626 788.303 252.915 cv
789.235 248.334 790.696 243.505 791.873 238.823 cv
785.959 241.384 777.5 253.341 777.5 253.341 cv
777.5 253.341 768.628 252.785 764.061 252.197 cv
767.675 246.166 774.024 239.323 779.258 234.174 cv
771.758 237.561 763.694 245.259 755.493 246.28 cv
749.242 247.057 741.089 241.941 734.772 240.91 cv
754.176 222.595 778.975 207.637 805.078 203.484 cv
cp
.498039 .509804 .0823529 rgb
f
927.75 260.326 mo
921.195 252.002 914.066 245.186 905.646 239.281 cv
899.441 234.93 891.978 232.676 885.903 228.215 cv
880.586 234.44 li
870.306 243.248 863.541 257.75 856.014 269.551 cv
859.769 272.7 867.645 279.328 867.645 279.328 cv
867.645 279.328 876.769 267.249 881.681 264.901 cv
878.349 269.843 873.851 278.005 869.725 281.303 cv
880.263 291.052 896.688 299.939 908.619 308.817 cv
910.857 304.756 912.856 300.142 914.977 295.836 cv
917.742 301.867 916.389 316.665 916.389 316.665 cv
916.389 316.665 923.346 322.434 927.123 325.182 cv
928.292 318.174 927.943 308.653 927.337 301.171 cv
930.755 308.921 931.833 320.274 937.285 326.751 cv
941.442 331.689 950.781 333.565 956.143 337.202 cv
953.415 310.041 944.525 281.619 927.75 260.326 cv
cp
f
857.079 235.749 mo
856.625 234.981 li
854.915 232.082 li
854.915 232.082 854.821 232.135 854.641 232.249 cv
854.494 232.336 li
854.394 232.396 li
854.233 232.51 li
854.12 232.59 854 232.676 853.866 232.77 cv
853.665 232.917 li
853.465 233.064 li
852.53 233.786 851.395 234.855 850.146 236.244 cv
847.667 239.009 844.755 243.104 841.381 248.321 cv
840.553 249.617 839.671 250.98 838.756 252.41 cv
838.516 252.784 838.275 253.163 838.035 253.544 cv
837.975 253.638 837.914 253.732 837.854 253.826 cv
837.681 254.099 837.5 254.38 837.319 254.661 cv
836.866 255.362 836.404 256.063 835.937 256.771 cv
835.536 257.379 835.129 257.994 834.715 258.621 cv
834.515 258.922 834.313 259.229 834.101 259.543 cv
832.604 261.815 831.021 264.206 829.357 266.711 cv
828.201 268.535 827.006 270.418 825.777 272.355 cv
825.169 273.324 824.541 274.306 823.906 275.308 cv
823.586 275.802 823.285 276.31 822.979 276.818 cv
822.664 277.326 822.356 277.839 822.043 278.347 cv
821.855 278.655 821.662 278.968 821.468 279.283 cv
820.399 281.046 819.297 282.849 818.182 284.686 cv
816.886 286.858 815.583 289.095 814.241 291.373 cv
814.16 291.513 814.08 291.654 814 291.793 cv
808.736 300.819 803.219 310.685 797.635 321.233 cv
797.28 321.901 796.919 322.576 796.559 323.244 cv
796.205 323.917 795.851 324.599 795.497 325.274 cv
794.782 326.637 794.067 328.006 793.353 329.382 cv
792.992 330.07 792.631 330.758 792.264 331.453 cv
791.723 332.495 li
791.449 333.016 li
791.154 333.59 li
790.446 334.987 789.738 336.389 789.024 337.792 cv
788.303 339.208 787.588 340.624 786.866 342.047 cv
786.145 343.503 785.437 344.966 784.709 346.443 cv
783.987 347.918 783.266 349.402 782.538 350.891 cv
782.17 351.633 781.816 352.381 781.462 353.129 cv
781.115 353.877 780.761 354.632 780.406 355.38 cv
774.716 367.404 769.164 379.995 763.854 392.928 cv
758.536 405.868 753.46 419.147 748.67 432.534 cv
743.874 445.92 739.372 459.407 735.17 472.76 cv
730.962 486.114 727.061 499.327 723.46 512.165 cv
721.403 519.499 719.439 526.706 717.582 533.747 cv
716.179 539.032 714.837 544.215 713.547 549.291 cv
710.541 561.128 707.829 572.351 705.385 582.718 cv
703.588 590.354 701.956 597.518 700.469 604.142 cv
700.469 627.999 li
722.806 637.794 li
723.273 635.036 723.774 632.03 724.322 628.79 cv
724.683 626.672 725.063 624.461 725.458 622.15 cv
725.745 620.473 726.046 618.749 726.346 616.98 cv
726.393 616.726 726.433 616.479 726.479 616.232 cv
727.929 607.995 729.572 598.75 731.456 588.717 cv
732.945 580.794 734.569 572.378 736.339 563.567 cv
736.526 562.619 736.72 561.67 736.907 560.714 cv
737.268 558.964 737.629 557.202 737.989 555.424 cv
740.414 543.634 743.113 531.249 746.072 518.477 cv
751.99 492.94 759.024 465.9 767.214 439.26 cv
767.661 437.797 768.115 436.334 768.569 434.878 cv
769.091 433.221 769.612 431.565 770.14 429.914 cv
773.372 419.754 776.76 409.695 780.3 399.822 cv
784.909 386.929 789.766 374.371 794.788 362.361 cv
795.103 361.613 795.41 360.865 795.724 360.117 cv
796.031 359.369 796.345 358.62 796.659 357.885 cv
797.301 356.416 797.935 354.953 798.563 353.496 cv
799.197 352.034 799.825 350.584 800.453 349.141 cv
801.108 347.685 801.763 346.229 802.41 344.786 cv
803.065 343.343 803.713 341.907 804.354 340.484 cv
805.002 339.088 805.644 337.704 806.285 336.328 cv
806.933 334.933 807.574 333.55 808.216 332.174 cv
808.536 331.486 808.856 330.805 809.171 330.117 cv
809.284 329.896 809.385 329.669 809.498 329.449 cv
809.712 328.995 809.932 328.54 810.146 328.086 cv
810.433 327.485 810.714 326.884 811.001 326.283 cv
815.811 316.135 820.573 306.657 825.122 297.946 cv
826.338 295.648 827.514 293.384 828.689 291.193 cv
829.885 289.008 831.048 286.884 832.183 284.807 cv
832.47 284.286 832.751 283.765 833.031 283.257 cv
833.312 282.743 833.592 282.235 833.88 281.741 cv
834.24 281.113 834.595 280.485 834.941 279.87 cv
835.148 279.509 835.35 279.149 835.557 278.795 cv
836.104 277.833 836.646 276.884 837.18 275.95 cv
837.721 275 838.248 274.073 838.77 273.157 cv
839.824 271.393 840.847 269.683 841.828 268.027 cv
842.824 266.37 843.772 264.774 844.694 263.238 cv
844.755 263.13 844.821 263.031 844.882 262.923 cv
845.263 262.283 845.63 261.654 845.99 261.046 cv
846.184 260.705 846.385 260.365 846.578 260.031 cv
846.926 259.43 847.267 258.842 847.601 258.261 cv
848.441 256.805 849.237 255.422 849.998 254.113 cv
850.266 253.659 850.525 253.211 850.786 252.777 cv
851.989 250.733 853.098 248.929 854.113 247.372 cv
854.394 246.938 854.674 246.531 854.941 246.136 cv
855.249 245.683 855.549 245.248 855.837 244.847 cv
856.371 244.106 856.858 243.464 857.293 242.917 cv
858.175 241.842 858.836 241.187 859.203 240.867 cv
859.243 240.832 li
859.271 240.806 li
859.31 240.766 li
859.33 240.74 li
859.403 240.686 li
859.551 240.585 li
859.725 240.465 859.817 240.406 859.817 240.406 cv
857.079 235.749 li
cp
.568627 .254902 .258824 rgb
f
756.865 456.333 mo
756.932 456.36 li
756.865 456.333 li
cp
.466667 .196078 .211765 rgb
f
814 291.793 mo
808.736 300.819 803.219 310.685 797.635 321.233 cv
797.28 321.901 796.919 322.576 796.559 323.244 cv
796.205 323.917 795.851 324.599 795.497 325.274 cv
794.782 326.637 794.067 328.006 793.353 329.382 cv
792.992 330.07 792.631 330.758 792.264 331.453 cv
791.723 332.495 li
791.449 333.016 li
791.154 333.59 li
790.446 334.987 789.738 336.389 789.024 337.792 cv
788.303 339.208 787.588 340.624 786.866 342.047 cv
786.145 343.503 785.437 344.966 784.709 346.443 cv
783.987 347.918 783.266 349.402 782.538 350.891 cv
782.17 351.633 781.816 352.381 781.462 353.129 cv
781.115 353.877 780.761 354.632 780.406 355.38 cv
774.716 367.404 769.164 379.995 763.854 392.928 cv
758.536 405.868 753.46 419.147 748.67 432.534 cv
743.874 445.92 739.372 459.407 735.17 472.76 cv
730.962 486.114 727.061 499.327 723.46 512.165 cv
721.403 519.499 719.439 526.706 717.582 533.747 cv
716.179 539.032 714.837 544.215 713.547 549.291 cv
710.541 561.128 707.829 572.351 705.385 582.718 cv
703.588 590.354 701.956 597.518 700.469 604.142 cv
700.469 627.999 li
722.806 637.794 li
723.273 635.036 723.774 632.03 724.322 628.79 cv
724.683 626.672 725.063 624.461 725.458 622.15 cv
725.745 620.473 726.046 618.749 726.346 616.98 cv
726.393 616.726 726.433 616.479 726.479 616.232 cv
723.654 612.798 720.24 608.008 717.582 601.589 cv
713.607 592.003 711.329 578.77 715.244 560.942 cv
716.012 560.968 716.787 561.009 717.582 561.056 cv
723.453 561.403 730.007 562.238 736.339 563.567 cv
736.526 562.619 736.72 561.67 736.907 560.714 cv
728.771 557.054 720.026 552.866 718.497 548.077 cv
717.656 545.438 723.006 530.989 724.556 528.651 cv
728.229 523.1 732.559 523.454 739.525 523.855 cv
731.816 514.824 739.506 501.336 742.351 490.068 cv
744.241 482.586 745.518 460.817 753.554 459.701 cv
752.357 458.766 751.362 456.989 750.087 456.114 cv
752.352 455.86 754.248 455.205 756.866 456.334 cv
756.146 456.013 753.399 453.976 752.117 453.388 cv
753.199 446.434 755.951 438.959 758.002 432.126 cv
761.389 433.048 764.956 434.003 768.569 434.878 cv
769.091 433.221 769.612 431.565 770.14 429.914 cv
766.052 427.096 761.93 424.271 757.815 421.558 cv
763.693 404.584 768.897 387.203 776.519 370.658 cv
779.692 371.86 782.865 373.296 785.991 374.725 cv
783.6 372.461 780.828 371.051 778.009 369.181 cv
784.448 353.683 793.706 339.709 799.658 324.212 cv
802.972 325.882 806.211 327.671 809.498 329.449 cv
809.712 328.995 809.932 328.54 810.146 328.086 cv
810.433 327.485 810.714 326.884 811.001 326.283 cv
807.848 323.67 804.588 321.139 801.655 319.242 cv
804.294 311.647 808.355 304.933 811.262 297.705 cv
813.92 300.097 816.919 302.362 819.351 304.967 cv
816.966 300.946 815.536 296.31 814 291.793 cv
cp
f
841.472 217.398 mo
838.954 230.348 839.438 251.958 837.007 257.855 cv
840.099 261.325 850.799 265.815 852.905 269.701 cv
847.168 268.655 838.965 267.483 833.199 267.319 cv
837.446 292.363 837.858 328.154 839.757 353.711 cv
845.261 348.462 870.889 313.566 876.742 310.797 cv
876.37 307.652 868.848 296.293 867.348 293.437 cv
862.793 286.025 877.706 305.64 879.459 307.727 cv
880.775 304.989 891.02 287.637 894.814 267.85 cv
893.78 266.703 892.723 265.601 891.629 264.577 cv
886.225 259.513 879.664 255.265 874.977 249.772 cv
881.373 254.436 888.482 258.615 895.646 262.666 cv
896.092 259.168 896.301 255.631 896.196 252.115 cv
896.056 247.336 895.326 242.6 893.815 238.063 cv
890.743 228.852 870.715 207.225 847.316 207.399 cv
844.378 207.42 842.616 211.514 841.472 217.398 cv
cp
.776471 .776471 .294118 rgb
f
819.75 625.636 mo
813.498 614.155 li
821.943 625.636 li
849.771 625.636 li
854.748 623.138 859.332 620.371 863.268 617.353 cv
862.068 613.159 861.61 603.122 860.441 599.122 cv
864.208 602.36 867.358 607.741 870.478 612.757 cv
880.508 600.532 894.688 595.592 903.311 581.067 cv
895.204 579.08 866.334 573.491 846.62 577.557 cv
846.95 585.008 848.309 593.003 848.49 598.484 cv
845.153 593.778 842.155 585.805 839.986 579.456 cv
831.463 582.729 826.11 588.8 827.635 599.312 cv
827.186 597.706 822.006 586.631 821.334 584.388 cv
795.087 600.055 782.276 615.517 776.164 625.636 cv
819.75 625.636 li
cp
.564706 .596078 .117647 rgb
f
749.396 625.636 mo
754.002 618.211 758.575 609.085 762.36 599.42 cv
738.732 595.713 li
763.581 596.211 li
768.326 583.345 771.56 569.774 771.56 558.167 cv
767.501 556.566 759.259 550.822 755.374 549.315 cv
760.234 548.297 766.422 549.072 772.301 549.649 cv
768.703 534.25 773.414 519.994 767.136 504.311 cv
760.627 509.535 738.621 529.04 729.851 547.158 cv
735.963 551.43 743.135 555.218 747.594 558.41 cv
741.828 558.193 733.678 555.72 727.32 553.577 cv
724.729 562.332 726.29 570.275 735.559 575.462 cv
734.011 574.841 722.07 572.211 719.882 571.379 cv
716.97 596.348 719.477 614.022 722.856 625.636 cv
749.396 625.636 li
cp
f
750.427 625.636 mo
791.216 625.636 li
792.54 624.004 793.85 622.337 795.131 620.635 cv
773.372 610.707 li
797.172 617.873 li
805.202 606.759 811.968 594.557 815.09 583.377 cv
811.611 580.744 805.219 572.994 801.882 570.498 cv
806.837 570.825 812.588 573.234 818.096 575.372 cv
818.774 559.575 827.146 547.111 825.318 530.317 cv
817.645 533.596 791.201 546.463 777.88 561.554 cv
782.617 567.313 788.507 572.89 791.943 577.163 cv
786.448 575.404 779.264 570.829 773.716 567.055 cv
768.867 574.79 768.232 582.861 775.764 590.35 cv
774.44 589.335 763.647 583.59 761.763 582.201 cv
754.514 599.911 751.43 614.393 750.427 625.636 cv
cp
.776471 .776471 .294118 rgb
f
1127.72 628.643 mo
1133.51 628.643 li
1147.12 610.147 li
1137.04 628.643 li
1188.11 628.643 li
1184.36 619.976 1172.72 600.344 1139.28 580.38 cv
1138.61 582.622 1133.43 593.699 1132.98 595.304 cv
1134.5 584.792 1129.15 578.721 1120.63 575.448 cv
1118.46 581.797 1115.46 589.77 1112.12 594.476 cv
1112.3 588.995 1113.66 580.999 1113.99 573.549 cv
1094.28 569.483 1065.41 575.073 1057.3 577.058 cv
1065.93 591.584 1080.11 596.524 1090.13 608.749 cv
1093.25 603.733 1096.41 598.352 1100.17 595.115 cv
1099 599.114 1098.54 609.15 1097.35 613.345 cv
1105.46 619.567 1116.3 624.724 1127.72 628.643 cv
cp
.564706 .596078 .117647 rgb
f
1194.54 580.778 mo
1190.7 582.953 1185.72 585.673 1184.85 586.342 cv
1192.38 578.853 1191.75 570.783 1186.9 563.047 cv
1181.35 566.822 1174.17 571.396 1168.67 573.156 cv
1172.11 568.882 1178 563.305 1182.73 557.546 cv
1169.41 542.455 1142.97 529.588 1135.29 526.309 cv
1133.47 543.103 1141.84 555.567 1142.52 571.365 cv
1148.03 569.226 1153.78 566.816 1158.73 566.491 cv
1155.39 568.986 1149 576.736 1145.52 579.37 cv
1148.64 590.549 1155.41 602.751 1163.44 613.866 cv
1187.24 606.7 li
1165.48 616.627 li
1168.67 620.866 1172.03 624.908 1175.4 628.643 cv
1194.54 628.643 li
1194.54 580.778 li
cp
.776471 .776471 .294118 rgb
f
715.244 560.942 mo
711.329 578.77 713.607 592.003 717.582 601.589 cv
717.582 561.056 li
716.787 561.009 716.012 560.968 715.244 560.942 cv
cp
944.313 622.15 mo
717.582 622.15 li
717.582 104.963 li
944.313 104.963 li
944.313 622.15 li
cp
699.62 85.4506 mo
699.62 641.662 li
962.268 641.662 li
962.268 85.4506 li
699.62 85.4506 li
cp
715.244 560.942 mo
711.329 578.77 713.607 592.003 717.582 601.589 cv
717.582 561.056 li
716.787 561.009 716.012 560.968 715.244 560.942 cv
cp
1 1 1 rgb
f
964.137 622.152 mo
1190.87 622.152 li
1190.87 104.966 li
964.137 104.966 li
964.137 622.152 li
cp
1208.83 641.664 mo
946.179 641.664 li
946.179 85.4535 li
1208.83 85.4535 li
1208.83 641.664 li
cp
f
1207.71 671.726 mo
700.732 671.726 li
700.732 652.689 li
1207.71 652.689 li
1207.71 671.726 li
cp
.819608 .827451 .827451 rgb
f
1222.74 658.701 mo
685.703 658.701 li
685.703 635.656 li
1222.74 635.656 li
1222.74 658.701 li
cp
.909804 .92549 .929412 rgb
f
303.857 181.951 mo
329.004 272.133 li
372.524 259.998 li
347.378 169.816 li
303.857 181.951 li
cp
.27451 .556863 .501961 rgb
f
338.844 172.195 mo
362.011 255.277 li
363.104 259.199 367.812 261.313 372.524 259.998 cv
377.236 258.684 380.171 254.44 379.077 250.519 cv
355.911 167.436 li
338.844 172.195 li
cp
.352941 .686275 .623529 rgb
f
359.488 190.163 mo
348.395 193.256 li
346.019 184.736 li
357.112 181.642 li
359.488 190.163 li
cp
1 .682353 .262745 rgb
f
286.204 158.966 mo
286.204 266.596 li
331.384 266.596 li
331.384 158.966 li
286.204 158.966 li
cp
.360784 .54902 .215686 rgb
f
322.57 158.966 mo
322.541 159.242 322.525 159.52 322.525 159.801 cv
322.525 258.252 li
322.525 262.861 326.491 266.596 331.384 266.596 cv
336.277 266.596 340.243 262.861 340.243 258.252 cv
340.243 159.801 li
340.243 159.52 340.227 159.242 340.197 158.966 cv
322.57 158.966 li
cp
.541176 .737255 .368627 rgb
f
335.813 186.98 mo
326.068 186.98 li
326.068 164.126 li
335.813 164.126 li
335.813 186.98 li
cp
1 1 1 rgb
f
244.568 185.505 mo
244.568 267.334 li
289.748 267.334 li
289.748 185.505 li
244.568 185.505 li
cp
.27451 .556863 .501961 rgb
f
280.891 185.505 mo
280.891 260.89 li
280.891 264.449 284.856 267.333 289.748 267.333 cv
294.642 267.333 298.608 264.449 298.608 260.89 cv
298.608 185.505 li
280.891 185.505 li
cp
.505882 .886275 .886275 rgb
f
295.949 205.479 mo
284.433 205.479 li
284.433 197.747 li
295.949 197.747 li
295.949 205.479 li
cp
.866667 .278431 .403922 rgb
f
221.684 196.337 mo
221.684 268.73 li
253.414 268.73 li
253.414 196.337 li
221.684 196.337 li
cp
.160784 .34902 .537255 rgb
f
247.192 196.337 mo
247.192 263.03 li
247.192 266.178 249.979 268.729 253.414 268.729 cv
256.85 268.729 259.636 266.178 259.636 263.03 cv
259.636 196.337 li
247.192 196.337 li
cp
.243137 .486275 .776471 rgb
f
257.77 214.007 mo
249.681 214.007 li
249.681 207.167 li
257.77 207.167 li
257.77 214.007 li
cp
1 .682353 .262745 rgb
f
201.152 185.506 mo
201.152 268.73 li
232.883 268.73 li
232.883 185.506 li
201.152 185.506 li
cp
.117647 .286275 .407843 rgb
f
226.693 185.506 mo
226.672 185.719 226.661 185.934 226.661 186.153 cv
226.661 262.278 li
226.661 265.841 229.446 268.729 232.883 268.729 cv
236.319 268.729 239.104 265.841 239.104 262.278 cv
239.104 186.153 li
239.104 185.934 239.094 185.719 239.072 185.506 cv
226.693 185.506 li
cp
.278431 .54902 .74902 rgb
f
235.993 196.127 mo
235.993 189.496 li
229.149 189.496 li
229.149 196.127 li
235.993 196.127 li
cp
.117647 .286275 .407843 rgb
f
229.149 199.689 mo
229.149 207.167 li
235.993 207.167 li
235.993 199.689 li
229.149 199.689 li
cp
f
171.912 206.028 mo
171.912 269.299 li
203.643 269.299 li
203.643 206.028 li
171.912 206.028 li
cp
.243137 .486275 .776471 rgb
f
197.42 206.028 mo
197.42 264.318 li
197.42 267.069 200.206 269.299 203.643 269.299 cv
207.078 269.299 209.863 267.069 209.863 264.318 cv
209.863 206.028 li
197.42 206.028 li
cp
.286275 .603922 .917647 rgb
f
207.996 221.472 mo
199.909 221.472 li
199.909 215.494 li
207.996 215.494 li
207.996 221.472 li
cp
1 1 1 rgb
f
402.697 268.664 mo
402.697 274.469 400.314 279.172 397.374 279.172 cv
153.842 279.172 li
150.903 279.172 148.521 274.469 148.521 268.664 cv
148.521 265.758 149.115 263.138 150.079 261.234 cv
151.044 259.33 152.371 258.156 153.842 258.156 cv
397.374 258.156 li
400.314 258.156 402.697 262.86 402.697 268.664 cv
cp
.788235 .788235 .709804 rgb
f
402.697 268.664 mo
402.697 274.469 400.314 279.172 397.374 279.172 cv
206.431 279.172 li
203.491 279.172 201.109 274.469 201.109 268.664 cv
201.109 265.758 201.703 263.138 202.668 261.234 cv
203.632 259.33 204.96 258.156 206.431 258.156 cv
397.374 258.156 li
400.314 258.156 402.697 262.86 402.697 268.664 cv
cp
.654902 .682353 .686275 rgb
f
1269.65 831.829 mo
1269.65 846.586 1003.42 858.549 675 858.549 cv
346.585 858.549 80.3516 846.586 80.3516 831.829 cv
80.3516 817.073 346.585 805.11 675 805.11 cv
1003.42 805.11 1269.65 817.073 1269.65 831.829 cv
cp
f
1093.5 829.783 mo
1093.5 836.124 882.439 841.265 622.078 841.265 cv
361.716 841.265 150.651 836.124 150.651 829.783 cv
150.651 823.442 361.716 818.3 622.078 818.3 cv
882.439 818.3 1093.5 823.442 1093.5 829.783 cv
cp
.505882 .52549 .529412 rgb
f
537.354 353.515 mo
518.372 475.201 li
517.46 481.048 521.043 485.786 526.386 485.786 cv
699.9 485.794 li
700.292 485.794 700.677 485.772 701.066 485.714 cv
705.974 485.099 710.52 480.632 711.522 475.211 cv
734.025 353.525 li
735.106 347.684 731.56 342.946 726.11 342.946 cv
548.876 342.936 li
543.421 342.936 538.267 347.673 537.354 353.515 cv
cp
.0509804 .0627451 .0862745 rgb
f
505.793 475.203 mo
504.892 481.046 508.631 485.784 514.145 485.784 cv
693.373 485.793 li
698.886 485.793 704.228 481.057 705.304 475.213 cv
727.692 353.527 li
728.769 347.684 725.074 342.947 719.442 342.947 cv
536.374 342.937 li
530.741 342.936 525.445 347.673 524.546 353.517 cv
505.793 475.203 li
cp
.262745 .266667 .247059 rgb
f
512.248 458.172 mo
511.488 463.093 515.206 467.083 520.552 467.083 cv
694.377 467.093 li
699.725 467.093 704.793 463.103 705.695 458.183 cv
724.512 355.687 li
725.415 350.766 721.734 346.775 716.291 346.775 cv
539.339 346.765 li
533.895 346.765 528.864 350.755 528.104 355.676 cv
512.248 458.172 li
cp
.847059 .839216 .823529 rgb
f
535.664 352.02 mo
517.818 466.618 li
698.477 466.626 li
719.418 352.029 li
535.664 352.02 li
cp
.666667 .678431 .631373 rgb
f
651.062 430.86 mo
650.917 431.69 li
619.401 431.689 li
619.542 430.859 li
651.062 430.86 li
cp
1 1 1 rgb
f
659.228 430.86 mo
670.293 430.861 li
670.146 431.691 li
659.083 431.691 li
659.228 430.86 li
cp
f
658.354 435.841 mo
669.41 435.841 li
669.265 436.671 li
658.209 436.67 li
658.354 435.841 li
cp
f
650.193 435.84 mo
650.049 436.67 li
618.557 436.668 li
618.697 435.838 li
650.193 435.84 li
cp
f
657.479 440.82 mo
668.528 440.821 li
668.381 441.651 li
657.334 441.65 li
657.479 440.82 li
cp
f
649.325 440.82 mo
649.18 441.65 li
617.712 441.648 li
617.853 440.818 li
649.325 440.82 li
cp
f
656.604 445.8 mo
667.646 445.8 li
667.498 446.63 li
656.459 446.629 li
656.604 445.8 li
cp
f
648.457 445.8 mo
648.312 446.629 li
616.866 446.627 li
617.008 445.797 li
648.457 445.8 li
cp
f
655.732 450.779 mo
666.763 450.78 li
666.616 451.609 li
655.586 451.609 li
655.732 450.779 li
cp
f
647.589 450.779 mo
647.443 451.609 li
635.262 451.608 li
635.406 450.778 li
647.589 450.779 li
cp
f
654.857 455.759 mo
665.882 455.759 li
665.733 456.59 li
654.711 456.589 li
654.857 455.759 li
cp
f
646.721 455.758 mo
646.575 456.588 li
634.403 456.587 li
634.546 455.757 li
646.721 455.758 li
cp
f
650.661 433.161 mo
650.516 433.99 li
619.012 433.988 li
619.152 433.158 li
650.661 433.161 li
cp
f
658.824 433.161 mo
669.886 433.161 li
669.739 433.991 li
658.679 433.991 li
658.824 433.161 li
cp
f
657.95 438.14 mo
669.003 438.141 li
668.856 438.971 li
657.805 438.97 li
657.95 438.14 li
cp
f
649.792 438.14 mo
649.647 438.97 li
618.166 438.968 li
618.307 438.138 li
649.792 438.14 li
cp
f
657.075 443.12 mo
668.121 443.12 li
667.974 443.951 li
656.93 443.95 li
657.075 443.12 li
cp
f
648.924 443.119 mo
648.779 443.949 li
617.322 443.948 li
617.463 443.118 li
648.924 443.119 li
cp
f
656.202 448.099 mo
667.237 448.1 li
667.091 448.93 li
656.056 448.929 li
656.202 448.099 li
cp
f
648.056 448.099 mo
647.912 448.928 li
616.476 448.926 li
616.617 448.097 li
648.056 448.099 li
cp
f
655.327 453.078 mo
666.356 453.078 li
666.209 453.91 li
655.182 453.91 li
655.327 453.078 li
cp
f
647.188 453.078 mo
647.042 453.909 li
634.865 453.908 li
635.007 453.078 li
647.188 453.078 li
cp
f
654.452 458.059 mo
665.473 458.06 li
665.326 458.889 li
654.307 458.888 li
654.452 458.059 li
cp
f
646.319 458.058 mo
646.174 458.888 li
634.006 458.887 li
634.149 458.057 li
646.319 458.058 li
cp
f
536.957 406.099 mo
548.021 406.1 li
547.88 406.93 li
536.816 406.929 li
536.957 406.099 li
cp
f
536.122 411.079 mo
547.18 411.079 li
547.04 411.909 li
535.983 411.909 li
536.122 411.079 li
cp
f
535.29 416.058 mo
546.339 416.059 li
546.198 416.889 li
535.151 416.888 li
535.29 416.058 li
cp
f
534.457 421.037 mo
545.498 421.038 li
545.357 421.869 li
534.319 421.869 li
534.457 421.037 li
cp
f
533.624 426.018 mo
544.657 426.018 li
544.516 426.848 li
533.484 426.847 li
533.624 426.018 li
cp
f
532.791 430.997 mo
543.815 430.997 li
543.675 431.828 li
532.652 431.828 li
532.791 430.997 li
cp
f
536.57 408.399 mo
547.631 408.4 li
547.492 409.229 li
536.433 409.229 li
536.57 408.399 li
cp
f
535.737 413.378 mo
546.791 413.379 li
546.651 414.21 li
535.599 414.209 li
535.737 413.378 li
cp
f
534.906 418.358 mo
545.95 418.358 li
545.811 419.189 li
534.767 419.188 li
534.906 418.358 li
cp
f
534.072 423.337 mo
545.108 423.337 li
544.969 424.168 li
533.934 424.167 li
534.072 423.337 li
cp
f
533.239 428.317 mo
544.268 428.318 li
544.128 429.148 li
533.102 429.148 li
533.239 428.317 li
cp
f
532.406 433.297 mo
543.427 433.298 li
543.286 434.127 li
532.268 434.126 li
532.406 433.297 li
cp
f
542.396 370.743 mo
553.461 370.743 li
553.323 371.573 li
542.26 371.573 li
542.396 370.743 li
cp
f
541.575 375.722 mo
552.633 375.723 li
552.495 376.552 li
541.438 376.552 li
541.575 375.722 li
cp
f
540.757 380.702 mo
551.805 380.702 li
551.666 381.532 li
540.618 381.532 li
540.757 380.702 li
cp
f
539.935 385.682 mo
550.977 385.682 li
550.838 386.512 li
539.797 386.511 li
539.935 385.682 li
cp
f
539.114 390.661 mo
550.147 390.661 li
550.009 391.492 li
538.978 391.491 li
539.114 390.661 li
cp
f
538.294 395.641 mo
549.317 395.641 li
549.182 396.471 li
538.157 396.471 li
538.294 395.641 li
cp
f
542.018 373.041 mo
553.078 373.042 li
552.94 373.872 li
541.881 373.872 li
542.018 373.041 li
cp
f
541.197 378.022 mo
552.251 378.023 li
552.112 378.853 li
541.061 378.852 li
541.197 378.022 li
cp
f
540.376 383.001 mo
551.422 383.001 li
551.284 383.831 li
540.24 383.83 li
540.376 383.001 li
cp
f
539.556 387.981 mo
550.593 387.982 li
550.456 388.811 li
539.419 388.811 li
539.556 387.981 li
cp
f
538.736 392.96 mo
549.765 392.961 li
549.627 393.791 li
538.599 393.79 li
538.736 392.96 li
cp
f
537.916 397.94 mo
548.936 397.941 li
548.798 398.771 li
537.778 398.771 li
537.916 397.94 li
cp
f
558.354 371.282 mo
569.421 371.282 li
569.285 372.112 li
558.221 372.111 li
558.354 371.282 li
cp
f
557.548 376.261 mo
568.604 376.262 li
568.469 377.092 li
557.412 377.091 li
557.548 376.261 li
cp
f
556.739 381.24 mo
567.788 381.241 li
567.652 382.071 li
556.605 382.071 li
556.739 381.24 li
cp
f
555.932 386.22 mo
566.973 386.22 li
566.837 387.05 li
555.798 387.05 li
555.932 386.22 li
cp
f
555.123 391.2 mo
566.155 391.2 li
566.02 392.031 li
554.989 392.03 li
555.123 391.2 li
cp
f
554.316 396.18 mo
565.341 396.18 li
565.204 397.01 li
554.181 397.009 li
554.316 396.18 li
cp
f
557.982 373.581 mo
569.043 373.581 li
568.908 374.412 li
557.848 374.411 li
557.982 373.581 li
cp
f
557.174 378.561 mo
568.227 378.562 li
568.092 379.392 li
557.04 379.391 li
557.174 378.561 li
cp
f
556.367 383.539 mo
567.411 383.54 li
567.275 384.37 li
556.231 384.37 li
556.367 383.539 li
cp
f
555.559 388.52 mo
566.596 388.52 li
566.459 389.35 li
555.423 389.35 li
555.559 388.52 li
cp
f
554.751 393.499 mo
565.779 393.499 li
565.643 394.33 li
554.617 394.329 li
554.751 393.499 li
cp
f
553.943 398.479 mo
564.964 398.479 li
564.827 399.309 li
553.809 399.308 li
553.943 398.479 li
cp
f
574.555 371.202 mo
603.328 371.203 li
603.193 372.032 li
574.425 372.031 li
574.555 371.202 li
cp
f
573.772 376.182 mo
602.523 376.183 li
602.39 377.013 li
573.642 377.011 li
573.772 376.182 li
cp
f
572.99 381.16 mo
601.72 381.161 li
601.586 381.993 li
572.86 381.992 li
572.99 381.16 li
cp
f
572.208 386.14 mo
600.917 386.142 li
600.783 386.971 li
572.079 386.97 li
572.208 386.14 li
cp
f
571.426 391.12 mo
600.112 391.121 li
599.979 391.952 li
571.296 391.951 li
571.426 391.12 li
cp
f
570.644 396.1 mo
599.31 396.101 li
599.175 396.931 li
570.513 396.929 li
570.644 396.1 li
cp
f
574.193 373.501 mo
602.956 373.502 li
602.822 374.332 li
574.063 374.331 li
574.193 373.501 li
cp
f
573.411 378.482 mo
602.152 378.483 li
602.02 379.312 li
573.281 379.311 li
573.411 378.482 li
cp
f
572.629 383.46 mo
601.349 383.461 li
601.215 384.291 li
572.498 384.289 li
572.629 383.46 li
cp
f
571.847 388.44 mo
600.545 388.441 li
600.411 389.271 li
571.716 389.27 li
571.847 388.44 li
cp
f
571.064 393.419 mo
599.742 393.42 li
599.607 394.251 li
570.934 394.249 li
571.064 393.419 li
cp
f
570.282 398.399 mo
598.938 398.401 li
598.804 399.231 li
570.152 399.229 li
570.282 398.399 li
cp
f
622.586 375.874 mo
622.422 376.851 li
609.313 376.85 li
609.478 375.873 li
622.586 375.874 li
cp
f
625.982 375.874 mo
630.585 375.874 li
630.42 376.851 li
625.817 376.851 li
625.982 375.874 li
cp
f
624.988 381.739 mo
629.588 381.739 li
629.421 382.717 li
624.822 382.716 li
624.988 381.739 li
cp
f
621.596 381.739 mo
621.429 382.716 li
608.332 382.715 li
608.497 381.738 li
621.596 381.739 li
cp
f
623.994 387.602 mo
628.589 387.602 li
628.422 388.579 li
623.829 388.579 li
623.994 387.602 li
cp
f
620.604 387.602 mo
620.438 388.579 li
607.354 388.579 li
607.517 387.601 li
620.604 387.602 li
cp
f
535.664 352.02 mo
533.933 363.132 li
717.388 363.142 li
719.418 352.029 li
535.664 352.02 li
cp
f
633.844 397.446 mo
628.944 425.999 li
671.333 426.001 li
676.411 397.448 li
633.844 397.446 li
cp
.713726 .945098 1 rgb
f
665.782 426 mo
671.333 426.001 li
674.266 409.512 li
668.7 409.512 li
665.782 426 li
cp
.54902 .521569 .521569 rgb
f
660.231 426 mo
666.792 426.001 li
669.001 413.534 li
662.428 413.534 li
660.231 426 li
cp
f
656.194 426 mo
661.242 426 li
665.354 402.674 li
660.291 402.674 li
656.194 426 li
cp
f
649.635 426 mo
658.213 426 li
661.112 409.512 li
652.514 409.511 li
649.635 426 li
cp
f
644.588 425.999 mo
651.652 426 li
653.342 416.348 li
646.267 416.348 li
644.588 425.999 li
cp
f
638.028 425.999 mo
645.093 425.999 li
648.521 406.293 li
641.437 406.292 li
638.028 425.999 li
cp
f
630.964 425.999 mo
641.562 425.999 li
643.373 415.543 li
632.76 415.542 li
630.964 425.999 li
cp
f
628.944 425.999 mo
634.496 425.999 li
636.715 413.129 li
631.153 413.129 li
628.944 425.999 li
cp
f
573.985 431.02 mo
569.645 458.04 li
609.766 458.042 li
614.267 431.022 li
573.985 431.02 li
cp
.713726 .945098 1 rgb
f
572.754 438.688 mo
569.645 458.04 li
609.766 458.042 li
610.784 451.927 li
607.653 449.247 604.702 447.168 602.677 447.367 cv
600.266 447.602 596.789 452.291 594.923 451.991 cv
593.767 451.8 594.371 449.684 593.587 449.194 cv
591.997 448.207 590.378 449.466 588.858 448.934 cv
587.478 448.451 585.26 445.147 583.772 444.043 cv
581.719 442.524 579.863 441.592 577.513 440.439 cv
575.465 439.438 574.275 438.433 572.754 438.688 cv
cp
.482353 .678431 .333333 rgb
f
598.322 447.474 mo
599.363 448.778 601.346 449.255 603.219 448.854 cv
603.286 448.695 li
603.301 448.854 li
605.041 449.255 607.183 448.779 608.652 447.474 cv
606.786 447.617 605.197 446.959 604.446 444.874 cv
605.813 445.391 607.597 445.164 608.938 444.059 cv
606.866 444.211 605.03 440.396 605.097 439.967 cv
605.784 440.222 606.563 440.13 607.35 439.701 cv
606.692 439.244 606.014 438.639 605.501 437.843 cv
605.383 437.664 605.273 437.474 605.175 437.276 cv
605.012 437.474 604.837 437.664 604.661 437.843 cv
603.886 438.639 603.006 439.244 602.198 439.701 cv
602.842 440.13 603.59 440.222 604.362 439.967 cv
604.287 440.396 601.189 444.21 599.169 444.059 cv
600.142 445.164 601.852 445.391 603.389 444.874 cv
601.948 446.958 600.144 447.617 598.322 447.474 cv
cp
f
585.041 451.532 mo
586.082 452.837 588.064 453.314 589.935 452.912 cv
590.003 452.753 li
590.019 452.912 li
591.759 453.315 593.896 452.837 595.365 451.533 cv
593.5 451.676 591.908 451.018 591.156 448.933 cv
592.523 449.451 594.306 449.223 595.643 448.118 cv
593.573 448.27 591.73 444.454 591.797 444.026 cv
591.799 444.026 li
592.484 444.282 593.263 444.19 594.047 443.76 cv
593.391 443.302 592.714 442.698 592.197 441.902 cv
592.079 441.723 591.969 441.533 591.87 441.335 cv
591.708 441.533 591.535 441.723 591.358 441.902 cv
590.583 442.698 589.706 443.302 588.899 443.759 cv
589.544 444.189 590.293 444.281 591.063 444.026 cv
590.988 444.454 587.899 448.269 585.879 448.118 cv
586.854 449.223 588.562 449.45 590.099 448.933 cv
588.663 451.017 586.859 451.675 585.041 451.532 cv
cp
f
577.578 443.539 mo
578.624 444.844 580.608 445.322 582.48 444.92 cv
582.549 444.76 li
582.564 444.92 li
584.307 445.322 586.446 444.845 587.914 443.54 cv
586.046 443.683 584.456 443.025 583.696 440.941 cv
585.066 441.457 586.851 441.231 588.188 440.124 cv
586.115 440.278 584.267 436.461 584.332 436.033 cv
585.021 436.287 585.799 436.197 586.585 435.767 cv
585.927 435.31 585.245 434.705 584.729 433.91 cv
584.609 433.731 584.5 433.54 584.401 433.342 cv
584.238 433.54 584.065 433.731 583.889 433.91 cv
583.114 434.705 582.236 435.31 581.431 435.767 cv
582.076 436.197 582.826 436.287 583.598 436.033 cv
583.523 436.462 580.436 440.277 578.413 440.124 cv
579.39 441.23 581.101 441.457 582.638 440.941 cv
581.204 443.025 579.399 443.683 577.578 443.539 cv
cp
f
557.852 360.597 mo
565.54 360.598 li
566.509 354.561 li
558.813 354.56 li
557.852 360.597 li
cp
1 1 1 rgb
f
547.602 360.597 mo
555.29 360.597 li
556.248 354.56 li
548.554 354.56 li
547.602 360.597 li
cp
.666667 .678431 .631373 rgb
f
537.864 360.596 mo
545.553 360.596 li
546.502 354.559 li
538.809 354.559 li
537.864 360.596 li
cp
f
708.186 360.078 mo
714.822 360.078 li
715.591 355.862 li
708.948 355.861 li
708.186 360.078 li
cp
f
673.103 462.794 mo
697.332 462.795 li
714.676 367.744 li
690.103 367.742 li
673.103 462.794 li
cp
1 1 1 rgb
f
692.397 372.341 mo
710.718 372.342 li
710.996 370.808 li
692.672 370.807 li
692.397 372.341 li
cp
.666667 .678431 .631373 rgb
f
696.523 375.408 mo
710.159 375.408 li
710.438 373.875 li
696.799 373.874 li
696.523 375.408 li
cp
f
695.143 383.073 mo
708.765 383.074 li
709.044 381.54 li
695.42 381.539 li
695.143 383.073 li
cp
f
693.764 390.738 mo
707.368 390.739 li
707.648 389.206 li
694.039 389.205 li
693.764 390.738 li
cp
f
692.383 398.404 mo
705.975 398.405 li
706.254 396.871 li
692.659 396.87 li
692.383 398.404 li
cp
f
694.246 388.056 mo
707.856 388.056 li
708.137 386.523 li
694.522 386.523 li
694.246 388.056 li
cp
f
691.005 406.069 mo
704.579 406.071 li
704.857 404.537 li
691.28 404.536 li
691.005 406.069 li
cp
f
678.555 446.314 mo
697.834 446.314 li
704.323 410.669 li
684.944 410.667 li
678.555 446.314 li
cp
f
689.58 451.202 mo
689.279 452.861 li
677.642 452.86 li
677.939 451.201 li
689.58 451.202 li
cp
1 1 1 rgb
f
692.597 451.202 mo
696.682 451.202 li
696.38 452.862 li
692.296 452.862 li
692.597 451.202 li
cp
f
472.672 472.367 mo
472.672 474.06 474.046 475.432 475.738 475.432 cv
690.375 475.444 li
692.068 475.444 693.441 474.071 693.441 472.378 cv
693.441 470.685 692.069 469.312 690.375 469.312 cv
475.739 469.301 li
474.046 469.301 472.672 470.673 472.672 472.367 cv
cp
.254902 .266667 .211765 rgb
f
463.472 479.648 mo
463.471 483.354 466.73 486.358 470.756 486.358 cv
698.038 486.37 li
699.112 486.37 700.131 486.159 701.051 485.766 cv
703.568 484.717 705.322 482.377 705.322 479.661 cv
705.322 477.807 704.506 476.129 703.19 474.915 cv
701.873 473.703 700.051 472.951 698.039 472.951 cv
470.757 472.94 li
466.731 472.94 463.472 475.942 463.472 479.648 cv
cp
.262745 .266667 .247059 rgb
f
629.818 479.657 mo
629.818 482.437 631.651 484.82 634.263 485.836 cv
635.136 486.181 636.091 486.367 637.097 486.367 cv
698.038 486.37 li
699.112 486.37 700.131 486.159 701.051 485.766 cv
705.845 485.2 709.566 481.085 709.566 476.091 cv
709.566 472.952 li
637.098 472.949 li
633.079 472.948 629.818 475.951 629.818 479.657 cv
cp
.0509804 .0627451 .0862745 rgb
f
871.658 454.499 mo
871.416 454.507 li
787.03 454.501 li
783.282 454.501 780.241 450.279 780.242 445.073 cv
780.242 442.465 781.004 440.112 782.231 438.406 cv
783.461 436.701 785.153 435.643 787.031 435.643 cv
871.417 435.648 li
871.66 435.655 li
869.918 435.779 868.361 436.811 867.21 438.411 cv
865.981 440.116 865.221 442.469 865.221 445.078 cv
865.221 450.119 868.069 454.245 871.658 454.499 cv
cp
1 .996078 .913725 rgb
f
868.007 438.61 mo
867.891 438.736 867.775 438.887 867.665 439.037 cv
867.557 439.19 867.453 439.341 867.356 439.502 cv
801.428 439.499 li
801.428 438.607 li
868.007 438.61 li
cp
.717647 .709804 .619608 rgb
f
866.118 442.623 mo
866.061 442.918 866.003 443.213 865.965 443.516 cv
801.747 443.513 li
801.747 442.62 li
866.118 442.623 li
cp
f
866.118 447.53 mo
802.068 447.526 li
802.068 446.634 li
865.964 446.637 li
866.002 446.941 866.055 447.244 866.118 447.53 cv
cp
f
867.992 451.543 mo
802.39 451.539 li
802.39 450.648 li
867.351 450.651 li
867.551 450.972 867.768 451.276 867.992 451.543 cv
cp
f
787.026 453.609 mo
783.64 453.608 780.884 449.782 780.884 445.073 cv
780.884 442.798 781.528 440.647 782.689 439.034 cv
783.845 437.418 785.394 436.537 787.028 436.537 cv
867.833 436.541 li
867.448 436.898 867.087 437.318 866.754 437.781 cv
866.563 438.048 866.383 438.324 866.221 438.61 cv
866.056 438.897 865.895 439.19 865.751 439.502 cv
865.304 440.465 864.982 441.517 864.783 442.623 cv
864.738 442.918 864.692 443.221 864.663 443.516 cv
864.604 444.034 864.578 444.551 864.578 445.078 cv
864.578 445.611 864.604 446.128 864.663 446.637 cv
864.692 446.941 864.737 447.234 864.789 447.53 cv
864.982 448.653 865.314 449.706 865.751 450.651 cv
865.895 450.962 866.047 451.257 866.215 451.543 cv
866.669 452.336 867.216 453.041 867.825 453.613 cv
787.026 453.609 li
cp
867.992 451.543 mo
867.768 451.276 867.551 450.972 867.351 450.651 cv
866.8 449.749 866.369 448.698 866.118 447.53 cv
866.055 447.244 866.002 446.941 865.964 446.637 cv
865.899 446.128 865.861 445.611 865.861 445.078 cv
865.862 444.551 865.895 444.024 865.965 443.516 cv
866.003 443.213 866.061 442.918 866.118 442.623 cv
866.37 441.483 866.786 440.422 867.356 439.502 cv
867.453 439.341 867.557 439.19 867.665 439.037 cv
867.775 438.887 867.891 438.736 868.007 438.61 cv
869.04 437.37 870.329 436.649 871.692 436.55 cv
871.711 434.767 li
871.613 434.757 871.517 434.757 871.414 434.757 cv
787.028 434.753 li
785.045 434.753 783.186 435.824 781.777 437.776 cv
780.373 439.729 779.602 442.316 779.602 445.073 cv
779.602 450.763 782.933 455.392 787.026 455.392 cv
871.413 455.396 li
871.516 455.396 871.612 455.396 871.71 455.388 cv
871.691 453.604 li
870.277 453.506 868.992 452.738 867.992 451.543 cv
cp
.14902 .317647 .290196 rgb
f
806.994 455.322 mo
806.775 455.33 li
729.934 455.327 li
726.52 455.327 723.755 450.734 723.756 445.07 cv
723.756 442.233 724.446 439.673 725.566 437.817 cv
726.685 435.963 728.226 434.811 729.936 434.812 cv
806.776 434.816 li
806.995 434.825 li
805.408 434.959 803.991 436.083 802.943 437.821 cv
801.825 439.677 801.132 442.236 801.131 445.074 cv
801.131 450.559 803.729 455.046 806.994 455.322 cv
cp
f
895.549 485.031 mo
895.307 485.043 li
810.921 485.038 li
807.171 485.038 804.132 478.702 804.132 470.885 cv
804.133 466.972 804.896 463.439 806.122 460.88 cv
807.352 458.319 809.044 456.732 810.922 456.732 cv
895.308 456.737 li
895.551 456.748 li
893.809 456.934 892.251 458.484 891.102 460.885 cv
889.871 463.444 889.111 466.976 889.111 470.889 cv
889.11 478.458 891.96 484.65 895.549 485.031 cv
cp
1 .996078 .913725 rgb
f
891.896 461.184 mo
891.781 461.372 891.666 461.599 891.556 461.826 cv
891.447 462.055 891.344 462.28 891.248 462.523 cv
825.319 462.519 li
825.319 461.18 li
891.896 461.184 li
cp
.717647 .709804 .619608 rgb
f
890.009 467.207 mo
889.951 467.65 889.894 468.092 889.855 468.546 cv
825.638 468.542 li
825.638 467.203 li
890.009 467.207 li
cp
f
890.009 474.572 mo
825.959 474.567 li
825.959 473.228 li
889.854 473.233 li
889.894 473.687 889.944 474.143 890.009 474.572 cv
cp
f
891.883 480.596 mo
826.28 480.591 li
826.28 479.252 li
891.241 479.257 li
891.441 479.739 891.659 480.195 891.883 480.596 cv
cp
f
810.917 483.698 mo
807.529 483.698 804.774 477.953 804.775 470.885 cv
804.775 467.472 805.419 464.245 806.579 461.821 cv
807.735 459.398 809.284 458.074 810.919 458.074 cv
891.724 458.078 li
891.339 458.615 890.978 459.243 890.645 459.938 cv
890.453 460.339 890.273 460.757 890.112 461.184 cv
889.945 461.613 889.786 462.055 889.643 462.523 cv
889.193 463.968 888.873 465.546 888.674 467.207 cv
888.629 467.65 888.583 468.105 888.553 468.546 cv
888.495 469.324 888.469 470.099 888.469 470.889 cv
888.469 471.693 888.494 472.47 888.553 473.232 cv
888.583 473.687 888.628 474.129 888.68 474.572 cv
888.872 476.257 889.205 477.838 889.642 479.257 cv
889.784 479.725 889.938 480.167 890.106 480.596 cv
890.561 481.786 891.106 482.845 891.716 483.702 cv
810.917 483.698 li
cp
891.883 480.596 mo
891.659 480.195 891.441 479.739 891.241 479.257 cv
890.689 477.906 890.26 476.325 890.009 474.572 cv
889.944 474.143 889.894 473.687 889.854 473.233 cv
889.791 472.47 889.753 471.694 889.753 470.89 cv
889.753 470.1 889.786 469.31 889.855 468.546 cv
889.894 468.092 889.951 467.65 890.009 467.207 cv
890.261 465.495 890.677 463.902 891.248 462.523 cv
891.344 462.28 891.447 462.055 891.556 461.826 cv
891.666 461.599 891.781 461.372 891.896 461.184 cv
892.931 459.322 894.221 458.239 895.582 458.091 cv
895.602 455.413 li
895.504 455.401 895.407 455.401 895.307 455.401 cv
810.919 455.396 li
808.936 455.396 807.076 457.003 805.668 459.934 cv
804.264 462.866 803.493 466.747 803.493 470.885 cv
803.492 479.427 806.822 486.374 810.917 486.374 cv
895.306 486.379 li
895.405 486.379 895.502 486.379 895.601 486.366 cv
895.581 483.688 li
894.168 483.541 892.885 482.39 891.883 480.596 cv
cp
1 .25098 .172549 rgb
f
830.885 486.27 mo
830.666 486.283 li
753.824 486.278 li
750.41 486.278 747.646 479.383 747.646 470.882 cv
747.646 466.624 748.339 462.782 749.456 459.998 cv
750.575 457.213 752.116 455.487 753.827 455.487 cv
830.667 455.49 li
830.887 455.503 li
829.299 455.705 827.882 457.392 826.833 460.002 cv
825.717 462.786 825.022 466.628 825.022 470.886 cv
825.021 479.12 827.62 485.854 830.885 486.27 cv
cp
f
260.787 827.578 mo
226.884 500.974 li
202.569 501.029 li
255.1 827.578 li
260.787 827.578 li
cp
.607843 .603922 .596078 rgb
f
473.537 827.588 mo
434.052 499.853 li
413.553 501.039 li
466.081 827.588 li
473.537 827.588 li
cp
f
984.778 827.616 mo
1037.34 501.073 li
1015.13 499.884 li
979.079 827.616 li
984.778 827.616 li
cp
f
773.866 827.604 mo
826.425 501.062 li
802.913 502.139 li
767.105 827.604 li
773.866 827.604 li
cp
f
165.078 490 mo
165.077 509.926 li
1079.07 509.974 li
1079.07 490.048 li
165.078 490 li
cp
f
165.078 490 mo
165.077 509.926 li
492.883 509.944 li
492.884 490.018 li
165.078 490 li
cp
.737255 .733333 .733333 rgb
f
1105.42 494.645 mo
138.735 494.593 li
138.735 485.393 li
1105.42 485.445 li
1105.42 494.645 li
cp
.827451 .827451 .827451 rgb
f
534.487 467.951 mo
508.866 464.723 454.857 466.703 443.065 466.829 cv
420.47 477.016 li
425.625 479.092 430.528 500.516 435.383 506.86 cv
444.438 518.693 537.69 485.535 545.881 482.248 cv
544.413 477.5 535.808 472.73 534.487 467.951 cv
cp
.898039 .501961 .305882 rgb
f
577.795 463.696 mo
574.996 461.749 572.062 463.36 569.204 462.749 cv
566.113 462.089 565.279 460.868 561.727 460.912 cv
557.856 460.96 557.089 460.156 553.584 459.464 cv
544.737 457.718 532.062 473.27 523.261 469.373 cv
535.938 478.672 li
544.39 481.362 553.129 486.95 561.732 480.187 cv
568.875 474.574 571.646 468.811 581.973 469.9 cv
580.725 468.105 579.545 464.913 577.795 463.696 cv
cp
f
579.844 829.122 mo
575.138 820.13 571.853 818.703 564.816 813.24 cv
556.168 813.203 li
554.409 815.381 553.417 820.383 550.597 829.122 cv
579.844 829.122 li
cp
1 1 1 rgb
f
631.225 567.12 mo
578.449 542.798 452.067 541.309 452.067 541.309 cv
394.678 551.398 418.416 594.148 423.59 618.526 cv
441.398 619.363 541.68 619.99 559.083 622.024 cv
558.331 636.751 555.185 782.971 556.168 813.203 cv
558.405 813.889 562.573 813.85 564.816 813.24 cv
582.456 773.796 615.736 672.859 622.115 646.071 cv
625.911 630.128 644.459 573.219 631.225 567.12 cv
cp
.309804 .172549 .270588 rgb
f
461.677 289.137 mo
422.081 270.285 li
423.771 293.706 410.07 308.471 406.749 318.147 cv
423.865 327.027 443.329 333.175 459.606 343.672 cv
454.229 325.951 459.133 307.14 461.677 289.137 cv
cp
1 .698039 .470588 rgb
f
515.799 224.601 mo
513.909 234.901 517.709 246.171 508.234 261.207 cv
500.195 273.958 493.863 307.895 485.62 314.172 cv
474.819 322.397 457.711 305.369 454.042 301.708 cv
449.641 297.332 431.559 298.154 430.606 291.933 cv
429.81 286.747 445.083 258.755 442.942 256.671 cv
517.239 210.019 li
516.96 212.155 519.704 218.485 520.244 222.153 cv
521.002 227.279 516.746 219.48 515.799 224.601 cv
cp
f
510.512 252.118 mo
489.325 289.434 li
493.52 291.677 504.098 292.822 508.88 292.073 cv
510.255 280.375 510.93 256.673 510.512 252.118 cv
cp
f
504.445 266.698 mo
505.362 266.792 506.539 267.158 507.763 267.642 cv
507.228 269.62 506.659 271.586 506.071 273.545 cv
505.67 273.57 505.272 273.574 504.89 273.551 cv
503.128 273.438 501.808 272.882 500.652 271.465 cv
499.869 270.495 498.517 269.751 498.629 267.625 cv
500.539 267.22 502.479 266.91 504.445 266.698 cv
cp
.898039 .501961 .305882 rgb
f
502.049 260.079 mo
502.858 259.352 503.774 258.772 504.69 258.453 cv
505.477 258.157 506.271 258.057 506.994 258.193 cv
508.147 258.4 509.072 258.861 509.813 259.489 cv
509.254 262.047 508.529 264.813 507.811 267.471 cv
507.69 267.918 507.562 268.362 507.437 268.808 cv
505.655 268.426 503.861 268.126 502.06 267.918 cv
501.981 267.905 li
500.865 267.778 499.752 267.685 498.629 267.625 cv
498.187 265.397 499.712 262.14 502.049 260.079 cv
cp
1 1 1 rgb
f
504.69 258.453 mo
505.477 258.157 506.271 258.057 506.994 258.193 cv
508.147 258.4 509.072 258.861 509.813 259.489 cv
509.254 262.047 508.529 264.813 507.811 267.471 cv
507.69 267.918 507.562 268.362 507.437 268.808 cv
505.655 268.426 503.861 268.126 502.06 267.918 cv
501.981 267.905 li
501.664 265.587 501.825 262.726 502.049 260.079 cv
502.858 259.352 503.774 258.772 504.69 258.453 cv
cp
.188235 .141176 .105882 rgb
f
505.292 263.736 mo
504.912 265.052 504.301 266.002 503.954 265.882 cv
503.604 265.759 503.632 264.604 503.991 263.283 cv
504.35 261.966 504.917 260.982 505.287 261.106 cv
505.658 261.236 505.671 262.421 505.292 263.736 cv
cp
1 1 1 rgb
f
545.363 218.071 mo
540.505 234.161 519.097 246.097 484.617 233.391 cv
483.564 247.336 473.5 267.225 462.55 269.794 cv
459.952 270.408 463.243 260.956 459.785 260.648 cv
450.864 259.855 458.345 292.54 443.472 295.607 cv
435.98 297.148 418.31 287.646 418.31 287.646 cv
423.091 273.233 414.121 240.738 414.688 227.354 cv
414.838 223.634 415.209 220.122 415.847 216.826 cv
416.88 211.483 418.613 206.694 421.299 202.485 cv
418.261 202.098 414.001 202.828 412.833 201.815 cv
414.316 200.727 422.032 197.906 422.697 197.131 cv
423.385 196.34 423.303 192.578 423.676 191.402 cv
424.298 189.464 425.348 187.189 426.608 185.655 cv
427.357 187.801 427.643 190.452 429.132 192.374 cv
430.234 189.012 432.72 186.196 436.044 184.742 cv
435.248 186.183 434.794 188.223 434.813 190.213 cv
435.59 189.786 436.382 189.373 437.211 188.982 cv
453.036 181.43 485.698 191.175 485.698 191.175 cv
485.698 191.175 526.939 189.586 544.781 217.156 cv
544.978 217.457 545.174 217.76 545.363 218.071 cv
cp
.356863 .137255 .0784314 rgb
f
500.448 292.176 mo
499.898 293.723 498.653 296.743 497.038 300.21 cv
496.512 301.347 495.945 302.534 495.342 303.731 cv
491.925 310.564 487.553 317.755 484.338 318.441 cv
473.15 320.814 462.701 314.105 458.052 305.041 cv
455.345 299.77 455.816 259.128 456.906 254.158 cv
463.772 255.715 li
463.251 264.476 461.885 278.106 471.089 282.914 cv
479.487 287.307 491.774 289.316 500.448 292.176 cv
cp
.266667 .113725 .0627451 rgb
f
493.13 255.56 mo
493.33 261.892 li
494.047 262.898 508.933 262.775 512.206 262.954 cv
513.292 260.502 515.772 254.549 513.336 253.696 cv
511.197 251.729 497.398 253.139 493.13 255.56 cv
cp
.356863 .164706 .0823529 rgb
f
497.038 300.21 mo
496.512 301.347 495.945 302.534 495.342 303.731 cv
490.523 303.161 486.114 299.785 482.912 296.257 cv
486.957 298.253 492.516 301.281 497.038 300.21 cv
cp
.898039 .501961 .305882 rgb
f
545.363 218.071 mo
540.505 234.161 519.097 246.097 484.617 233.391 cv
483.564 247.336 473.5 267.225 462.55 269.794 cv
459.952 270.408 463.243 260.956 459.785 260.648 cv
450.864 259.855 458.345 292.54 443.472 295.607 cv
435.98 297.148 418.31 287.646 418.31 287.646 cv
423.091 273.233 414.121 240.738 414.688 227.354 cv
414.838 223.634 415.209 220.122 415.847 216.826 cv
417.113 221.723 418.568 226.694 422.799 227.985 cv
426.404 229.078 432.674 215.855 435.633 212.543 cv
434.298 221.567 426.75 233.25 438.729 239.237 cv
445.738 242.733 459.094 232.75 455.704 224.758 cv
460.107 228.178 467.782 232.788 473.07 234.14 cv
475.575 227.113 477.339 219.627 474.477 212.681 cv
486.496 211.645 495.511 218.902 506.915 221.644 cv
513.438 223.214 520.737 225.911 527.491 224.73 cv
531.729 223.987 542.787 221.852 544.781 217.156 cv
544.978 217.457 545.174 217.76 545.363 218.071 cv
cp
.188235 .0745098 .0431373 rgb
f
462.682 268.872 mo
466.264 258.962 458.238 238.004 448.116 250.136 cv
444.358 254.637 443.884 264.89 447.276 270.864 cv
450.879 277.211 457.642 276.491 461.003 273.87 cv
462.682 268.872 li
cp
1 .698039 .470588 rgb
f
452.277 251.723 mo
452.363 252.115 li
453.863 251.385 456.622 253.484 457.247 255.692 cv
458.022 258.445 456.864 259.147 455.399 260.482 cv
453.843 261.903 448.167 268.202 454.649 267.661 cv
463.738 266.903 459.498 245.181 452.277 251.723 cv
cp
.898039 .501961 .305882 rgb
f
367.547 308.771 mo
380.272 298.376 470.017 320.89 484.622 325.874 cv
519.855 337.897 505.964 389.378 503.629 417.281 cv
500.079 459.69 499.97 462.936 498.573 508.027 cv
497.703 536.125 501.493 561.672 503.606 580.843 cv
483.237 575.965 460.636 571.969 439.112 568.069 cv
417.856 564.217 391.962 563.514 371.852 556.339 cv
357.305 551.149 362.466 541.587 362.146 526.349 cv
361.732 506.643 359.608 486.83 359.244 467.007 cv
358.594 431.667 357.17 396.412 354.94 361.413 cv
353.991 346.498 354.564 319.373 367.547 308.771 cv
cp
.0901961 .164706 .286275 rgb
f
470.307 811.622 mo
461.659 811.587 li
459.818 813.867 458.821 819.229 455.685 828.745 cv
465.957 829.827 469.819 828.395 485.42 827.664 cv
480.667 818.527 477.387 817.118 470.307 811.622 cv
cp
1 1 1 rgb
f
537.592 565.454 mo
484.816 541.132 371.544 521.657 371.544 521.657 cv
314.155 531.745 323.908 592.531 329.08 616.909 cv
346.89 617.745 447.171 618.373 464.574 620.408 cv
463.822 635.134 460.675 781.354 461.659 811.587 cv
463.896 812.272 468.064 812.233 470.307 811.622 cv
487.947 772.179 525.427 655.471 531.915 628.709 cv
534.902 616.387 550.825 571.554 537.592 565.454 cv
cp
.227451 .129412 .203922 rgb
f
406.978 292.868 mo
398.859 293.286 391.291 304.046 384.858 306.918 cv
465.839 329.216 li
459.321 301.896 414.65 292.473 406.978 292.868 cv
cp
.0901961 .164706 .286275 rgb
f
620.85 467.672 mo
595.092 465.828 541.268 470.707 529.499 471.468 cv
507.484 482.855 li
512.743 484.651 518.792 505.78 523.98 511.854 cv
533.657 523.183 624.993 485.058 632.996 481.336 cv
631.273 476.674 622.425 472.373 620.85 467.672 cv
cp
1 .698039 .470588 rgb
f
663.866 461.095 mo
660.966 459.302 658.122 461.067 655.236 460.611 cv
652.114 460.119 651.216 458.945 647.671 459.179 cv
643.809 459.436 642.999 458.673 639.463 458.171 cv
630.535 456.904 618.713 473.115 609.716 469.697 cv
622.874 478.3 li
631.459 480.532 640.484 485.641 648.713 478.426 cv
655.543 472.436 658 466.534 668.37 467.066 cv
667.028 465.34 665.679 462.216 663.866 461.095 cv
cp
f
553.033 468.432 mo
549.146 474.816 544.766 483.621 540.014 491.638 cv
534.928 500.202 529.408 507.854 523.578 510.64 cv
514.537 506.989 506.377 498.228 499.407 487.646 cv
485.211 466.078 475.935 436.95 474.082 428.182 cv
472.822 422.2 468.951 409.781 471.805 404.663 cv
479.403 381.874 li
483.101 370.784 li
496.097 331.786 li
515.099 354.704 516.04 381.487 522.075 409.773 cv
527.396 434.703 536.56 449.157 553.033 468.432 cv
cp
.0901961 .164706 .286275 rgb
f
540.014 491.638 mo
534.928 500.202 529.408 507.854 523.578 510.64 cv
514.537 506.989 506.377 498.228 499.407 487.646 cv
490.912 471.62 487.223 451.464 483.359 434.437 cv
479.548 417.621 478.546 399.98 479.358 382.649 cv
479.373 382.39 479.381 382.132 479.403 381.874 cv
479.775 375.497 481.119 368.741 483.191 362.911 cv
482.433 370.502 li
482.881 370.221 482.858 368.71 483.207 369.652 cv
483.161 370.024 483.123 370.404 483.101 370.784 cv
482.228 380.515 484.064 392.988 485.432 402.576 cv
487.648 418.214 492.051 435.834 498.542 450.439 cv
503.841 462.373 522.212 487.668 540.014 491.638 cv
cp
.0666667 .121569 .2 rgb
f
419.573 552.775 mo
414.278 804.357 li
435.219 804.357 li
428.922 552.775 li
419.573 552.775 li
cp
.235294 .25098 .258824 rgb
f
320.778 829.122 mo
320.778 822.327 li
320.778 822.327 419.612 782.536 423.464 781.251 cv
423.464 829.122 li
320.778 829.122 li
cp
f
424.748 829.122 mo
424.748 781.251 li
428.6 782.536 527.434 822.327 527.434 822.327 cv
527.434 829.122 li
424.748 829.122 li
cp
f
423.464 829.122 mo
423.464 781.251 li
425.534 782.536 478.656 822.327 478.656 822.327 cv
478.656 829.122 li
423.464 829.122 li
cp
.509804 .541176 .556863 rgb
f
286.772 646.774 mo
581.252 646.774 li
588.194 642.43 592.862 634.461 592.862 625.351 cv
592.862 623.545 593.094 620.529 593.286 616.757 cv
593.356 615.46 593.41 614.079 593.456 612.621 cv
593.912 598.372 592.87 577.35 580.033 566.749 cv
552.869 544.354 494.399 557.762 491.136 530.437 cv
475.243 397.319 461.712 363.373 450.557 343.316 cv
443.08 329.876 430.189 317.695 414.898 309.17 cv
410.139 306.516 405.147 304.209 400.009 302.334 cv
368.179 290.724 330.956 295.53 310.147 334.058 cv
262.247 422.746 274.151 641.459 286.772 646.774 cv
cp
.666667 .176471 .294118 rgb
f
414.898 309.17 mo
433.861 341.672 464.142 427.159 473.562 646.774 cv
581.252 646.774 li
588.194 642.43 592.862 634.461 592.862 625.351 cv
592.862 623.545 593.094 620.529 593.286 616.757 cv
593.356 615.46 593.41 614.079 593.456 612.621 cv
593.912 598.372 592.87 577.35 580.033 566.749 cv
552.869 544.354 494.399 557.762 491.136 530.437 cv
475.243 397.319 461.712 363.373 450.557 343.316 cv
443.08 329.876 430.189 317.695 414.898 309.17 cv
cp
.827451 .2 .380392 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 23.1.1%%For: (Cheremisinov Oleg) ()%%Title: (remote_working-08.eps)%%CreationDate: 10/05/2020 17:36%%Canvassize: 16383%AI9_DataStream%Gb"-6CQBd`E@(Afi]l3O"NX_#(&iC>%Mm-uRE=E<'F?ZTUP:I9Pc@[,)HKosWiMW4rUjshR(8!m]f57/%7O8$+-i/^oS:!10sfn)%q8pn)+'s?nm):nB0E9p:*.2ekn8mJj3/!ajcaET1-U7EFc[Po`rT,j6<D%%q:?V(dc0`]P5CE@tiq;bH]mT\GrV+@!cX4E_rYL@M%?_4nir8u*[ns:_Z0-?cMJ,/9Fc1<;Ys0V^bqH)p^qe+4smU*^)p;uVf^02Zf?h)Qor*HOgbOKM,b?)IT<[;$7]RDI$,WD$QJ+EJD%hTV#o+ci8poC!d8H1q4&=&3-eHhlZNrCkMLr`.PHIdup`':$bCIW9=Ir)EZ?\:+/(-U0_CXUdO1B?<AFs6LkPpqI<Rr=4GJGu9mJ%3$,+@qO=NQd#Xe\r+A+Yr*T6.5D2Db@t+0a><Kdght)/M8cJ#BI.t_\Iu9S'lb.W?h7$0drTX3'kVSh0LPKf_HiE+!"1pS'[U.p_%'Z8JDCJH1!Q1UOUN7+Hu[Dlt-82\TZ531rGgXpcGn_(gPIrY7%%o9ogGbmdcqUOmbT)F/ef.Nlld+249^]39g_lJ97na*Z28;='W%#QElIf+63hjDj_go-YLg;tKL.on5OlH1fG"CDkDNTDsH0qo,9&-iCjmhu<Jo?QLmnSNbu@h`\XI_or(r=7j5'X#8gFef(_qPIC'a%CMg1E_o=10>?gRbI#)2L"nhrO%QE]L.FPuGP<o-$=3nU+p>Ql3qnp`QBf`nVq<HYbgZU9h;"]>5/Q[)kDsRGRQ^7)irVGK,I>%3!%*IfliP4e*!?cZaG?@70Kq(;I$Hhm%uVT0(43R;&]UOO6_k$R3?+263"i9t%O_b3#efaHSVq$6nqIeC>95KKIGq<I&Phu2iZ^V3s%%HN!N[IsF$OO,'X:?bV^&r;,p;J,/!mbKgY_jifmciRO-iEWc,cS9+AafloZ-j6bpf?9K;#O)cOrmJm4[X(>1eDV6XDl.q7>+.g7F%DRusAp\+L_meN%_:L5%i+1M.?ZQJ9^:S`9E)reekfDkIQGEd[KSMUT?_,F+sre;)`5J@"]^OGn9lir\;H1h$[044Zl4RcFuTDq1,%q=<(dPOI@Kf.[-qnG;Ak:[`)IO1OrOT"P&t///UJ^A`T:5_%Tn)(i%t[t"GJan+]A^3TD4]0AK+HFS7n_tSXCr8Hb\kMtD8r]Zo0%s,DNFQ1*)/R$Y!_r:YhnbP<s]K[[tu:=F"X8tRuD\b$m;j+!;+I.<PAs5iA6BA\2#DELR@-c>]3e)q6Kr8mh-&+?/1^3Id9^@]/:%5E0kFnb]uh^V_l(5e6dgR7u+#PgUMsq;T^rAGZ?&ftY1>>,&A&p"9^-!tJ]9nEfhc2A9GHq]/AV_\[fMo%aCpU7_8#\7,5+<ipXQ%qYAGRGIVoQX]iJep#PFOZJb]@nC)l7n`%["Z6F^,U4Z["[To'>@d=O`?SDGlr7C&An>LB7C]1g&ETD,_j%bV]*&fAY2\'arYTkbZ%O[kk#bbL,lNh`-cf;HY5s"jZp:QF0g*d?efE_4@4rkjcXjOaE%R^L,#jN)A+<dEWdRKl%K.*&G0G<G<JrUhXqj5KA2j+tm$PU#_>%G*JupWqBaa:4LRCFZC$R5N:TD=_t0eZK(##g8n$Z01V*.eg=..ikf<q9ruU?%G[FtCZO?rda60?9*[BIf%>%rkHh$M4-m3:3U`I/%ise5rgH+nRO->T:Z_lK!T3VpejW[(c-K!t_i^tUj%Pch`Z/!m;L72k>UX`kfCTDPDOQJ4Ek\0<EBiq`R]Zpo"l@p='03SFG+`Zd+%c=,#Bj!ohN,9F02ndK[[7b#Zp5IY[g*UdmtgNAYYEH21BU)]#F]]O(mJUZ0YU@Xu.hY*R'*qt!9XZ.*qT,U9;7m&f[Kd333bK6r$%<dE/hke_*QW\p*0@u<!qkbF>O%JTG'gMiCs\OK5H)G8'o"Z[l^i.DDQ=T,qJo=&`[rQW3qg3f0\q!=1adE@s7HRHl!=*N!Z6":q7%TeXhICT8An8LHUiQgoGNpL!!2E$]s6\$#Hfcnr3ocpau*FlG5!eW.KkgQC\YoDdf0_DqJ8i@Z)dI[61)5<%okB)Re?XRYeDYAR['%V6sWpfF%,NX'F^!,QG$+$m<UU@Od-#pd83qV-UX=<a>UBnrp7@nEQM3jgdC.QHjMWWiPm(1?If_s$G![nK4fIfj4B.5PT76.e0/$%-D0LNnnpCq_oh@ill,pB(EYM_n"5"++J-I/.).qG\p/IE+h$i.Yrk(GnLH9\C\'jkiP^I!IW=r)e]HI]hZA8ZI^T$.^SJ9fhP208%nb2<:^DmfP?@M+)+8Y((]3IF!7c)]6+*AA0Nt8rlq@p,q55$Ql`Cmk]@%7GUms]NSh=HE:48eg&P8E+=a=o[fbQDZeK5Xol&Q3dI%'[B]oUAs9rph,T&@;O$W&OhT+)s0^6-/tG+g7M6D;GVpfV'119#4=@.h($E_&jnX78IWSKeiPUADWl&(RVNW!lcMA,/$\+!;K@V'%f"$/]#OJ?-GUU+7r1k=O";FQ^H5A(%?B.*N>"AF/0X`J__N^37%aaBs.-Gq;mUYQAdVNg,FQh_HYVO;jZ.e32bK#`72O4kZ5k8#B%!g\q%CWJZjOZT]j7lm#>8/`9W/1$]W8`Wc)(6dQpJu.N4$d$8NUl:QaoL6\6%p_/4D:."%N4qu%CBL3EPu:r2NPeQlce%"OhToC&%EH@3@g2Y15MFS"D's9)->.D2KbSr]U(sVQCd/u(td2I74\DqPO@5$Y_(u1Cj8V4Dg3+P!^i:kS+JpE@I0KS,F-2LHS"qSHF?B/5-%6:X%R3/k!jI`fOTPf<Vla'hP0Zeim*H=-*_Xo.oAs*H!j$h("8J#iKcOoI$*+X2]47n7M5^0bFK_+rQ9GU,V+\*p)saCrdQ*\el9%R)GqF2Ce04>iNLR3nZ*O<of>;H1MK9%#QTqFsCnC.YB4oBY/8.1.m.Wc6iL3-^I/^M-X]>hoZf,M\oDrgAFFQMDYR*,#tMiXnWRc%pUZZf:sUXbgKg.M)2_1$EL'A0QEIcbN`)M87_85@U$J/Cj)=.9"/#,UZiHmAl!l`AF&<jT8>e@j<HP&=h']`ts'+_Ih;7!AFG7;i%;af;D_ZQ)iJ*pmrGa\'b"mQX:0l;\pLk@Ppq!>&'$jI&'"9Sl2.*=eInkj?Qn^H\Ghf.B,EWkC9l^>5cE(X8fX1of,FRY',n'.'b%hYR_#h,n1C.]A'SZl"r@#'?+>W9TJoNF>P7M)^]ANX'@UA3Og@.pjrO@W-u7H[i]+NTsmj:Hg>@TM5@NNVT^=YF:A!,AAmY<..R4%`oUn#*k]qP7JAWr*EB%Oh9f4X:[cu8$KJ,%?c:<pBN](fHon\p?4P;u[4m]93+9H)N`c5#:usH/3IVo5&o"\+EtR;P`u02!*U5V2%0oIcU'B_78GC_s:Hq+_':^\8B&+2-STI(H>$g;t@.]>`(=Bo(/>:OV7BUg$EE4==bGPkJ^E:]0T6+:g_jY?&s\=5up++*VC$Tg>O%CiJ6O!R9B'4?pjE4;,hfK=90@j,r.Ah1(Z?E%Uh%m**nN;21$r_6_9L\s!_HPbE4Oc`H]f=W0HG.)];qE]q5oEaoJJ\]KbO:#sIU%\8L*DPH\Y(F2]Q=@[MkSb1jhJ31>PPKjqJEYXI7udS<mdY,*!c(PX2p)n7<g"lUk8JqX145ir-@l@5Ye^SSrbVQMR40>mF$1ct-L%jL@+#,LbQV$).?`f#HaQ.W(/Vnl.P4e\"lQ;3,<hFQYKLA#`R_3i(AL7EaPK;k*4%D7W*Dknq9<S*nX?\jNsk/su&KGorL"+*!A&%7%WBcH(TO=of"+MNLV.!6ACTuV,njG!s8>5i)Y[);\,C$nK2rMq\\f=66_IY8f0$L4]K:0hoi<t6oQuki^_D':6tl-C'on!;=lK,%s!RuLal'`N-:!l*GU#TH:<W\c@l;B,]j>4ThpN5.<3/oo2mOd/cA^89N@"[KU1cqC_akMEW;(8/o^;S0\r<Ic(Y6=!c3nAo:,hBA%Q.bg1c6ptd0kIeI-"_s\#04nY1u]5"T"sMpe6j8?G22i06;?cKaD#iL,6HuQ@T!"I5'!ItZ()0Hi`MP-o(]IPqPX0ua7:9!T?#P9%*6Ysbp?oua)dYL4GUQ=/8>,S$[E+p&O]?eW+JtH>OrIPSTM%D<M*c'"P\'/e(9eoS=f+[!?=[I$RSjH6/d`%JRVufD_-F#tdV``h%h,1qcL.TlLQ!/q9f.tQ'8#r[@S'BNq)0V<L=__FU$YqN$B\"gp'%OQK7:c*l\$1He=IW3WmAr@&:X.na0iT.5ESR.=qe1iN@:?o2%oJbd2b6YSK"p.S]G]KUdK=Z$4&2/EHh!jZt6ANa<B]>MB2oQ]s=Pe5<q]>3P_fu)?NI$'GcelMIhl&gfrD@->_`J#9i?i@$LAF8r%4OG6BN8c=nmUh#I,&X+gj#PL<WO,:Ur&HfcOj;gZ58YkNO08A#O(scZ6Y7ojc.28r^=qD"((!?d-p1=lJIp%ojK<iE6^O`0;$1IK%$oY4Cr3p75$Zr5nVD3C"VjqLfSVC:mPg!IYS1'm8a,-ZrhEqT4IS>W5\Y-"[Hp"RKhQ#U"kkKPCIto!B];)/b<3#H#L/oN>W(c<L%lK_X?HU.)p4P;=9AC5L%,ERBhHV!gt(OZLGW)BB2LK3E[ccW9>?l!n&BVB%]U=h4RNg"Voe8DLO0^'7`\u0Zb%$3%t7W+S+UId2C%KOn]6'WMdR:XirDSHACne-@M2?&/h#Yu=(+/9<-MaX*UZ5H8f>fMar]2+4(d]e@"3l?PL],=Ud0Ta/"$8[BWuHSg))jO@k6I[6,*%o*uX]KI#/.*e(A%ah&P_?&n%&:*WO2:<2qnVuEU)+Z7@>rVc-^NN@Bd52D!@GB\O\.m;a"![O1Ume6YR<^m;ObBt7I4^lOgisc%4%9X)qWW!#fIi#u_7P^k+^:'-je0WD:PJs*U%>q$nqE28&I4!`6naCP@6mfGjO5U:?j)2U1$EoCh333iXL$:u]qWN`0"P6t%@=>7)p%TEIZ^+jm5SdA<bk&?kHJd9DNjh@R9J1n,O8/J]r"1Dr!.6%>8"ZNN`U/UM&eTP?C1X[Q-71fYd#f9W)Y/@O7Cg25"=[:TfVDF^4W%YWGU0gib5QSG"5;k5LM'mZ#9S_EdS%*QN@aQ?PFX&L?YYZ+Tt5s%.*QJ,`Z(I+BF4299.jr;>lqiF`Vj=bD+Q+Fh)ro<81Ke0$o4%f+,j]]nK/GQH<2?/XMm+Om/B@DQ$ts1.s'9/$_o'r8Tmii7$KLk5,<.oe%@D^P^%r%lf^*H.cIHWW!Ig<H_SA^nj9K'h*#%Hp7>u%.em',.o-+T=3OP@nbYh2mG6m.]pj%]s6DG*&n9r^.=IXW\!YmKaYe,.=&H#dl(d@B^Q,,Gh35i7o^4Y.X^dQ1d`$_&#$*1XE?s%c%r-i25(PhFEok,jo9>W[ga/+@[.;m07O5c;p_ct6Oa+%Js6$c(-I>\rVlc9`"q1jpWJ327d!r8b+V7kj.IdAG!\W7cp/m]O],+]&9%/jH0F<kW'L.*=6G`).+HG)QbS=_'+a/BbFGH<OjU5;JmjE)9dDC.c^7WITkn<^q`(=AUXjA?JO-/au\.^ulJAT#IEdRek\Sc='8R%XWo?m=>l&uFBT_k+S8efLK!e'n#l*q-AH2W7iE87R]i^CjSd0Le6L7HSn>;Sbu&8dBXshuCA)JgYcBb=1,ekaLNBTV?*?-83^Y]U%0%:a+.gjJA;9t92=PDqclu:R7a6eSuI[7T=5PL3ZNu:REZ(-[K4!0osH?(S"U5qB"hs`c]S74r+F[kktRXR9&MKYh9*N3TXUTbN=%)):>cqPGuZF1\Z[=1Sl)(gZBDgbNhi5LSVuBqQF1TY$nO1_mRnbSHuqh_F*"-aoh55,YC!RR$&(>9B8#%+PL,ltEp\RO]@8nuP^O%CCAqi.'k#cjMJ4cCFUeC'-dSF/7K9[Q*4%abK&gi#;Y0p3X+02l3kQ[oc2#B^ND]9TQe6TdMUc#GY5/"$-WP's&XW87Wu?aFW=VU%>7DW`<1&/I-$$abL7Xq.V&NT:No`0(39$]'HHVEelJHeIb(ZU^*m;+X%7bdBZ+S7OmrSC9hiPf#l_h^BY'3tXPMM9]/B>(<C+H",%o_+m3IV5)9>@'Ctg6Z)Kqn",]Db*Wjb3A=`\^Enda(p;(89)CtibTHl-G1:NZ^bD_V[-&<Dt:\^p=RV-E3i6JboX:'K\-u#:4\i?%U00,,1E/+@(_h#m\'2m5&Q61#nNW1qj4aK7:'I^cJ%)1X3gRtKG<#0T@sRDO++!k0hJbr@O0[-`qlIBjIMLo:8F9<oi/Z/;GH7+K%[k,'U_2Xc8T\)_,D6?UZ,ifeUPteHeYmMG9Ao?]fmnm>rS5n1r%jc>2/$S7a2SI2/lQ\ib'jh`i[*Z25$8/IAP-oVLhX\&-Z80`p%.tH)_c/iDgY_kg*fiid1P2I;&(MfnnZokiPWC@VlQ3p+aWWPkJ^#@L:[@M"o4h>.QNIia%@nYM4Enk>g/XGR$VkZpU4uq'5EV?`W%E8g;I*ptTb[.CmNeDbC0Q?PF8Nk;bBbIa;:50)RI%6)PK$<PV-W-Z-h#&'99RAjmSQ3.q$a"h_+Hq1C;8F6KqTMYs1bpRoNAlkcp%_U=A8%b9fo&alThDHRmXf)IV.!unAj_A^873l,@U7P')/XDf_U>3)i0q]3)u/N):fA"?Y`UWu,K&#`aWBoqSnd#[D>0apifX*DZ>%Wn^*uHU"rt0mi%L'tX@fXAj6Vg:j:mT<Yi*_HEs6IQfAar*6B83j0e!>$U^^BYsTu8$?W1[dp;>3ptjJ/8mc7NQ9dEf023QgZKM>%HFu*fKqNrIZZTjTUDOHV>BT"1ZS-jMI2"K/#dosiSqd>1oEJMf.Ai;:OpM'S@QaX1Br6^.-Z7<*`Tjqm<-:$t"__<"T2Z<Eo`H==%#g4V;fG>+c9*t/W4h0#TbUef62"j>:/rq_"Ss1Y6?9p:FNHX>&YO%@qrs?]'ItJ\$9*t'S@QVC?,J>V#M2!9*$fml3d?jW%i0JO5%P:\F4P75J?BU[8VFQJu1bqN<_/^>@c8ZlbEK7_#\km4BIlTp%GQ>BOW)]5;Llq07u:<]hE<7SeO/n-_"YlWcK?d"'8>[CRcO5bN'%AW.n.!VK,j$`RaTAQgfDM60CtG()QFl[68&FXdu+:2T6ZURiLfm+<3-b=)g9gr=fTEG`_%)I&('FMbM61T0XlOE!+PlGcj^26;OH%--'V%dCNN<BO3t@DoU=D=9YI.E5S8FC[/Es+a#pVW+*sZafHerP.G4H2sd29WZSWV'Qq0`?T)q'<?nDH'3b.Z=XMjYQ8)^S=BW&<%)X4cl3LMm&mO*II8G%-\Ri&-H*<>$:csD]mAW)HqMokA)@"Q0q1e*mJUa8N#T^If@7#=P,4ogUoe!,;(]-^i6s#E(#=sS_:Gj#\C%`_ogtY9E<n_*7c<8nP;.O6$rM+I#Vji8pO\_nSA7U?*dup4_W%"0_aG2=kjuf^H_s,KeX`O+"1p9Gt0Jo0tEBCsq*C'_-@93m3mP%FdbC;baf7!S]mXq(XcpQA!pq+)EpZYI#cJ#3;##;Qa&Od/CL,<M!d3,EYgWX@-62.Hs=XNcJY-^O-4G3O\=-'FHY%\7:JO:@E_u"%9^DX4(AiG7&T4LX?S)V5hY+:@8=/Qpqa:I^bJtooheTL73!Rm5f$SMI1p)Bim!^^op;\,I.a.J-nI<N#EunRE#!_,*%5iX5QoD)r%I8@=Naj`3rOWGBbaI5H<"O\7_=&LiNhCh@L<u>WOY]jl+8L7<--X#/o4S.9c&N*&Y_dU2Y1IV@ZpghN"Zq%-u_L]Y)pD+@N[O?Y=%i@*"/BlIGr.1$J]H!+uAA+=l=XTE8AE#kYU8t:+;UWb6#^F4g$,NPflAeDcOcfZ8H[GLE1_F8I&$o%>i)N.)RaEOMhn&R[PEoc'p%G=H*[$C.?pU\_[qB/H"g16!)jo/R_[i6WmRJ\NN\RLu6UTk>T7e#\1kW?-NK3K#mL<YjTa&$CoMn@$f7nSlK]VUb4MRad3a#M00*%c'BB\ff?a6+!bK-'VFNOUCKm+3L5NulnNWElgLBfT8:mBs8QY6-,NW,J(],(>j(t9Z!7um"@^9brR-hI90qh6')tI^jkW^\NuOO[%8!U.@XkF$f2Cc_HAs>bQH\.O&:,S?kIl,m%EP:!m80^I%n_-0OHKT!Y\(a(ehX1+Y4cPH[iHn5VdDOYBV;_0@c,iW=aQ"]I=LR2#%R3"HPK+4hD:</l.EWY^uJfqZRb@uK=ms1L[IOltUrL>sZkq(&Cai8Dd0OK.:i*Kctam=7&iPY4'`RVrf*D3/pG<"grq)mi\AH:a8%%_88:AD#V$c%L$$R:9H?k:KbOdb:/%H@Z;Mh_#T(>3A2o;aTeX5r/#=NObiYKI+ZuI;L_8[E^+eGN<NH(%,d0pFcCnM<T"?AMLm_%,c5"m,WhhW]brh@Vc9OB0fILj@l3"^AZorhN\+c7[O6g#Us*T%CfjI+lH$S"/Ch7fID<h**BbA&Z(0N@]6%<#W+Am\VL0K3V`iA)%I5I/]1n43d**QidIAc*fS+\';geaomc=K17%eDk*G8c5uO1n?<H06oj/Y7,/B_FuuCC6l]q[C^m_YIhNk[tg84epR76cu"hB!4d%%8U!r*HA:n&m%*qI3!&M-)#s6\)'I,tkOHs[9f-p01jo#,_4,lp29[*tc,te`b6;>RQt,s%b:h^k%aM>>kIA@$6h0h1!S):_dFm0B%c]CsT$/35')d%GOWUkOT_f>%7jGY!G[.MG94K#f>45oQejXoBV/9,[15:r2X1M&0+EYbR#7G`n^<qh7T+/(TA(LlEc7>F[JcM50o%&/T4n).Z\o'j:QPO.s)HYd_`>0/;E,-/'[ZQV*i5r"`Jq,Z]S.<Dq&OKao]XgTS+NFMcngCSX^_RQfs+O2@a,^B@2fFH5Ec&V3hE%h3c*$DsiUJ5NRb$kuR`p,CkYn.2omRUK/!U#glbVE'l/;:/M*i9oZ`<?HAIWS5WV/E'JVKpA"$Pf0mGolaq/cdi6Ul^#:6+l)[2V%.a7W3&>(KckY:[2*=9Q)!c$/G-62,+4Q(51n_I^IVOGtU4Lo_u]D:^gTA7/1`<je4Bo*LC%E0Ph!W,j"d4671#b3$'K)_1$;E>cY%+*/+@1*:<%XKYDo'J'.pUJ;VAaeVe(0iurQr2$.EO1NM)c+.dJI3Od*3qbRHWF"[Cj_K`\^+K&!42kB^%(C-59JZsd&\+6XO4ea5%W\Z/C3JjZXFGSnoC?lX=caN6:[b#-B'OB+ol;f]^cgl+_61ctJ6Vk[\Q@aIm6g?OS5eP++!S(uB^b%LjWE_!f/<a0]Yrj4;!,V<K%RE%KNSh%4OdP;GH^q++"(J*>mAedIM'V0k.C>P%,n-3FsD^0Dcr25mZ-#sB.3_::WJp5CaD^op3%P\belq/Fu?&7WkLjJ_]YBu@[%?:M3;<oL:ME&[6*f1QhOqqQ$Mh:Z+YQZfsP)`umKII;FRA\Yi_RNaJ7lakL0(U/qS$UD`Rk*SGp%H8MGZ#kA'J/`L4b-uOW5`PY<%`LAL1nW'Du\6)MCQBAE5,OD`K:3$pf912m"[Gq02.JiRla7P*2DoXX5@N2CR53a)IaYd<uI)X.T6Jo-dnPl3kaFEnIbKWVED`O6s%ZKJ1R/@=62(pO`ejdIm/bXY4aQs`^t%djPJd;+9/iTE-\aTpI2"<<DP_($n6\a]J25]laFbK3fV`d1mk`a*@T\^@N'J-,nD:dF#j%3`Iq_4'55J83Q6P7jiaV9l!V`@26i(gI@-MIgU"_Z2"p4?HFC`-R[tBY#bG7_H26g+%fHrAnSn<n&SMUP/hj\62"dR\1i1/+)qtc%6?8edP=8tiV`inPPoNAR&EH<Wd^8$5H[5d<L!@GG?f]+C_RC*<'IpFiZ`((_Dr>$Li<En'M(Mj$\L[;<=+?H7Q7j+eH+,H=n`=r&%gbMp:j3E)+S<k6rmVX51/pFSiNk%hFLT0]I-4>THjjt0E:?#N1lAIBLCFli6kOuRm!r"@9=.4E:fiFSV]ics3l[9#9e(k0g+o$&d%C"$t;YiTC'p7@f/.DFu$hu.HaYY.'K&3emZq)b#C[Wf<7QLiBJI4LItRutEhLt-Z%'.go]f=d[IOuN!0'.NZAYoab!bd!ir%urKW%eCWVKg:Oe%nuCHA0Se*NZeE/N<#3KpdRa`,G3gC7VGPJVN7l'&F$N2!cXs*Aa3Sb^*Gi#`2Oe:4%d\?cQX:fiWM3Lgs0`Bh9J!s9%!c6RJBA"SBDBim;9D`_9Gq9oHqR4WN[nu;KBcC""aPp#MRd87dcrf:S@iYJ2[-9/QR4JQqG#S0ZMN,/X$BRu($<s\6rYnL@Z>S&B%R175G68#?#</QC@ZQo?R7;be6m=]<u^rHEJ8U[,HB!ZV?>F8V"*8A`&(#-W>R*9V"c%B99\,74Cl`%0KfCP;Ea)7Qu<?6Y!.H'?m%H!pZMT6;aUPB<,&R?r85f;\a/C1-Mm9uh_t#L5J)!$A?2ZdZ^jZaOSQMgB2bA<kpA=$'XEdNF53F2Zi,>?(df7rH-(`^Vs\C]mod%?,C?j2YI\pK=]MLl+W\1@s"UW7TaX[3C3'ms!.>(0UhF>*(2:V7SS@s&:EihftEgAc^6YtS@CAa;^?p6KWQ(g9+e?t).Kla6q>-p%J\"!<pF*tiI#;bGk?S=Z:U0<F>gK[&MJWT2IYQr_CcaWF3k0S8[Y%hq,G>,#A3/su`CG7RNBVj#WY&#KT0qRILVO5A]R7:VTOVAT%lQCG5@=V4ZI*,lJ;6YH%JUlOQpDjO3A11R+c$_PFhV<U%&'fS_pL7C)Nh!$=gm:rXmO%V^T;+mmgTpb6;T-%^STbg>HZni3\Tb0*%QU,`?]6Nc)bA8_j"Z8kHY`-l!]6il5\]a/2T6D<Hqjk)D^$Fk,Ik2L"%tJp23.c`;"r9Q.q_4BB66?OjVdsV_e))h,o\@d!XHD7S%[ai?-nA?RKaS3Brp*VG-<Hf?EO,+$NX!?2HC=@6br;A8F3*6#eX\=b%B3]rA)8ppjH-K#r`E3pp7M+$XLs%5,FlmHS>56^8iHSuf%H0?mVW<Kf@Z/XgfB%nW5%5@]l]^OYj[.Je,S\RPB;2#H^f^,d$=\prT"h&n2BC?Q^bAXicWj0WN>8uj3D/XTY1%+sK*'qEtWc&;F%/4K9$PN7JeFj#W:n"uDEpVB,p:M(m*lF;5CM):]>gO!dU[_:GhG2)n"N4.TFbCtXtMs$[c>cmd9=qON_/b\Wj^Y/VBmS:8DlMQ*h%eWMq.aSe3GDn1?nf1X*V>0PSU1577sWNis.gde9i<2,-B7n4(Y.uN&j'U8Q`]0Nur`cF7;<7n%^I?^<QQdeu[="Vt??o)cS[F@Ct%Tr2&sA;tM6eThJ?L'R+nTG\*jo/?GV?k%7ROIag=0*eB2&=Qe"fMmo,D0WqP[QiVeISBNEf`8hp%(rs&q`,".1SK>C*A#jYJW8r7%hN)p<>'Sm=GY@;Ugj\"6CM&.QDnpK")>8dCFPjLTL$Po1]f,-.?.R.R3SZEpr8qQA>)rUdcu:_(C*"i$C7@kAgN2NN8ac:-e_85$%iB-C9H\)^(R/qDaRC@1CcfCZPk.+040%@UFD<F?DGsAb"dFC0r^#"aS%0kO;KGV)IrfEgm3A5-q&^)dUC)[EtG-$rQQa#L?dGo=,%&>i"9`<?0g$@a-'D]K1'hiRKIE*2sCUlWM9f$i9h[(goIYMEP,M*,#])#Ja4[fNeh.X3u,p@nE*bkst^$m5@dB4,1-.`9Qa/c-^)%N%t:NE7r4$,qjh*\'*E@Hd@[81SZ#sJCn#PFm$i],!Tl[H,jbGYsi1j#/qVWKM80UStX'AN?.IZELmARLt#e8Btn^%"B-EIA9^GZ%5fbX,L($:6L)1uMcU6[_;#!-e4qE?]./]]i%0(aHlAHSe'fT\opWlt<B.X!;QMqcAe^pethY.(%`1,Slfo5B&E5S&AE*nt(D*bW`%gue1^"<Z@:B.7X=FL<HV^!Du,\SE:-o`mVR/6hL/Y.!N5A/F<uEL(_lTit?'Nn`hf:UCN03%Nq_"?1\"an%asq!@[kh]6U+5C*)Q%R5MT`5GM&I;5hehe7TK\1CEdmL&-`pI7BnoUJRT]c-ObSkFqBj."!'Cs63B/&Ua6^044YFe[$'qT=t$^k<GU:lhM(75CA7$"T?O4%T"KONnEP]ehD[ZHoAj7b^(d3Os6JTj\gl^L*2HT<@UA(<VKUL#GT9%n=#mFDDgK\.rMMm's8B`_>&E*STDl]7s1A4#IuEgBo&5A]%*<,b`XbX+QP2BaSL]3Necbm494aYW9f<]S3dBD^p>aFgGn3[-OpXcTTh`cD`qUs%.:L="]n-a+Ynb4sq?Tp^Po_MY?,[]AUrTs4#%='scGH28n&[]f]"m.nP#^OLM)qIbSuP7.A.q6,58J,+XS\E,+:[VrA+*;Y+i>B\Xdg./F$XQH^Zb0b-Q5QCA/2qYNA%.u*O,p-@t%="2b$XV/bkfKVe3+NESsbTuP-?DOp]Q&IL2\18AaT&R[,5<S%]X0bR#Pf=gj<MlDDG>09D$cR?PKN>9QSo\j*?^2DTi@%bol;kI#%gg!<o9laRNOt#Zb'!L@(]L_Tn%Cq<@>`%4nH)8aU/"bnI>J-,emgh2BYMq$]D;ct%9mZSsB;MYZWRLcF&9m+65n2f"^^="'In-)B%D-$c!k"kB=<1Q,#K'Cg1lRFCO:pYO:`)Yb'*%cr'1J>*ur)F@eF/\UYHaI+D`Y-T<!dNDHHL32?rd_f9S?;<2rotU?c%<:_HWU$D%gt]GB6m1q<=$GKaoBe;Y8s@SdQcqE^?:Wj@#&cnmBs*4EftLc2-)oCPBeQC+9<C(WB/3dPaLB?cdCp5d]3*CPW)PrT:;2UjiW0lp%Getp`-qaVGQr5bp>E_/VpM20>Q*us<]irDCk7^nDW?Um'DGHZ]TR"unWP^s]$#!\,#q1smRUS#=YMf>Y,l2t$]FoAB<2s"l&$6\8%PXsh%;HCDVbWaaG:551\$:p)fi$">.-(<?RD11@2W<?I-0Z*K<&P=8Q2F`hJKt#ZbMainke)mh(IDqX1@@lD.9i_ZpR`j+['kAo$%Z:gq%gtLQ*oSF"M<L0nB3'gX*?Y,170><K*Fp^!p$V%Hr:UsPI\:mTXq3i%MfS2ZBA,GI<4d[C-:gYBg%.e_.^[_hp_Mn,I\#i4k%U0],$fc6ng=j`lt#r9N"]MP[,2.04,H!rV@?6lWs9eCFrGo:c"?"T9o\#*XSGD0Cb71-+jG*R/2!-J\\mIjG_k"-6.B6_fFCg7PR%+q^fh')M]XLZd_j8HKb=,Uo$KM<MdQNLS*k&BdC$!EVlXM?S"-MRIM"R[^GHV"6<uSLBH!%B?e0]U+go:GN^TqLPY;,[u\))<=T@%=1seK&U'kc?#ZXQF(**KSbceUa>bT)D'Q2?FDDH0]!Yp701drl+,cR%P=9RC[;ljjN9O;PXGEuHV<RN%r()t4kYrIir#$,M(TJt:%25inWJ=b6&4GHr6B%+k[/ch_Jn.k=i.<4:kiolS5<6b:kM@iHdr_Wa38lUD/AdG[p2O)ln;FN81X$HTZkK,Z=SLEZpB3/edGuSP3%;^0CYj!%C,r(4)FXV7^X?,b%Z.(6=ECR9L8>U^R5h+MT^lq4fRhGK$`'i9Yf?6Y'QYp#rZE@]EKTM:$6b!K_WB%%#f-$a'aY!N90%an.&WL5Cp\kr1Wu+JpRPmr=pM:f*PdZO_J>;_j)S_Jj>bArp%%2OViGTSkuVi/o3T^=aa9#!jHjAcl2M7;Q@W65JC.qZSMQ'eb\P%>@;b$5eH!c)9pD!Q9MGP=%9j1I(V;B=M43XN+GaFql*jMj'(kPj9_[R!Fj9q<%7$]KF>+LZ9W>d[aPV\B@TNSG'Caj5t1o%'rqZe%Wd@/Yj4C.8Q6CEu_%^u2UT9d8o&U^8Tf7/#&X9;o@WmXA7`MC'fg^hjU5T,%opXr5g1E*6coYPJH9b*0=T:,fOpGT$>")`i-BjiL%f!&XJ2;:VpH7o>6P(qp>VlVRH]ZgA_G3oX##^Xn9k,Iq2OAs0+]I8sZn4iH`nt[TF/=gBcTP:68ELsgf`pAfg/<@ptJZd2MB_&)k%M-j='5r(2/[QoIe'o2()As>eshFfC@W7huI8pmN)/#T=7?^%scXh+MZ\8YRd'rYYKaOVlGBo#aFgj-*H(0>:6KXEfmD/-&,,SbTQ%<C7@^$_p')7ThsoS!.d:BR`]DHkQR=i_-RIeijR!B"^;J]cn]/nNp)#g>$^-ga^.ieY[LIoIDF>3a,a#+aS0g]M=1s^<sj&na'I_%3)%k[1p9)?\iPdd/Frm#WdL86DV,[iQUXXfIeD+TNst%L;OssE"FX;WltMhBZ)i8Fr4eZ3EZ/<02&X]F7,!?^?F"0TI+"(!?E'Y#%V8oE4f_cIV>s<\%%S=dkO@uE8imj^a8'1%d'*q&q.Z6`hq:rofQ7#4!b@I;74EWb"lFY]mDct<d#E)cs;%:(A2L^:>fnP5Df;$Ce%h(D>\m\fX_JlmGr.2l6o,=9ss<JsaUA&NXCHe?6eNuh5Y4b]:M_jE?o-uMoJk[j!$na#:!H'0R-lVUe7`Q"$+jX?c&8<Xn6;JHog%<5r&ECJ`Cb.q;@#U-0tRKpWe/'Jd<>=_a^l%k(sZ.MbVb;12M*4RrW;d.$IaXL`MJ\]%a8BdZ'E<_@OMhL0*t>7e/rRYE$j2lFe:%8q!!<VN\MV3r"l.>;e-)-7'R7:<U2q@?K\ePgkqQRo?o&6#B,sWP"0=Q&+Ru`.kQg_WoB[OhU=c8rJm)(1@R/:84_N1bjG48LK%%%=1nt''+K)+0PhPsja=D\VDf"iT]Ym1X*8_5j7fRo\KZoLECEen"C_j,:gif_/c\oJIQ1oXLJ4]$H8;(k/@!u"=dlFg+b`+tGH<7J%GqdY,fs2fiKJn:29@N_?BJtVZl%;+EPL6&hIP+VH_-q>@E/:'kOe)"DNBSj/-[9:R<9fH'$AR(ap.VlF-XR_??-)N4i?89YU=B<,%p=rTeFoQb*BDC`;Ym[Ek2ZE(4pKtR^p$BXVLS*GY>X*Z5_mdC1q>(ECh#Rp7E<Qd(7Y=4"9NJeo1]TmD5@2@)N/ki%c86"&W7ZYt%O4"id<F'TK\(S\-&s#]+6A"c[SR+#BV!eZBGk@]-=d5[q/s/.D<VRrkE"sl?9F.$i@\l"u9/6AHc2.q(i2LE9dBMmQGVR&q$.Ve&%S_I21m(`'h[c;l5a%piQ$16]_S#[0=3[N4;Ke[kR,dd^%<=p9/HBfgS?O1Pd\$h<p9RI#t*QjuaWD3t0*2QAF_eP:+cY[N`jf:Gf%"nCM+e:OX=,YO9&p:(cjZj["<DGUdJA'$\6^`kCkJL;WQ?PNc2JO^%.l9S@;BHfF?Poe3/F:F[)bi?49n@%9*\P9l9;<C[4RuPm-%MF^*G^5"P4=fBGK6Auj&-L_KP(,!7U98U*ZVp^1G^B2Y!&c`*L]5s4RnI]i8J`]Vo"m&eDYOb@K'+b0FR?iW%VXIRI;]@qnhOfg(%>Lc9pcg67p\_lrffqcERUt&)W,a&Y\i]0omTlnriFbe#Wbi[4(4$HMX*n<\gTAfl*fKpIsRj`cfWN[A5ibSc[k^%0'acE;=<fA0i%d;+8VbVSeK4Z+'!=RKlAH?b?"GBFgG#`7ptbmbc)!>L4'740>E,?GbF,*>/84ZY,+d0tTSJ->ocO)KeACmdg#O:V[ql)bDC%AGY>%c@@,YA[+uQ?@tZ$+'HWq5t<2Q<t;]$MFiEont_2=)O<;'[)s:\)Rd'Kn=BV^CML!Pne8o"WGPYs9`YuT,d+t('@#/G#i#X7hI;rU%\j&G(F&JT4i.HmfpnKDd!L$XXY0>1#kL!\:J9F(&U9*!d+Zs@a0MMaM.YrR*;JGiXDt%^M`1HI-XigJfmtMm:%YTKnJR4b;@.4:r%RaODWRf[C>82(:CDuJf`1/lo.-5b8J6a/S2;!AqpG*tI_Ln+@H/j*dXl\HobjTqi:?!-[NhP.]o+D>hS@3B/-L#VHlE>oVo"[m9?%V'aIh8Wun+UBtP)/5P+i(D6>*?L_teA1bu5h+9)@auf/%WTYh(ThWcKBeo9k%a1Z#SO92e'<"c\cGXMjZSE.1Mqt7)!^=j[DA=LF%.;hIHa>*5(1Mn:4^XDG%+'>%aKe]DSHDY@-JEmaXB;<CRdYjp(CS`;1U_o4rL14f"5<?Y7*E->nMDZd$^*mu]_n+P,6)A$ZK`nM'%qSB6iG^lr`+K<UNC$8'B/[l,%;jo.9?q.eY<T?_!-p5hq0i$)Y=#O4`M.8lBB:6=252khLrPa_]c5',Ba;(m.-EoWG$bPV,:+Z]A%:*nmbH<A5tVD#(T,)uT$Td/c#AC>(oCuI?CR',7D&f4(:*RTQ*Qo\p)<m[7"m](",SMB,k3\EBKRej(A1_Tb<63AMt,R)R5qL97I%.W;\of-Mdlo+Mee&\LG++@eINM2+L'M)l5Y)Z>m?:_DoVO;,T(hU#i=Z.U_'7hs(`Xk&s6eWMkH!@k_>;]u0,!K]thWr29"<0R-Y%p9n;jXUdOA6ht1g2/mdRf+G9g$7-`8$&Nnk3jh?lb+FNo!,dt!)X5&QejW+RLYgh2bRsAiBfX@5<>8Atg+4fZ5qZE;!KC1"*>/d$%!j&]q5s<Be@TY2b4WoshWtSe(dZh>JJ0c,RHbq&)X&3T.l3J+P%G5%LqV/;4H@d$)@8fMU!c;"1U@fYKJ51/##"L12*(GG1DC&4H%hD*_/&NCoAS")VSYD28#9LIG,CAmg:%Z#>$m5*^JFNN"g)OO8L71]dMaS8t.N%ULn!0iQ&1>]-B&r;2jckSO;d/MH<$=[IA$Jj!k%fqX(&=`&s=Hq8'\5)/npd<THkj@0-hqJO%E@i60BndPlt_=E+Rau)3,iWhjiMs<dF&rn"u;5!>r:(mV)g0n*Q@6fY1.rPIc7iim)%f>]o'Weq&r_M2<a)J>Aq?8Q.G*YA`IA'8*@Y_#^34A\)c7kkgu\H2e/"Vie/CCK:0.MA_%fIQrU(Q&'g2(GQ?a:A=n*0G%(+k<<9%(*uB>JO3<mmC3f(75.\(EO!Fq4CNYc'^Q(WP*Af9M->*WgNd?dY9,RGM+PKR0<?@3KF"UZ?ne-oSVteQG4L>.+;R<)aUp.U\k8B+%Q?8u*>uX*[><l`W((HXf^>aG^[[1Ws:t0cpKa&T&Fq"<`Ch84iY`12#7Z=BXKgKr>JkE#;#ZtC5VZ=&d&!<']b[s`=d&U9H,%;WL%9-FjNVI'Nr,BH;n0(uI"Sc]N(e!HE_AH)<1oY?PT./XZ%$nFeCMDhcF('"AGHNAr$;!-a^Z(#.=,e@2(WJDiS!$1H!fO,^b=Cp#m%1JjnkJ?B[OMX\>9BFLgkd!7kkpfn*U-?j6*6.>%*%uYdc`@CQTGMjJWD'4f].SoJm#VIYi&VqqbQH'mX:mOS:%PjLj_b7?S@e=-C%b"7C4b<m1I-\>^hUP&eL?<[V9**2j'iLqEh9)h0#7kpeV3!Sm^mt<M<%5*^nKW2gBMnH6PKhV-6`an:40or5UnC89[L1r?I6r>[,%`/m#-O@USb`t#O'\k3.*'.YcMK$FagW!*BR&qCB6)?E4mB[,D<T*:pMWZ[oa=j\3X->9Mpg_\8@2?^J(J[1#BK^OAoXYD9apBV;%%HL5X(,s9&3Y.Ypi"1L]dcnOuD\%adF=Y-qq))$H-%%W%W-KaZVaSZi%X)1r'Crec"K,"Hi7L@Eo=YOD('Y>"J"57l57b9$'Kp<h#%?n(!-dMj5?]Ie7'mRm+EjC6u<5RF=3G`/osr02'o35kF&2jtn]\B4fn9]]DYh6O!l3oc5q[X"),p0_0<i=kaQK]n4Z$49+ddXpAF%N=qqDJa#-2)UQp$[fSW\7[RAT@d;%m2^?4L;aC4kc/kB$QcIM$N%cEObnEQ.rt<kK&E=jP15.3+D(m+X%&:s)/>Et75"ih9&d]]t%?5]-FVV80UE=NUkO]]U8mgsP4=%5U9W9[L&YOH>G58k_NYdWb](<r92=ZB"(3R8rS``MYqfi5[&SO$Tqqq&3ZAOt`Bl.I<7+i:72%<>upaMi\`G]:*?_]UgB_TbYiqXSsR6#pYcS<#Ej\<j`2Me<Z0R18pN?%P>95aLopL1tdUa].,k37QVMTYnlG2`8"u."jJJ7<>q6U%0Naia!4r%-gPg"k'J?^s?j:/1!ODQB"oH];0"PM0"bHi#&5Xin1PD/-b`!Ag8?5'iNU.4dFc+1s1a>m6$%t1J11T94PcSkILg0mI%U(LW=$ql+=[(U&/6opgb@`MSh]a[qC#'F->Yj0-'#l&_TWpL0!1_OLl`+Ls2L!TAkDB*PaBjnD[=ZJl9^GJT"AQV4)]"B9Y,*==)%,m3BN;>N#@7Hk6_qABZ/_A=s\7$J9ET(*@]aeTa;\8.V3=cS5(:p+!+K@ts7gKK1I/6go/QL5bLpBE5Q>UnteiYO+^::Or.JY@Tq%e-qP*/Z8^7$L8I1-=X5LT'(>ObQLXY@pWGQc:0VnR#gla&Wb>.*T'O!]V*As8.*2VV\Ku^87Y']Q\BW^1m'$IG&Ks#7)8>%4pGfj%A7fls9sV'EPDqH>Wh;U2>b1Zk1B4(OQ`p\@BZN,ak84ehe=6t][aij$2:WpT@_cL\Tgu:a-sS;pZKu8);5WlFOp33Q+kYH-<XF9r%c3&_$56*;TP=HH4$^$@=VNW\rehJI=d'5SPUr:(<qOn'%>^8;Upe7mE%AFcA.9HkTFqM4+nlJGh7D+#PQIYJd85P=V0Mg(%.dRn%%5;7lE<&AnJ*h^>373NEPR9UP>j\/'#&:.jYYJ?'2lI6!T=lCT?_GJ8GA4aI-5eKir>m5mmi$c+d&MKs,<p$Src"`(D_H4/-7+',L%K!3@K#Q(YcNVJ#4^_\>'`o<#>e6"aC".C`jR$`;gD<6(YXpE;>$9,_?#"qJH)j@F:3Z&6j%=Io-5QH77E$E+Pac8DLk?"r+lVl7M%2'^cd,7E0q^i%Y3`*s-F)\U)h+NSNk[#]`nifO\N+_DDW0]o#OC"!s<6UrK^!uc$s6siH^IVW]]i57Ps!;8.dV<^d@#RVd#W2ZXg%(^6!4:Oq$!E#<TV!8sR,*=s!:fZ_Q=(b_gU+\/U6c@G<o/;T)3@V&4Kl+RE/-3W%tNuT'C;06XgobG.e&MOHF:fbgjOV&bj5W#53%p6fVpAiro?4+6.SarC^L=KCsliiejAJ2EFD(J_Qci3^G0!]WCSi.5sLNBIu*COK(SMKGTE!2.H7137*Y,S[m>>tml"PkHu*8PtSh%J@BH!P+:[@?l6e7a@%31'=WOkM:Ds(LJ3=/]*fH[DX8%T5uttaWno8+fA2FP'cEae4]lE8XYtO4-/O)b&+DF-Td'rP%3A)&N=G3[%5*BMG%N>'+(7m/&2:rmVZmc^O'N+Be6I5t#f$eG()le5nR#lSe!/G=7Sm`mE>sN4P\>eX=!=;YCfHUSRI@1YVA>Vjt`&]'T&_V4r%lL:pFI7T8eRPU*dSq?m8+R4Yp:i[\q.?dIr,4jB?)4ThQHHfoN\a.hJkG^n/,nLnC"5<5aNua3(U4FR5/-%rD.^_#%HiQM3BWnj"%,=1rc"!p@uBT6FH^rT8-(UD!n4.Hef:Jhu0N#6;k'S%@BlNeU8s3p%!`m;>t,t,<>o`Z0h^)h!'X!O8iLZV7I`AE2_=VWVAfP[-B%+h_79_/?(njAKJT"%\=3!(Kn-#fgti!3]J6+u(AY$QT=4dT&jqeXD-MS>Zrh83^>;F@,B,%M;b:j2h(-O;F)^+f/X^LeR8m`,6(;%51t]I.$es8JK@>MHd0aN<X81\34JO,3H>SaAZ@;ID?=6%.e2>`0SpbQj;NG\"'^*t+['j7HU37r\4B:ClBNh"m(XGYaOL^"!:g_u%1Z_>39=Vj?o%%9uDtIcVm=cI17'l4]Z795cPWjMJTDTb;+1*/l0(BTpJ)nP[T#;#l)9Y,/I35kY6*J3>^T*-hdi?]`o:-Rt,[eEX%!LTtAio9_[2.WB6&D^(eJ7Z,\OgL^aqKoVA8%M\eSf!GEkQ9/0#DHfsVTXdf=3'5u(^Dd:K^n:=_AJ-1p+H84g?/ao-F9#g;2cua%KpiT.!J&lXqZ7d#!1@/eQjg%^B[AR;$YTh"s3,/?<=pi2;VWC.k^TDTV=?^S,%-7[pR'o_,>Z_'aY"$4r7"_r,;,,+ctgkoL%.Dq%Bj_7(0c4uh=p+%[MY4V+(p+771p&_^'-@!GqjKu^T14Y.'V`08cDrREC98^XPD5*M\Z81HlNj)N*Mk?I*9`hSmAAP"<@-pU/?h/K%TKkU6LBUX5X+DWa@XYS&DQ0i&?hl-Tno9?GI;cJci`W*pM!KkHarI#4Ys]/oJPUrDSQ0K_'@ciJ`?!/0oY@uci2'TX=lDGU<*D(!%ag;>76<0cAE?:%$?s@]'6Dd4)4Xu:NDYS]&lQLjZN+Xo0'\Kd*oXO-`M0Lo0DtS,_`M'XUg5K%,+=!>3?+JCU.SQ[473g4?8nP7.%#P%l7+n8.aPk&e:@n[*g+qp_[0]ED_,"23hi<;bQ3:ia,Tkr)M6VaZmf_CrH!D/u)87^9p,7t"b$)isH/X90KN(0L._$++gRP_gZ%1^`]QZ%J;AlBSE%7SFccq$@f4O?m'C7$,K3oDHh^XdkLVM<:b@fC<T10GgBqcKghjDQM]H'T=Gf'-\Yp,QPc;HUZ-k8At<Y%iP17%n/=E(cr/1\AB/?bQ.<nuT-b]@!5LHH'mpEp"?OWnd%Hle85mt.PF)ili^Eo'YeVLrlq.]f2X=hTm<Bh-)ObPA'ftN)7'mjXY_FQW%HA;WW[$39#8$C,Tqt/:1%?QD6`k[Sr]]3>6S36@Lle7s[YD.:kfYM=M!P)%m*9EZ?75X$M>DsI=)p/O$,"u;W5OJLP,Q/14![FKO%C"<f@$n_h6N&]>NoQqP60^($N:3oA;P)8G8+H-[Q*g%;*RX#C"Nk*&9o.#DL*J'_96!Oi8bX>;.EUY>=m'PP2obAP].W\;[Bkh$s%IUZ^#4'[%S;N*2N!@\UPc\S3*;O,JUQrRq#A7WQ(E0N&m9.qiLS09El/O]anIC<ZKD<dqd&lLL73K4fZ@hK5LfdK/HA5j!qb@,s?%;3RTlC,+d?AJjcY!ac*#ZiY$*OtgAcD:M<oJs@18@1IMt:LG(Y,YZ_]g$88&9$]gXd9LGHiDqFaRZ3AP&D+*?3Mh^Q6[;-hm0P7p%O<TOjB;gLJ.`#ot<'%BS/ZPZB5aoAY25*+"D?0aS,bo$b#:++f?H=$;bQ(*tOZ3V*/n.56X>RVYAWPOZN5^AlcFF%t.dMA]cXCQ*%i+&SJD"/UMbP]k)L"f."C3YrRC-e<$QDf#'r=H@'C#_GuOi>A>(XsMS:_4d;%N2%jGZbgZ,1WdXW5JRc^4qRqT:F77XtPlG.M8V$%AgK54/bcK3dn65N9Nr-IKh_^;"MLadZ"QT5\k-P.)"Tded@D7Ta@:fO%YptZ\I^MXX@,^nJnG>/KkYr<_ICtt#Y8]E>sE[1+nCVl%d9b?S^dI"J(5;^#C3E$tFT=T=)%pKeM\?C\'PdbT"oOt#74gpPA.$[CkTSMn+btD5MgJ/LLUmtr--b^tQMCUHRZlj*!upC_,#faq%Qgu(A)-K[[,mH#U^!I[JA4FjP61.!5@muT,kpQ`"T.\7r3L^<5X(dZ34X^MtWsQVLj2`T-hfLm)=G$#dbT6K+c@b,q(MH9M!_/^U%jiq<'_D#);$JqJS6mR]6#:QgLiD9a'+fJ).!>L@*2C'hJmuXhB+Z?/f)*hLMMb+":7HPJh$;UoX5SXCb3aNe^KJVQOe`4L#o-F[2%Bj2+L$.iUR`0d3o9Tob=5%cL*6F<ks(7&g^<J+CcdQ+M],V[,.e[.D@`N61=$C3BuCXnq-An@[9.f]dKp-B7\ftVE)<3l\>9]ur4%R&cXO/.i.?BNZ^V>_#Q/S>V*Edk;Lb^]k]S9f=s";oGDT:=0Pj/_+he&I\;F@qJkE^INC.HH><#2&FM<b^E%D[86[q"efU4OpYU&%JoO15rMHp8p=6m%bo/n>X<%gTW4k#5TLp*K/]6`m.?D^3-N!o;dqm-b/31Td-Wb=T%-X!L]ODFep<8sVR9*I_@_khg;[+L:@LSS>%jKAYM6his6<><:BXDqA?`:;dM1P$-h1"`*e*HqdF^i1;6PH[%NF-4elWcnR]C%^FHOF=*J`Mb6f;KWZbU.$/Lk*\O8[%]!?=@JV#%V27d_$6[aHbd;qQN-u.m9PFQ3Rl,V]c@fM,!Rp7qD!)NhePLf(PR[(MYhl]SYhM]#B[@MmHHGr,@R%pV?"#-pUEsJHTRjuHSo!^1%rhB3V=J1a4$"S2G9/:5_RCgR](PYDQ@kd;3n:o<XNs<30h"1/'(jrG([Xf\mPL*$Y`2>=rRPIogGT`M=!$;iuls_8XQ'ka:VQl&m%_(,T:RB@X4HPQG@L%&2(p9KEA+X%RdO/Y#OK0q-F<FP7%#.)=g]>9bE2PI&iD`,DA7"Pa+1@Ndu"`7R'hnS@1Y#Jb)Vd?],)B0,$%.(k%#e4@RN(<nbe,8"Er=X'XB!Tk:'>0DN9CJVFIl'n\60K&qg).@MZNb4SndsrJbRVe"hoaq_Plsq_*9J%A*#WhdH,n[t6OO)_W%2e!R,0eaJ2n!E9k8n]RHU[?EPhc`A[ha=,Z7[t2SJQOTQpSo)n#TY1]"(KAphmg-$X;RD&oM^n2#*m<C2u'"Jk:m$$Tnf1i#?3Qf%iKe8X)!29EF>PV??mGg3AJm;mmW_4WMeB7&=!D*Ff*C7k#$t*?nl*!Xj!`9$hWU+!>i5\[eb<GLk/jqG?QEL&pQr'ir[YO1Iei9j%&)ZXM/mn/GL[Q:U]RKYP.s])$\aAn8T,mpqIkKpV617lOL2q$DOBC!;s-CMemk-?bJp#]\g5'b2VKM4$,/d?f)36n!kq;5/!;fhe%Q^.c1Eog#W:l>TKBc>=6A;#sp.%EU5T[V,5#Eo:uKh,C?2]7i<BC5@$a9?&p7\Q-tkQdUtqu'$VKBe$T%&_KbKO[m<M:aPk<lTbp%Q\-q670:n0.SJ2I7?0)HP4g#c49Tq&crHce1<_-lJ*MGM)miU4ch=^Ml4k(to<S?j85ifb-FA'F3OG`QkPAITc%M_o]<#`b,_]+O%@A]+'quF1s,o[V+UJ,Vh&PG>lQAOS%c3ihDA#:HLW@'J(pemOo+4[!98gO+^U_+4LTQ*h(^t^YD?GiLh7[-*]9G*s'$qZGLd:9TG%"B)+87)^*b,I,%T(;aZk?mrEp7P(i,]nJVJR5JA]i>5$%p*P1m=?%GNfTA]o'S<8(TFkdb&-*#*=)UWsQk'$C1Lu;0<,Z^gn0\Zl%JE$_!,'70\/JODERO-S7&n,Yad]4S*_PA:`&t>8\7]V8T$cm`^E<)II[F5j.E\Q"*-jg:F29bl/A#"4:#pL*&[+JMl%B5Y(:&Luq%/Ag`RIR+<A6k5slN\PJu7TE:h_#Ps(,csnHkW,]O"\;#`+)))k/96$=#Z)[q;!4kIGAiok_CK]7Op(8<@2UC#_mHM6Fn0O<P@o`Y%g@Zu\#C;[g0ZjKf_:gtd,pD"^&O?PhR.]Uk1tLpr8?dOT#[jMZOoUZqDmQm4eH*Ca-cp6LLD>c)\F(V./LA+LV+pRDR1@5<,P=j;%N#YgEBsMfHn4M2Q6MGB\+ah4:b'Ti%Cm,!">Nge1UDW)ORuk+Z7]#/@%]*h8AL35^YO%sNe\"-A**PG0AjrW^Ks[cu?]53J9"8Db%q4W!L,DYTN*K)&?H<@6`--ZM+WG00^,T3ZikW6:I!?dn"$kEfTRM-^3ELn?%9oKE95:hM!bq4HqnFt!PL`GinLPeAW,YO3IMHs$k%'eO(:rE5g.(qm,#ePUr)L*NrrP(oibFJu!K@56S982OV_=IuBr$&t6NGI,O^EJD9Qa/Fjc*/k?LQRlf9@7h%S%d17N6)P2T).k`N%D^UqN$>JFV+N"A(PKXSoB-R-UAZ_&uWW9RgJ.pR.X>>^51,I(Q8LEOR%\Oe'63:2g**/&n1'oImA&pXgfI*tt?@fCdo1GKLeHM`Y%XCsFiHK%R@OUfgV'Wo%Qr+n5>EKC:!W*S>FqGUo`6fW]J$,L?^*5<*,@Beu"=tZ+*,#Si_(76hG)1Nt$%4NA)L<C,n8oJbXNA47`%K',O`$fhUrSJsTFfN]0j7HC18<^A"oHdnNOd$$E(E$.cr%3`7JR#-iV@Mk^_e8qq"2*V\H+aG*Iltt8s,dR"bU]H0R=[E\,PQSJL%3VJ=2#W!>#RI*!%K/sl(YjcA$f;g3WnLD89W/&76Zbq$#J,u<ed4^]OdfiPEpLE2Z8/*Oe76$H3@cq"un0EmVDhJB1"Oq\;["U(E%Qks$&MDUjU\3Qa!H/j4+Obip#e@Hj=#c\af4^Ks-"H5h?Q&6a3fuiIZbFk\%;qC%HB/J\iZOGH.jp5K:d0#Xg#\9*c3IK\bQ3)kp%(`e96;U+qC=HEl!N)`q$d")d*bXG5@!c4oN%%nWVPkf#Dc"8dOP@3pm7mT/_8iTHh]?C!CC>h/!"X'"g;($_qW3AP)'U)S\l+A8J%%PVk^8>?/rnl[2aj"_=^a3sd],)`0-pI%OY9OE`I;*ZuCXrNN;KrpFMhn#seHV##Mkc953)cX4&o>.]_1dl&9e#HbN5"Sm!b,SF'%=F4T?PV-_b9c:SH&uc(9CdR:i'I+h+%s8/h=BKsZ!,D]h'GBd?MOIA=!u`=cA/n<Ad0Qn![W>V3&"4Bg`'=Pns,M\fReTIu3*6bi%%kHsmGTe5IH2,^R]GgV:!!H[pn^:+ElChNtL6Sj%XW5%u,7R`]C/?m5WtHPSnIZN&"&Vi>/n__t/6rT$/n%4iAeMVA*mo"/&R_S4%6^0EE&=c7D5V9[DBh-C3LTM,o1*T$E&KO63&db"X$)%"S8F/f.PH:uB-j$>2=*T0(bBtQg6:<he-O#eReJqHlJ-68q+pADLKF5p3%GI%Dn8]J/BG6lNiM&cI[SDs]-mM2JFZ=PS0@EVKdF'+puP%Jt?I:*C5n5NpIWu::]bIj3gLHt"4%+V:j3X"k);2S@oX(f"WfF(NY%1U*W__1iOh]."\%-KARtk`@kk5)P"ObZBI!"kYkNp*<3^i4"<mdZW^Cnds(=WY7qHQ<@XNOf7&G4(nDLOMqHiGqm$dbS"#gR)%UJ%A]md(i\dp'!&\d`L4K2rdMi'>*V(bqbc9`48OELCT*BK@jlO-+OQr&%<P48L:Ke:M=H5Qe:=bNr2.P<HLn;C9*k-n)GmWL7:;?3q%2W2>ED:_9jr]o!O6YK>g2H'CEFp4R>38U&-/qZbj9/Xde&6K\JL$P4K&ul.0)DuZRWYT<3P,/XV=FnIC!_uq8l@Tg;HVhG]Z5ZVL%Zg`Z\&-L<L=9</$eMHD\o]m>VA-*i$jX=R2AO)oaBY8lia+PcM-W%mm>+0623WV@9@?5b+7M^lZK8D5l8Rpq*EgU]uU+&paHD\3U%>$Ejd:Z.HTl#BTR(F\cXe`&G>.Tf&j6*qK\#GeGr@8U\31<$1G^/0@ZN,Q%#.9Hn,?Ki=Z+9NH:biR(N5q',"RVX#'QY=iK0Ffl!%@gT2`10u,Spm]sjX'oAND-B83:K1(n#acs6M0DAt=uat^7Y(@+:/N44#[2C2rH'/aP]UldB<)Z@'R%/;*"Q\49Y`,s*!;-G(p3s(%MIIj/$/0^ZMAdU.Jm/u`f4lkBF^%Hjn_QY@[A(W^RYnu9X/;j*]N8smAjq$Br_,(kZ4=oPl`H`>%X<l?V?X\/miiRm?t<@iXBI3]%&fiJs.;G)bchCGo)etS<((j)7lE$gtYjaf>UC-=$3[B8#A;%4-Sk!NH<a\f>Z,3Beh*K3EIZc-&T+/>?b(P[b86(l<L`@N`dru]l%86NJ3Hm$50@FAHSI<%*L/aM[kb/VjQM."kc9U>CbZ=k?t<BMBZ'1pa0&4hW,WM'>6*j="^Tcm6t>HHJG33'E371Um3iKDU*crMA"%;PH`b,D8l][?*3LZ^**dFQX2N8uq+6isCS\U:Q@qM3*Z&gJbf,BT"?7"J46SRS2L:_GYSgU"A\4&n@WZXNt3i1D6#U8n\>Re(X%0%lGcg0.5Q#f/Zn5AA:BGK_@u\HhdTQr$,9YD&>cJ,-`7kMQ#IS"h2Eom#r<?&ViK10>.*8m\-KRg0O<m1Z2t(FlouD=7n-lW=[U=O%:R65+5=5^F+<TqGWh54O3+7Zb9$l^SKJWg^)d26UXKpcXIOb[W4/.;u7Efk*OApWn'!d\5cmN8+/h#sWkGDbsR51q,F\u-K1[AiB%aopcGk]-`mV4/-kEN4>3;jj[5NM%r@"TG588&W6j9fa(&aA[u+WoJVs@V<#!^97Q4FTHdJ'K>UjD\8X2?4eFm1ne*PdCPL\WoUO!%VcK_^6S]&oCO7&rg/L^Lri=TM0qU'H$Se];Z3ES4fi8sND-[7o3P[%@W]KFd7]6KE8^%s$@8+Y"$gIFM2(P.M#4Bf`:R]rOo4><q%#mkboU]eVrHD/q'A>Mo;6@b^7C]?r#C\7"i(Mbqu&r;@R1:-ZVm7HmLna;Z*mPMIGJP2ci,[[dQ=[6W*5cncBrf;5o-A\hLcunE!%0FcU8b*>HnTMs.5?>+uSdPXDf:l&@u>Giu<NI')"%c5<Cik4!e?H]/o"`#qWAf"--[*]PP_JF40j8OZ/SD!;2(G#-ml,0anN3@ak%:<?\2``f<iTd]TXOc^R1)djTGW/\e(Z7cYoNm[+X(Yd(rJCV's9UY>YCTMd":'6;<NeUdcDYaC0RG](,=b&oWB.p;XBK/>AM?RpL%%4R8UMk35`V_GE&6mTL!q.eF0G)gnAX4#%_b_os?`imV2`Y]r$_Y"o0*BFCb`e>=mG"u0Pl-un>kmeZ6@It0G(9&4A&K(=UQlr1G%4(k4#aZG;-MiA&mab2T-rL9qgYbMpkBL[igG1I5uFl+&=h+%5O:jXW$ZBCm52-W.nE2YY0br]raN+c6$G&b;o!2.bL;oQeR#Zie=%PT3]*;qD*k+[[csOKe[GW<p)KJqKj(!QbYm5[r:O)1W\P?iXZV4@die'O?R8<!7"O\G!]dAIgSXP[U,]l,.#3!"WS9.Ld9"oL<R8%!f95=kD;Ga->*gO:+Xg!`PALnTI3N`:t/j]5@=rDWoKIQKjH0[RMudQ@dE2+]$@CeW3HB"cpUXgi;I3j@+FHFG(JY^K<5[X6#3.r%qTqrKW"@m$>h.=(@:cJt@VeN2gp^?m,q+_S6irgMZ&PDu18MtA-<lI'#IYgZCr,5!S=UN1-0-n+`lW#Lak5i#1<,4:5Y`BMF/IKF%f+Rgh5]!MMrG<IB.q"?e4i:M5!/l;+Zi_X5Z\!h1=u8ObA#%HY+KS@Lk!^jYOBTk4DmhY4Y$Eee.5lUR5.!st>165/R<fBSO>%[m%_#;]g>bguoEZ6tZ_+JU2W)r@WD;b8Rg9i/L,p<f2B.kFYc&,sfrr?fYd6M;3EhL"T*sFE!_>(hXQNfOEeWT#N-BlBQRfhe""'WNu%Y8IOs?9h=T,=uO>r23?iJX4c0/]+@J\o1<2Mb0gho*4gOrZ'^^_J+'>ks@+^e/k42p42r?o9A+3Oo[Fo4lM//E$^KLl:^BA$&u;e%F&M1Z?*/jm=50\(Wqd4]>H#0pM)<LceLq+ZWtU0#MgYKPO8POFo5B`fK*WXNa35hMZgDJUWMJJ^WA64YC&C2RJgVmZ<mRK_[hD=L%UUV=,dL9TN[&9#jhFJ98:*U2`+;uPs7ClJt3&?CJ(>-3qN?#MbH56,nd`@9s0XV3i/t^>,+H9>YSJ)Zf2#-DN\a)>.oXZbIYC"E*%L&]$0(laGfcO@g,:]&B'$)>P1FM;G$CU*45dR>Bk:M=[DMoKrS]]s=\TO0rTE(:]"i&I#\\>!C\FfU+p"M:DEAXo`oiCsKCs.(SW%0ETFsAtnL*Gn6Gn3]5*gm535_nA&$bZU?%]Dm^Q*-:BWnPYhYFLuo1*amU[QM*8+[bo!1C/;hC5:(Y[?dcgB-d=f)%QYQHF+M5RD%4m8SB+W^=<d"T(_\W%XK\N8MDAk*C!\=3ea3MV?6],e4-#<ao"MAUHld6iONJFjkQ*?+d:Kh=-]1`XYKM9oM]\Ch_1Ti4<gZSZF^%M&7/12-@g%0=:@72X&q0Tc&uIUH#SH_cNKWhasL\l%.%9KI.RT8pa1o<]$U7.&"ID#h4#O6DJ89a#t)&UNIc$i&`#;fUH^'SrF7!%jA!a]]^\:/ZS#T46>5j<d/`#86?BUg7!](]2#@:]nfWUW,SM?.8pt>m/kR[k"^K(?bUpP2Yr"1%,@?#'R,]agO@?WU6>r$T'3_66%`\UM+hMQ2Y-\Wo/'>3BH.5[i(.GJ"!=f[Ufs'UO-2&%J9GHB/EJltFo=eWsd`'&HZ<bU;GXHnh\RS*Yh@ll8!H((rBdnC-D'9Lno%SJIYU?SO^WdmCsHAI@29$;KAZB$PU$BJL'[0tu+'6_[embd>^s5F&G+=J70O[i$VO2p>`Nm7[irE-3F!1R8<1bp..U`sU'r/+.f4%=eV8AaA$S6.l>*o%*n9CTcFNSgdVV[JYp8+;J>X8]'_S%<]@*KjE_`?crc'f]R(uZ-GBOfM*VJC0TLGF7LDlfXB5r)+GGQu#KPNU%KQc-Q".HF"63C%/"4`DH)XE6'6"bn+7#TGS.l8MT[QUr`478mIS@u6q,>,jORN3n8Jhh(E(b7F7#8r[[<bT_kh/bo0P,Qqg32&M"%pu7kXRN+3?Z)UI%KJ=H,.&!o%XlR0d.A9U)T1Jk1.A<jD@%r<TM.%rf'3_65h`.==HZ`(sI3t*6M%a(MNS(OV6>u>M)5-XY-c+9Z%(df2nY/R3nR1br?bC+t',r@u,Uljl*cm3j0DU/UUEi1#EN6km&"Pq''%?Qd]4$,oF!*kCHG=H8=@N+OrN6jP^EY$3Y&_aQ&XSRng%)Sg)QH-'HI-FKdm6r/cgR&.eVD2ch`cW:L<csh!g1DA&ud.%%!N4DkR6__dkSJ'Y=&tn>L,r@X'Wf[OL&t6bFjOonLU$8&/Q)@PI%X/)&@&ph01VM(g6`JiDD#u)$Wh0@?rTugY2rf*<Y)GRE)m2.-+1\u\8`"#CQDX47n3CX>B8/u!j7L9P#'Vj6N.&!nH.$nD@KLS`u%9fAOjTcqqlDPr0MH0"HO8n]bDb.G2]6=UU3iuj"UH:FM2+Z+oUe%KAq:F.jBD@f.@hm2*/0,kiOc\0[+fO<'H-\TM)Wrm\qKEeEN%6@bU<RLGFW[Z(jP!OrP]ALE/6gd#nTK<D6mS22*@r+`#^FY[X'Q8P#F"jO,+d%a>Ub9^rFZSOl`YA=<3#Wamji0\b^3M\t_1sjm[%+M'i?SU5PObQ48c)8b\q$>?.n9NX.VBT+"n>4)Zh&\DH!C$0thUdorigA%;njQ'<"rb&+aEW_lXs3,k;jWpJnT-4YcIldTcZh8Go%+le',7!Ig^q4B0]#n)Cb)3t@2nN6V(N=o`n*;%Q+)t;A1T2Q8AGP:2U2uD':"Z[>E423.m-9E]^mnWOLVC/s?S"qI/j34BZq4VV(%STS']"Dj'c=YD=Q!b^:qGAZ_8ch\,BEukrLi'Ee"Y%0tHSF00=QsSb<)uobuK0Gh#)$t"\Bf$Dd_g:5N<CZm[:-EhNSbX.((WPB$%r6/?HNV8dp8?t(Ho0,7ep4g$=I:cSMpEMTQB7LK#NNVe8Z\S_f^cUCcR_bt@[*K:cS\delbZuY`=P/J&+n0Br5.eN>bY7nmG@aWZ%-[mD!VQ"_O!V7n*A2FraZU+gZHRF9>iTcX\R`*OR9bFF?[qm1c!LL"]5-nJthE^7P-LBd8NqSktJYWeD[*Q+.FVF;)p6fHLF9ako%1ZNW-2kBZ1&8YbYdR<uV9nA^teS1XI6-?$QVL<'N$,3gR5'-+hrRG&C62'K11&DL4BC8Mg/%DoLPN@^:SXoGA`-@6mbcK-Dql?b:%lSCJ&ABdh]I>1/#XCp*s1\^ao_54itp+2d-fs)(qb%515jte%I(h7t@,-?OP'C.Ht4d[>B=eDZ_Pj?q'T4-?N[l:WWA"mqSk>(m?%aB/dWE@-)<9#5>462JgWoOqh]I>/3hFf4bdopNuG_@2(ifcet8M%lNR)%r)TcD8dHUpRCCUsG-A\'758N!hF(qjI)E:F)cJ-[hk7%_YUN4qWpbbl1UXnpdWL2l($(1ARr3rbk]KL*SSK'o9l"3*,1u8R?H)OrPA<r`m-N6o9h6s,HPrMdj\A+1N>Ubk_*'>EB\FOp,#W1%476NVd[p#tS:u?`0g;B"<pj.*K[4>.^5_74HY*^)Dr:A^n`l-Vm%*Uu.FUQ=nNBfAFkc_`.H-j]SaVsZZDZ#rcZF!9"V_:/YdB0'%LbmpEm?LKq_Ikb@6&SM59Kkjcd!C+%1jrLYd>S6WWcu,1#bQB;4Q1Xaku1+kBR-,lOlZ42SaVurN?!!qh_VeDal1nJT&HU3IKQ/0%)'bj9?A[5.SiMgqn(&>JRHC@#O%tY[)VcnXkHjJ**eX&efhHPAF$;skgG3osB?&$W&pDQ5q!?.44d/(iNAUm7P<S$-FOSp2oU3us%U^^n2c]D+$S5/p>HWdf#7/DkG=&PtlqFic&TeK$02(7hNT(JFTeE;h^=Woi80g8P5YD-<n`b,]t-Hm"?B4b's[<?/0Akn%u'B:lg%.am^.`b-WaAP5Z9N6d;Q.doi>HtH2G'7qRNB>PpZ"OBR5N%:<U2CP18\KQVd;a/Zn<,-+.HtKc1JZmAqXOW$5=nlCaERd\746n[9%iQ0m,=eB+e.#6^(qTK3R$!o[Y1Oq(5Dlp?06_[7n1[?im9Ub7JcZjtW[QUlZ'5m-*ZSSeO\TbF/3pSRD8Ln7^IE"P%Kt4NRUM%]S%3`r!li?7%!bkd9<Tu8LQobm_']9.<gB;TY@fMUg!A=JmtOZk#-LO4sjen7^Kb&Pc(XS[b(M>#W-Gd8\[QE58%m^=k!51>CK0l45C%NhL$mL=N+Vs,$W$cEtn)3Q85M4u4.<8pR:^B$+72b`opT,&jp/3pj8O_-lMjKD(_X&1i&s&fa8ClXA.(HY5V1NqO@8<Vc<Yp)1:p%[m8iu4p1^40!pW3RI/#'<SD*Z3K<p(p).;EQ<Q?Xg1OqUlY+sbT><N:lZ"ong1M0FV,_02&j%FMR@\,b=iBCQFr7U4aLKcK$TdZ2%9;2"?'C@TuW3iecGb8+]`GL8hnMB#F/$8P6r/>irD:X!)0sn@NHKKXqd+0i6][&&.7alXTH)4+[hIf+A7Nl0PcY,^V\fJH0)Li/7%m5$N$8TR+0T-5pBCSH5Hqs.8kSbAJ>kXs]J[*L^epAW;4N(!)-hXf%hbX[u3OZk"=T]:MKIDuMk2:G-h&JnH'gK:(6S>qQ5dlrtM%JbE9FI3o.[2I,LRcPWsFhK7IaHA%h1g-lILk\_@rn$DkIY&1htN2UD1M=Ebs_G[lamk\$t^.X?LP`[aG`khQ]!DCmRk%@.mYgdgX%B7;k"MU)0Jk,lB1ReS#nBBB^#^+"BkIWiq(A)W,]5AMci(Gk*#L<9n4.EIlK9$^lW1K$FncV?F21[8Ub;6(j#EBdsaQC_VVmUtZ\%<3,\b.ut-Q3?)SuB<F)9TJGXX4472u]h%SSo<8(V/brJjrQJ^i)@nXu1MoFH24aU^_jbuu%dmtmUi7!(RJRlhCHHYXpG8S1g]4-k%5<I-A8:0c;89H$>cM`^$_CD@trJZ"rMXVY\1Tp@-pl50=&gmM$gs:?L@,/TsN$g;(Ec=5n%061pB's=.F"$c(gs:q5!t$.*cZ#RN%1/d:1P6l/s*35Y,R1;>83BQmiI!0AmRJIe!P"#lFB/m]<ZZ;smG2/RR1"M3X),_f@%dI]DD7UDR7/`'GF/2e&eBa.:J`jC;5N=>[%13BCB#*r:7b@-A+)%uL2bfnB=AqOH)&3g9RcXA#HAhqD1pUnh.)ml+ng1R3m1/GX54u_5`C<-/ZF=r?YOZl.:L:V@g"-nec0:=8]%Tq;nL*/r2p5HfM\Hu?Ac_iF2rfu=8LmMVCGRcQ?]ZX_F4p)DgD,gmKHcojI.]1dh7M=)8:B2%=LCsOe::o^s6HS-;'INs2/r=Q`/%cLoEF"IAbLl5<n^q,!(9)>3'$Y3\j.TZmO:kDnaDAl%BfPik%?ip0Mtn2;hpg9EcX[pD"RB5S=*A/D"c7QqHcZt>'U&sS5r0Kc+m%@OIZa%*t0$pS9T-6_\,@S`,tL7)O0VcPWjsrD7-OL0rR[IV2JOO;;i5GO@>;KA@E!A.C)iP<6\,MgK&KX@Mn93jWn8c'emD1U=)c%h=E[kkqKN)eetZ];"Zb\SI(f8>NA3<9IY$6N7OBui%p#:)%tX;4'H8Bl.43><bHYk_6lG*F)q\^%8LOMetPc`:c]i'=*ZtW7V=9\%Z#4s7#SJ7aU9cji+&`CXH7!]NAd]#&B9KB)Z?@j56udTF1R0c)+U"@X?uj7d,r8RLEe]1fbVP`5S.U`+[s@.V<Wn];XV6aOV#5bZ%isZ6NgBN]pZcFg;G!sW;&s=>1cB'l$Q04$DOg'FbU(`_HM?)5g2^2n59c/sJNAEaJOK$l7S/F:O6@UA&eh!OYM_g"!_5_/SkCY`"%R-J(!#4,+X];'?moF@C?co;\^0?%idc32ft8%GC77\!jTFjAob-:EihpDo;NQ7%u4$m'%4A)\A\NQ2op0\tP*O#,&hcDQZBR1cSM%4!&$*WDa%a1F+Mj*_alO2]=\A-73B"\Ho-X->-Ei%!iF2B35q.:[a[@C&-6u2C<'Ej!==<9[8_2FP\`4G9D,A3>4W4&(?B*8VgGK%[qB_n3<1%g601cJ-Q-dpTQ6p3("1+_bR[g(fpJ:D<+Y*5*_aiZUIbSPR%0R9'iN_PS=Nh-@F+#Yb'W4*%[L]1eNj5cR@J!0"$kQp%3P4]m%jkqC.bWUsjK.O_ZtFDk&l0rn@rcbJc+VYeaVebUX&*FUB>uXr`oE#$,qIp3EFo^nd@6PoM+1EPF=(Y3Nhee.R@Nf@A<?1H%cAmF0:E,EP4<.Y_B-M!*Z*[;ca;KRJ/cA^YK4s5f*K`/,=V+UU7*`$dFnM8\S8#\NRPQ.#^]6i/YJ.O,Ak6^l'03DqS;U&gEb:1E%%CqnK)'5EU9QqgrG_LgY#*ZBV6<MM,?ucIoU>%MH->,[`e&LHB,Z6j@@WH(c#9^(`j@nW03M;AR)=L!"I`LLXXIWeP_;pQY[uDLW%->,k"Je3RVfl^?o6050W=jrtb)5*((`au&g-;<i+hGZEJ.gKH@W15#>6tT7U"$*:2];'BnhT!5(:?;mUJdrYtcA[I&_IsUJ1TN-5%E#Y.M6Me@C\=DfOF26+,c=Ht5VAGfH)%fm)X0?Y*1C?UhBI7e4FHuoF-Zc0IMr\oKaIK7/65j+S<.)FK-K8(>NZ)?Hjildi!l:GO%),m)gVnqN>P\K<tT$<[BS$Q-o\/VX(-8K3>LpbK4cCCP$@.%:F9REp9mPHQZF1;(,=MtH0F$\,d>5lb-b`k8`G([u+2.i@1S]dFS%XK1$KK?ID]nj;*@SEY9=o8V&W%#7`)(Rhn)@7.:j[<"?D"PBW3bF)[Rj_c@XQSXU(<2C!UBBHM#F(8b+kF_Q!S+:L.TM)-m/4`I#%"rIQ$JUlBSV@]#Q.q&Yd=n]5(MZboq#NEJaU8qDJKcht[0bf,#_ZJSJYh2Q@=2CuidiapAZPP-#D#mVWg/ZdefGB<"LL?fc(3;`C%&2EO%fKmi%KTqB9R.4:")j&7"J/.kGQn]PKD$:$`ROtEVRoSbi%B+HtNN])m0[fJ&LYfJn:0QD4AX+2O!T7Ft4;_di$Ar[lO@ncl%?7072-a>*;pS%&U<MqO=#HpB@fJ>8:E:J`0^1LTa<8Bs^.8q'/[S'?$a=EgBZ!0jYrd.Ih^r*s2/YkaFPli5bf[.eWqRl?.7Ks[=%.uiakS4<cT<_YY-&136DZ[Kbo?&_MadR_5:76adKmXR]gDC6]=?WlbOr'ddgi#q]'Ug,c*i1%:D5MCD:,gDit8<iQa\[;lgI`Spk%8V:3@gkf-KLEs_7'hD]"[IP=0"9^Ns?b%@D'9_]Da!U):BQ6><=%3X^X$fE4,[,Hp8MkoU^nuuYJ5?9t"W0&?kg4!+#EF\7Na9`>%n/94XJYZ<]^qpb,,^ZkQf]'!WZIURem%R$]O&kubm[X>9A#)(L!^iIeSq%_K2&PFJSPl:FgZp73f"hPd1mQVg??%o#ZMX'c"3_*l%R'M/CnA,#AeSD)E&4"IcC(ZOR,NU:,&]^jY:'=Cs9?PdT`uMZSE)V(\"NMeZ$.5cV4^$-k2[3/+=/jCm`p_%VJLj(qGMHC]&SBRu%;$u;G[*5`lW#`sP#_h3AK9%aO_Wpbm*+$lcY_Fo]*YN_>&<LHd+AolYI0.iV;,MjYH.;isV"&Db,QLl=YYAsZT;;"VhL`0!N_!F@%nG93dUN=[A`LrJ2o\=eq,PXB(5t_]H`%H)1&)]^T@&?3LYRHL:&8g6lOCfH->#>dhVEgu;ng&ZpdVKc!<&1fN,Imu];^pOc:oq)5%'(U?9&fT*<8ef2o]gW]>m#P]-^odK9m#N?o3)MhX&TC0SM*S"9!l(aKWWu*>)VG6iFj]G[YmU0qaM7gC!`kkEFeBGS14rQMpn3J^%lBSDj@Bo-=ckVB4`OMmr'k<;"+$Su,Dumi#GXjKg'@3!Okh)!XI07NDDT`/][WZClDMAUR#1b!%,lJu:Vh8"dl"CK/AJ=('mJnLP%]Wq'0Yjrj6"YuOZ"oTkR!B[(hkQ^L:XE$k!Bh&JDOC<Yt9?9Q*V9JJAC0Dht9NFep!5!&I-%TW;GV6urGEq_n^!jbK\"'HBmPGD_%B+fYV[4;RN"hJ";A3bI.b^du1HGCQ@n4]WRoVrNXemd8eV#k-50kOOTJH`ZVdh]MSTVf1'+bOB?2G.+$K0d'mh'm#kTs]'L&]EMY%fI;?:nYB\MS\Rspa>rWG9#D4A_N]3Kb-@p0\8YT&<GsZk/&p+;>0&mZ&4Ao%02b)U%T@5SP@DSjF9-R12GS@ckE.TRgHYgM`(Q1k%&"=oKh#p$ub2gEb<Oot#;b<M_8V5r3]-><,8Z6Ff5V[-s83KjL3&FLFJL;^>2ITi'!QJ?&g'A*^:I8O)D:KA`"p[Uj7FJHDCTCKN%@Jt2ET]R_YofI,.(pmta*NL>4J2gL?7?-DjS=/#Bp9kJNMKVhiMp<Y^#WfrJ/*jejcG9B$&Jm]gMM'2%D=IW$'Elb+GK9U(T5>8c%.O':qSLTKH"el1Q%hG*IjGEtG9'35e1,NVMdYpoHq8c#Pl=R7<$:E`8"f20+R1.k3_9CBDJjp/oE3XB1eta14O:^-#JJ1>@6qM#R%^j1;dr.BPF]b6M;aTL4p_'%jjT<PO:Op]`_f7iam<8OjL\2bKFML&!@!1ORjF[un+j?Ob/N$jiRU>cB?$muQ=fpiW\Z\Mp6ck:E4%0k)tTe$&Lo/OmCH<]+&#3">@*c73_TkEYe3l"Z=$&@VNKJK>Vf"fmE;7$$#$:76iYf1N5.nR<S=h9ubD;5.;h]+dZHjL]THPA9<.%IhFYQ'IMY=[]&*-=c6O%llF8#?uDg09eUQp7]bhk$G(^0jtW4G<pX+C'h*SA70`CHeJ;!2;4u?$OS:3(Z'HsX$Z/Q+"WE<E(@FhY%'5Fp?,ungS!D`h3:j7Uq5n7I3^^^nDKc)QF8/Mtj].6jlP^M]I`Ki1n-&ERBk!#6'->';SdkmqV-]ALjq6$Q4s+FWj2,]E'1,9de%bjah)QnUYEnM7"&<S75+`TmBbgc(A^q]`q"eNFu$!gnF-Z>+dYU3V9NX@>Lr&*10a5fiF7Pf,GS:a^%M[WJj8!a,m:Iu"`@&k4u4%J_ABBHgG)>.HbY,/fPh/[eNpg7RP&"/kF(SXomFgl_)e=6?+5^W%)'r:^.,b[lXXH@Vd!iTTC$S1jIep*Wn*/Qm-!YQ,C-ss$lKg%jbiK_YCJ0c0Sibce(EEa2JDdT=k-YTduY^k4^,C?!D93!o-;86l#Ja$fg^RV>SZ!s$%:EIV>pSKHdh(IN[%d'$2P\-O3FQ-BeX%X%*<%.NP-44i/g![082`@q"4>Y8%'fGtdA/`ts2@"dO\8[TQ0?4c"f>-@JO$B#&KW"6h9XJV$FAH7h0:6.U8>Ui)[H<Q\e6+i6.%@q%BBJ=mBd.<7=i2;&H[o/0On_RgGKEFcp5X@MO4T"\\%U,noD(AcBV"c(H(N?(0b9Bh9GAOVfqcc4OQ@)IA?AI\PegY?@[+GqD?3V5%k>AFRU9=;dO?lU@$-4YO6H/2>g1`YSMF`T,i8YtsL#!U;PTXVnJe&-IJjX5EKl0*a,0/@2Y]peuK=V;q5r9:Ci\EWTP.'!Y+VE5Q%?]2K(iZY=o)MIl!O26KObZ?,?3>N`Vj'Gr?X4BT@BuTcNd0doX%T73T?^04hE^s4J_DG8STR/G7M`.kR@.bt_$sckYakDjQXgipO%T!UPD!03RD6'=qATq1"m7V">D`mm(X(SQ&.!Z<1Q!7-LY@%".d*1;BI>m\huPsXu[)[0,g;<-#2"F2?H^`Kko7I^ST!$#UHkeKK;%7(0/(9k`W"nuQ]FaJ&SM*XPtdil+=-m`$16.bu"V1I0BE7QRotqS^!EKc8noZiD%2!u"Y6#q$</'rJ7,Kr[c(A[hf;8qiJ!+QWWt%l>H2&EHaM[o#(QKd\UREBAm;6$#(WC)XsQdXoJu++JFLie5/fpX"Xd95MB'QLa:@OMHL"p5RS;Z-njjB6Pp1;H*\VlR?<TUj63[s%@fSAlSs>dq2Nsne:d5)(,""+d7CCL[AWS:J+=dFF7fs%=>5A>A@Lst7cYZ^EStZo'>!/fQTZ#YlS.oh2dhG4JQYHI:TTh/$bh>Oa%A)bD6n=8W@+e6V0!9^<M(D_D_DI@Th%]$_q)8S1"*^>Ab.)ESJ6\=aCYoq[#>gY%6jsfbLV%`?U&b)1@GM[+laIm*@RP(_HCN+%$%H6NW"6RS=RH66*&UMCI6-AeO>Ip?MmJ6o3tI04DTWer5DK0GW84;U4KVA_Ik+`&`E%7DrD"X.cS"lRY@hpF]r%5"Z?V:'M(3NYD!%4;!uXRGXc/!N:J$-H_$?r^K:j)grf_B`VtD4<E4T0rU.&!ZKiUW_*q3-u4(U,Cp;q'if3_.mnjDQZ"a*SV'%+`E8FY6bOiss"B%Q%;4HW<5!Uu6%ANGs>>s(*K;c1eDE0cJCn\F!R+^Hni_8:['[\fR=Jm#MnSmBc%^`E$-0G,*NEU3o*J=>@$-^OUGX!rr&5hS1"&QA(%O2fC$J2+ibWV%3_<2\0(M+5+\m^bHJPlPlY>p3f7#"2jZ+r"$c&XCim0`*]kD?rL&YR3=!>4\ct#c[pRouul+pH;X7/^Q939`l7s%3:Nk%(p"H_%BDkE`)\_;(I0]N^fa,PkL%Y@8^/$/2hXUoPtN>=9fsQR6!=Dbg(.GP3[H7JOOFpFF]anO(F1dk8N3n#$K;Gp>c[8o%Fq[8H0m;M8#@q3TYsh:p)227'g9lZ3>m4u,(2l;Xq3G4o/EKo,Cd<(\Be"??cp.g9AV^a,Z30eQ/V227a0I.R=L+<N=j0or,rd(s%bE+de8.alXjiuhL@9SlGPYY>P*j/<7_"s?b8$qBfp',,mZm)rs]MDuUN?l9D^QGZkKK3cN,?ea_JZCKb)rF&VbfUjo677heEhqhI%O+mobo<c/,Fp)\f>1qkX]Z5R82"&AX"KhhV4Q1Do4N2nWS0=Tn_*0"-A.$CF6G3]6!gHOk^dRF>!Pg34-8:S'as#hCjG@!::_Ma.%k_`qCCgn01$iUN',:Th<.'$O/BU#G+E-S1U_`"dLhGO4aGX@@P%dtg)iH-bO+V_*_iXEP!UW'"\r\:mGK<`NUigOD5`>1f9!'u^?%h4KNa<)qEL3V/D1n5:t@lK_2#]MuWXRcamScZ5mpBmWJ*=Wo3U>3hrLp0beaIC`*@,EY*N$&$uA"u1Z1VO+iIBLc]LT`KJ5X%/iP%4;A8*9P,LqkI),j$<^mjEXe")GG@>0LQOiP`9^m7_=Aj/&$WF#Jq[=H/5o]WVN?(6+/1S4@4G=XHKNRDiA0bWk2D_iAVd=aTKM-;%A-ak>rrm5GPI)u*:6ir@cCt[f6IZ4_L5bR$VS#q5j:S*g#I`hJ13AMu5pPrU%>"qG;L:QjgYn#61c^@S&+,f5S!O_d*-05ZPNZcl%DC^r[oQ/_e=pU_JN2K-C!i)gb@&bUTHDt`b+3l&J'puj/k`!aQQ&.rB@jBD>'GCYR#(SHJ1n)HG>km/Ra8n-%-9n5i,W+jG30T"l%Qm2bK&n*S$MsNd1Ja'am#"Do;/Y`L_6:j*PPit@j5e2KOFie%.+6%)Ja$AR=_0=0S%,m^,l:7lB9G>GBH*iZ%J4:!C_^Xh36PPf<%KAWLOc5oCt%soQhBG2,,`$so`88,N4WhRS>7PYIkBp:^(5pKB4Z7XZenMd0V+%-ouD2^l^UQbM&VHu't='u31"q#"Oq!;_A!Z-d*%S+TIC)R2bU1<HYo+\7]\70@QS64.s%gZcLDNIt],`M%g;+R\'p(b%6\TBW'UFS9od$\F6.+kGN@/phWj#_N2Q-&1Y6fP9u8_Te0'%Ga-W$)AB>N#b'iV^Es(2*\%giCPaZI)7#FbJF_Y$aal3gHTe0,![?(Np7rBUjt,+I)hl"WJQ1^t"\U`E/C@l/1'1lX8lc-^@<a-I%,7nVJ@K;:=^aLKT1)S55Qe.'Z#<(M"NBG@A3(jn#Uqk5idc?:S\._,LB9`B205`Y#88?o7b(ES:1&F.s!Y6e$Ra_X:<]j]$Z3m7,%:S4*tfP%*15.]+mEK($*AmdJTdkXnf,ETdI<T,`4agC#iZSi?K?5qrb-KmF8or>EOj613PPnGb&%nM5iWq]G2Lo$]%q?M.eiMh(L%L^@[.$sWt8OocM8Q#-'9aiL3*b^pWj&#+c0-kl`S*a9p;B!m7Z'(#H#f&Lg,&^cdS>P5-N]JY`u)X.iA._?*>1)>5!jWN-)((rHE%$,J+T.50)kU(SBH,P*HkknY%Z"`QOCM[gZqNNk\o9*c8MQ$eP"7+EaWprQ)<08qH"`8uQ4r^4@V<\c``*2@kM,]neMqk=QWJ<bt\%73J,VJq91O7o:jLU,Shn%&0G#Trg&><qA9h<HY'"7&CN!!qp]Z?"8^W/)k+T\<&9H2I5+9H`bYiTF*/0(e@!3)&`=Q^lU@C'La8(%TB]`r0t\8o@3dkY#u(El+(E3EGu'No^q1lh/fq-3k^g1*3eGDMW[CuK^K^k9#nrd'*(\'Ui.f0.OpN[BeQ)b[/Z_4h,U#M_#937C%!UZP6Fq7f2NbdC%mQ,VbP2PI8OFa))[[!@d0;LL,EoB&!/[1s>=rEmN,%VAgC\YpA-GV=a0ME(s^Go7jL?7]NHs%u]Z)M5n$'ldU%L!aSb#t"0)F6lJaOp)+<8quMQXcq+ta*&$_BdF(;%/!3d)*tAYZOih(N0^D.0lOF;-%=oT3Co7),V`=HJcQsF_b:gMk$A0B2?VqD%&-e+faog?f!a(<(d7:Z4/B3*EWl$&=)AiV_=9u2771f]D%9e[.Or?W(6r%"/%L=+fB"CCPJ+3rs,M7ZYAKrlSH$:)+XZK1g5QiA!%a@ZsW(G*0q>siU>Ot-!rKaZS=DHQ+^K/t*dCfI:)^&jkC`D)(3b(J=[UlWC]Jm^iJ)BB1f+]HU#%/*fJ#"eC5l4=d5\g&.eB&MFf%(5<Q+%o>bNl-h(OhAh?UFcll$pd,#"2S\I&#O#ML\H&-0fF>s`LSgO47%Fl[)XtJMR"kA;.M$(qk,%:)&UY]2T$!L.TZ)f7_n6qF%_&CGY'UXqRl&B/8=9=F*iR@so1L$i6E1EY6JPr@TN!_0cZF#aIbK'l.GrgVi=@@kq'6pP[BiS>.6_GD#B*@JYN'+73:*s.898Ze[%D=&t`Yb<8oM'BAJ7X?2S9;!U[0F1!a3VPtfG[RBr8dm_"M.Lj+,?ZL@;Jnq6XiW#9M`NYlcq7?P^pNDQ=[sIMJI0oGFZE(E"#7Y>%`IrdV!g,M,3_K_]6C'ne'FZo@gmD1#L"+NNa3!D&)p$eDR]cMu]n<0Y*k^tGn=FaUfX5gf:pq&a`IhU(lL&Y'7UDS.!!4fUVGK8X%_i#;I6AW7@R[b=em[Y4o7'[KaUC:<SNtF[qKkO,=7Wh9r5`5b.`g9.J"f.58'dO-`*E]0?bT4o)WHs)h9e(uA*)_g5*[_7]+VFi&%__Xe'ZJ.F42K1Th-.<170BkY[B'C?]M%Cd[F!%WMHr1J+TH97L=R88f0+&[T58/UF?hDGYVCV`!5U;'Q*K_;hT6`K^7`RaQN>2Qt%E)#8FH%k@4TnVhQNhB[_Q,!VN6^%;D8sb=V215-h;9T2/1=Knt$8ZMtU!T2Qfm;1j$j()KI)iO4HskFM$jIm6iO]2*O\A'C[10(,%k?oI)Y=3YdWN/_eMP=GsOH\!O_AG\g.j0iY2Cr+6,9dHD+@9*WUVMDOTg+Yr?]d2IB[Nk*Vd'BV!i7])/13]IE>UL.:jilP2DC]+%Q0]8n;l]t`C;&\/&us!a95Z%),F&fYK3LNtDkmqL>*(u3ZB,(U9PHe+5\[,_<7YsJHF-eb!ao5e#Jfo_G.hL`oFWJp5qB<54s";c%4b6Q[0pm3sI1QM57WN37g)?+e.7h</-5?,MQk\n6B%+P,^(F.<-9LWEa'#Ci#T.]S#K@%9qQ[c"GV`mRK#&WiJ2jGX<t'nW=C244%oa:kFV9]@0!)4A_Ehh^IPPheJ;F,NJ9?B=?D*++OpjKE4'K7%JJND&]FT_t[=g6:ole&N8)U9E3d=V.J!mm%diItan<_?mS[fL_M%(6;l;$?e>78-'Zq:Y39V:u4D&-6ZWG(+\L6/I87T\+)CD(*>pi"B-TY-icpXG\>`ant$u!8(_!+0h<3<B,?`1q6fGof"$Hi:s+qj%:Q>seJ)[j\7u6Sn&QK=.N)#-FhNRRh:k+_5_b]hT[oYl^4k<f)%aO^^@,O"E'TEuoJ[:%t>n^f$hsrCHo$3&ESjp[:2.RX=;J4*S%,?m%\IAE!XL5>.B$?;Ji$G%FYYbJq<EDEHiH?!_TU05FVTd4`!JN?RtX,E^4_DMJo2]Q@qQU8o]KpIJXBpNg&#sB3e"(_2$_DQ]G%SqV,iTTUmi5,=QKLa=0K>ZYX^g;KZNd1jl\;bbYR-M%SR#(s\KI-t6(12]q!OXq_HDSX*ob(Y*!!JmO5a.ekt(#9=.<_*M;lC(m.%J/6O%#&1=iYA)`=hQSgt.#0V[&sROE7Z'O2fQl1Q'cIp>%98EK8U-9DS35);eje%#YM^'Y(m:C?l)G]uW%@2P7nT![[ZqfM.CUV8%Rl.4*OI*8[L71V(WCjdCI's)t!XYJiHIJPk[55,_GtS3Lau>qdQ!JsK7q\!]UCggSTc>=(7hY2m`lZUp:)BLY+rFW.=E5Y9N<q;6%ZreVqCn8r'Kh`]B+@WGqj6/X'A!d[%bSY1c/""k;[d$#sRGbHr,,7J::loPRE2O>Kltr!D-=N<OnV:\4&7pHF<(VWr1K-'B$HAjI%8M<[G4`8cD<UOpnf6/8;(-/':XqM+0&_Nn4.n()D/(@&9B'ich1N:Po%5S%+72f-oSGp-o#[*BX(ep*=F4oT1.-\l\Lba\/*BBf:%W!luX';efb;lZuMnt9!i"9:G#Q)Gi/CFUH_X,D4lAi7\eX\]I8AEZ!,P"nKp9;A>Jj<;LneZrqUT2V"1d6c\/P/2Ie/S.M`io"EN%N0Jjo\$bSC@N,Ae,tqTI_,Rs5m1+0_P%KqfR3^Eb6<VaX_s^)TT%@[k;1I"V@nTiBeW^U*X^YS%b5Y'W4!<dbkrVbPdQj75SFA+f%d$h:-a["g%7+=cc"b9)!0an#gOAJF*7eP9cp5S,t;p@Ap(m$RR@YH3Z].aYfJV=q^Uk"UCq2C>p!aBBaDnn9l=15%f6jnq#6`l.l%03kOD#Z4h?b6kI)r!QC7%s*nfVjlr6Q5h+O=p6)-_KSWu;#lLdCp)<g,FjUT<?[M]Q&Qsn,sGBUBL%_4OjH$(1WdS*"F!*uY$C5t%9d5:J>)#!IPecp^ah7\U<&dIEC=Eo%-)kmKH=X=RP&CfM+?LSHWD2J6?n4)7I28Drh>s^X,Z6M%h@h:S>'^c&'^m.S%8I7.0p>fl%Llbr,]\3e"'7^B'5TOK"^+Tf7U6*b/)b;3-s2=JgogJ5/8E(A`.MO3.J`XoZ_g&5k6onGJ5o-lVM606H?4a<:CI))IA@GtD6c$6(%VjsiMo:_:Lqr%3c/"'W;>*T(GlgS>71I"K)`YES!eK/R]e+(jW!g4#q/rl/'E&WnS!e*:*6bQHQe.,tDK-Q`k1.BWO(b$W)ZtEp:%.5=Z7Qqm%Q7];)G=XbdE`-N&X,ElpGZtq/a5b_A'4UaEuE<@L2&4juS>o)c1.;dG.R9M<l)c>k)NqC@@)g&(s'A"rh9^9RR_!b=1%91Xobr;[oSV;VEu=R7$KD6)C:Z?Pl8W\`.N`WAVq0Tsjs&VV%S[%IP>@XaJZDR$jGK)ds\`8_d]`RAMJG_d*+D*Am=5\P\3IgamL%M.0U1#^\uukUb/FG^N`EhT/80\b0f-0F2LN2L)D+*NTL!id%LG<Vg`Jd&O4&;OYI2bn3UG/ZoIY<_#fHTGm1h1E%pRI54ki["6"@%=]5#+5S-NQaaCC/SrK$>12]^u%\?gUEHnHioJdK%1+.k+d3@J%Q1^Q6fl62/#8u/=]PR,A;Ql)*QiNZAZH:@Ma0h^b`kFI@>(#5,%do$-FdX)g)V+6<jEkXV3A+;.aUqWUh+U37^<]De$g'"=<BF("u>Km2eA7dG.VB&)O30>_:(t5hdl9TKoaT7^@(cJ@kDcG6BZ5>&^%)7S43JHlh/^X;[Sng!9d7Zam^I7D:(,\0uY0kA?sXj@2Bb"#)k25[U^O[RPf9EqkE.<fDC=YrR9?5=gV:*9Z?:[]CZ\!!I!Jo7`A%OcX\h9,S'rXGB[[@1a_0FoS4)MbZY?Y[cX",p-a_pHOm7QVAE!4Bj7SAIEn4lKGK=?"7gb#V2fR@nO\11ea0Y'9Q[CBJ:oGlC"T<%C?2GEDrG[9?KKEN$-O"NjBJP]QJ?(\WHZQ%:a@,G5s7<QjNgk?3]k>O^*3n(8Gkk/%r4/.7?CY.K%Wbj7[2Q5UoHikM7GJWQRu0p%7']l?;dh1ujO*8F)lQk*^qtCLb!h5BjL3Dj.4MkVUE907Z8+_M:EC*`1=e:ZB4d8/m4r6D&S>T=6%kCHQp-DJ'$/k7[XZ%(/GYqG%1L-B:#%Y%A3U<(C>'YD!@pp=0/O0%u^la1_2f.Xo!p,</l`bsjE6t:D<Z8R51!%DY>i_m9^lHob1-&:dK#'B=gV[9C_#tVSJ7TEM%(rn1^WlaKnI[cf.,]i":kU43e78EIN9AX5MmQcUHH9G-Q(Y^'K&^GJMB3#TGbX`9&mM#qtAT4'L-0S-7\9jV8:d5,l*c)56:@M7t%!t2h?mnX'B8>TK)$BSUa?=QBb3B\T@*+C[(adqB$3T]##[/e(*n:s'ME.k/D&0q@hCT6<`edRTp&okp4Le'-<<3Cgt#1rLqS4Z5-%I=2[s4U-gtpP32u>taMtHDS"a&jBoab-eG_6[6JIp0eN\<]cCSlCKSSTgtEHGES'k-WOJ.L>(#C^f`NDX[9]OKR6j)s(UjG-/H[K%WBPj&=lbb+N[1YMCdcqnA38<uBNQ*[83n^34Ug];YVmCg:OZ/rK#qRnq&-HK;tM%q$8RI2L!Cio)$mdpPf3&8QNq#V\.Ic[=?Pn\%L.Ya6bp%+(h%5R;BJ]oF&dYDpZ`DLSjLE?\7"WDs>_]'-TL=Q.6LX92nuuO59_Nf9&\@?fN/bb@Cf66#3n-G/ViiCfP7A2X-;:tU%Wj,:K$T_AMRRW\r$)ZE!"U3o`^thA_5%Y$c$WL;VL&sq$r/7^&Oti-$E:*0DqC>-K"i5*d2)(`VWOab!C"54A-jY3^&ttT%#t@m&%Z_aN^p\a>^]i!^C7]*pheQ!pA7-)L%la9s=($SsMehFl[U&T`C+qqAWq844+k.P3NV=44e"DEObT+pt8JC`#+Z4sOLi>9;)@N(aK%)DNrN8-6RtbYI\n8sIW(7PPT-$He0AX\s5F^ka;_h!t(iY#fM(elG]9R3'?q@gQAhoGj`;Hft8ASdA(!G.Bhtau($1]G@$b^;]cX%[;9DH&>'D=(tZo&^a&8DWp,"1R&8q%2+5>W,OCH',c3Vs"i)PXb:,a(.eJ<KYpBebT/\=ommt@Ab)%[s8=#QniE9KePr0:.OXpmm%ff(I$nDZ3sL$YVU4B'AN&Gd_TSWMD_VZ]%e=FWHB[M\<fDTpm,a3%[4=l`7b70t7-i+N;(WSk++<Jue9#+!b,iHLTR,^%0[=M`?.%$-c=G2s!^AVC:-\$u@Z-Z#5qr:XA!Uko@!2"EIpj(`FnN&tD&9"<d0$ZtZC`b1&f<nO>8s1m:,H-8:jd[2@?-Fc5.6'%L:s-5isX%6=mD6Jo/HQQATH_Y*"eqE?(rq:i8:B'e'f)3&QRA'Akt:XoX9HMO\?7fh">be7pf<91i>JWG7_g['FdUaBt$W!qQ`?pBY"[?,_r*%$7Q1E6\'fZ["a+$aH)=.a!e2pmYo7$!I`CtgQ=r`ND<>E5dAT@eQ6/K!eMqfLD\-7U'q$nPaEbTT0gS7W<"4X#DunSD+-K$ZduZb%_i&1,Peg*3]YGPU)SWX6W#M^G,3'b&Q!f#k]sEDm+A(\Ej\3$N@3];DA:H2XI=f@jpB3%/,ccmen]B_E@Nm"@dm&7[L4+>?`ppFt%\Fp-(PI,Y09Oh?gC$][_b6*Y5d:GFCb&SJ=+_]WP/k$Z+,`gYNQ!lF;jWTm4MSPsbPW1DPV!DaQ.3Vul<U[^XHkp:7_.l(`BQQJ;%3/+1Ha0^u)\5mF@S;HSX^]I3]BS@PDMu#sY7fo"$T_mXJZr-/WOJ,Qu-M'p6:iK/RrAq$4OZC588&:FC3sQpS^1Phbga?^USOJ0J%UW=bfZ@M4`SehQhjE]*jC.6d3nn$n-!3X+&&0N6d_+#ZOfNjYpN@d,Mk)!=hoh;DaEI9'O4Euu9,6nK:UHgK7&M?IA/fqkdXt(60%$jQtCic<#GP%p=o\PJ*$K/gZpV_h:Rbj)*\J3bD"PsQ=$"m>.gd1!)O1ie=-&(gp7&D_3!]Kt,9+N71`q?TAO1A2?.F4N%n;OA"a%.]H>e_A^E$IDh]oeHI:e.I3!!OqF1;DZD@mZmg+p#\Ti#JU12gD@ph@^p*%A4ED$.26.3<Cpic(0uGn@;1fAF<iD>`Ttgr7E$u#;%eQ\IuMjB[V"L9F:5o"GeWZfTIoN+ue/kMRLK;`IG[9^G`Ugd[2;Ghe[?iuQJcpI)`3c5W_L<Z\HV%eKU![NT&W*f\F_G].q>g][l%g-h)8<Vrol)\mH_O4kem'7gaX!X8T,6NKqtmjWTp1]U,'+RLsGPE%,GNmVBo:I)&&78]67T+jS*``j@H[07$ar2,"EJnC^?F<*C.%"LXE@YhM\\&hh'F`nR$c?S!M,d#7),.0_5;,sAjC,(dC8Z1<*.Po=n@rD1+$iZ]fWI<EGZ5,Y,MQ<jsZ9YSiq`tTeU4a&<0@6g2#%C(VW3Nob+p'7V6!nNeI56B@UH=,jb>VJ`_4^0!rN-3$0p6G"#_Jrm0>:R$^`8pFWB$6og*M28BRMTR,=jI2Ki:J7@rXKbRN_K%@"%+^?(qn6(0C3>3KhFS+B0d,ITo?_:g#/aotiGHJa+0iils'@J7ZEh021iaA5fp1Heu'"c9-_;lBjkDeJm)A_%+@aM2+;j:3LW?4(!%3"u'!;Zg-h)&g=m)pDPjIY7m;!146aCtJ`!Wg"[S:F_d-aFg.>3"/SNVC6Ba/d3ZTE=>ZIM$2q?SaN4%LVVOKM'Go]9NCSYs2@-:%UR;iSAVX:DN>(>*"M19A`Z(r)\%;7U-r3:k6^L=%C7,C9?X8h2<)U"X;^5Fb]'4bTQQ%=cG_Y[HOtqY#'V7'RWPfd<m;&7DGe&^7%1I!N1=bMIUQ5"4rYiiJdjo'rU7mEKCC+,[=6B=V4RhA-1$)F@*^.Hdj0;upB#Xi/J/V]4cF;5_=hYosQADF+\EgC7'!*_7GAC\=:%$#F)tGG@eT&PdB=-,`R#l\d@*oES3F<iBk&k-EAE^6AX.",?_S0aHjUJi8?VM;r34PQksn[6.6J@_;;e@$VUP=[r;P.[.mXlbQDK%R('Ff:/FB9BE9Ql.#8(LhIt-*XE9R/3[cKnAC_Sb"c4%q0Z]g-]d!(1lahYkSD4CI9dXe59GgDYas#%&*VCXNiBZNXF0K$fOXS.)%,nZinU;mF[V937bRA'eV!.-?>:Jge@.h6`@-E:7/j@Tk]1uW-nZm2<RW[cN>[G%&c(Mi.M!`]s]:/%\<r%AEJ_7?7hAA+dui:.g6%YJBI.ag\dZ!e2YH:_m=BH)dh(Fh4bMau5E`_P!VJF+r0266g4!,%cW?1IBMF]TK9Hg3FTVNIlY:)PH#0@YMJArQ8jZmbAqe$r/#g%g;KYVQOX1?U)7<R`5S[U=g;jq5e/;a_YEmWdWeH3_`AX2"]/.:SNr%\^kMK^EJ0*#$_G9d^^5O81fdS&R@O%=]1*2_i`Znb?jkW+%GTNSQll:b@:_HSRc;@qY>Oc*W$TY(h.))XC=fc]:N;m'Q_aBsF'CfI<%b$b"=AB%lEoddC\t#%)Vsk3R-p>ZrZ,e[QdG5-Z8<PLp%DW@c;SI/,TpmXi):9!$I?]>Z<Wkl9=ADRu#R4*_lbQ\@<):El*(fHMA3p$]a<4JCTC(qQ'j:-rt-UsE03pjJ$i74f&M\\T2!dtel%\n&T`6a4VB[3I=E>01-hH:-uGW$it8%2gic3`JqH3i;9`=95YNJk1LQ:sOq2;]1uu^CoO2:+EMAmlKl`>(TA<IZL;lB23u;9oJ)p%`"W2Iai4_C$LW_UU't#f9QF_Mcn"H9'8dZt"SW&X$3EYr)MOt?paUgRQnbK/""_A&hKEKe-!<g8YG3j]?rp+W<^9oh`h$Aq\<K-@%2H@"C+-<?R?CmPVV.aQkSO+'Ml9h5oVo>CdB`4]FI^]ALAJQ\eQAP+oTGe[Y/-mY'`JCV#im<N+*8DnbVp@+W>ce^Xo*RW*lXmK-%3X`90j(04JK*\>hdcCM\7\MO;`;ja!oo$bK'XL``(N/9kH?3:CB*Qn4JU/E[`A(#F9(s1),9g)W#<o*SW:2&gns`'Q?>bU"1ut6?%L_Lmjf:7Mm"A.CV)l:;=$m9WA[8O+RSsXDdZ2\I6'6'^Uf<inYQA]m])NO)\Qq/YL),W\U9ZZ#qaTIi('@(4\Wg0q%P2jWO=b5Xg%=k$>UjeEX3"gW%qkIM'ajL'+O/XT)-j@KR;fZ8j`a-a6aRdnc`Q1_o/*@Zp6-SZkuEGd&CoS^FZS%Vdl0TJKDNa<RFiM.2d%2o,#%2-,i&@"<j]i!uj@7\G8W09es`>'-2Y&Y4jhE[#l8^367q#dgC69NbH-"1V%QC4j['Z,?@@:sb(&iB^d9,KM`K8n.n-UaZ+QRQ)'&%b!9YFjib$a<.m'EIm=L6+GWgM(\NNWBaEq/d0t=6kYRn)+^d##JP%(@D'^W&,`$\iEPt4MjT<Bog8_$;&9j:l0ZiMhaIjoYRaHd8%<thW*oA4*$PTrYYU!4iaPhacoGY20/X+1P-Bk_CWd&n$B/tOIC7\mGgf8NO51/S(+=KITP<.G><?)OB$Z'?SHWFUc5ZHTa'h61=H%b[8-seYsn74\_UR#r]jP)sA<CMA@rka[hKG"g9T16=d1fOm/,dbBZH8.^CCR<8a8JR&X.APdKCk@Z43ZZ7M>K!)ht$)NTsdHf)b*%+,dP5FOab-]Fg/]_^PShgK*<O-9EZF.]PP^*5\qTL#85d8Fb!!)-l2qgbLW*LRb9t0p3$9I\0?/O5LncVGMiC,l0gN4Ze;a59;_(%Y6jsP8a.n-OKe':a;j]LPcWsf''rXC_8Q:#P)>M/H+]-O&[_>+)D`j6aGs,#]?[c6j_Z15gaJ'lM)p2\;PB9d14Jt*q^FsWYs\R/%G++"@lEXo"&sii@00MlO<<pS0;G!4%L>\#rK#aZJfd'i/3[r,mjF+M)8eRH=S4RPD'kGZZg%Et0bHBVt[<a/>Mfqf-m=7!8&aA^>%/rL8jPuCm!K8CdE)e?LRcPLAq"f]!trAbL'8a%09#I_IiouDeYkT;WoR9NsM3gnY-Z6B@u!(E\uh.k5_7_20WJmF,3l^:FfA\"a:%Kd\)V5orQj$A,_oo.m>hh(f,;R)!R(RR/c4NPn(CmUknMQl6EA,DeKVoUH%JPSY[K66h^Y*>pLNEREqV680tfG@C-k:qb>L#*]ah%]$kebE(2%fR`^_t9%eI:LE\eiX'JGD6V3PR>W;/+^aT9,JM,-g`/EfaXa64KcDk]\"k#$%C9thM?t;64^(o3kOn3]F[j9A&m'Xu7%l]6jNZd@//V?2;'M?Jp3h6>1,^I:+N?!_-eJuFR/b_BY'.CZVh1BQ)Q0dFg96a-#k=aAGQ5S@jjf`Hqo/Qi8)K`qaE[%PRNbY\ff%/n5S^Ph!nOe*?WIf)k#$F+]1ThNOrpfGi2BZW59j`[(X"ObcB*+me1nY[EdeB.uKaHaHJ_@[:-g.KWJjO)SNjTR(1e@Z=,_e?Pqq%A9U*Dcn#;IP50_!Tac%>",A5J+dfTmp=2Jg,b'rq!dT/jbKWGO$*6<Cjh:_S)lTd>^t"T?3h`FAZCc!)SPC[D>:#Z74DhcEWbO&h%@3.5;:iKkdlPJjk_Q?DblQE`G&r^R9E2#3GoTZXnLe#_DP7GpU:uY"hX=C[floAM@d2(0Y5isJp0Y#W5O>,$p72^8WNNNbSPm3Bf%.X7V_S$D0iel0LVpqc1>=o&d]9k(XJN'`6FoPYHmqC>mE@QL6^'3iT5#@]4%V/<-&JOUEI,HHM5;g<QL>6stTeV[CDDFlgW($B$V%S:4oB:C=mKjkEQso+L85\B8G:h:'GoKqu'!q.??cVE]ZGa@DPLr%&`/BOr:40d`k2W-##OM^396:9o:U#]"JMU;+[MjUR->.4M/+%S7uUbaTYbOVT]#c10$i)QB+H]P&82]<FDXWM2833$FB\b!k=N6:sNeG31r_,Lm=DY8X,,jS-5WCbN78^2MrTp,d<A4g.$`0R!Zbs%L`?t'/SMQA'7gl5=mAXV_1'D/c:VFol@2L*A6ai2ilK(d^e&^2[XKJIe/70B+Wi3JmjJ;&V/f7'[$>)#Tq)KfY<^nYo$sCHOU7h&%2^t`UX_J]OaEE0IDQ'.`-dSg5KF30"U/_t+k"Q-PX4]4llO#pFY69l)9?+N%TKd+_eqfi0Q1hA_[G#0W1Ta82eOl%,RTjI%rSY7\%Y*!7kaHW^`9e.*F`6'UY/s7lH7CU,U)n6[2$ZFSDU6YG]D)H[(KsIAc5uj&pQ;.U_au'h5p67\F>-rjBP&P)EdIuR\n3WGKm1ikQ%5p%"JL;Z'LdhZQ%TnP2.DbSJGhZ:d7:rHIPd-NkEj(,:\@3up9]a?lq<M1sT"`j%H/W*NW1.#.i\K3;iQ+<N;a')%IO@2el4b5,L%XQ9"u:t33Upc;6PQMg;AHU5OPrDhES2:=h+OdjHh_eRuM)UV$LXtpZ%E91TASV9\>;cM4U"MWAK\nB],XP>)'mY30)fLWX`?#+5`%+^,1\n8i&;aoi8*\mYZ;,W_l@Ca>u7,mCoJpBTL&Od95JRlVC"BREj*T3*3D,di:1?8OH3cp&`%d8]+/VRKP/=-U7XJ/2\e?JY[>%=]?R)'='e2p61b!Z1`lQItfibNZb&_^(n7-OFtr2-qVld<E)@%%1DH_ljb_/(pPWo8=cnTjqK7;Jm=Cr"c+?l44ZT5jO$4`L9"aR%Lr_@r^.UGE*uI\HZm?9tn>_Pg]P@m>-#)lk*+Ru;NYuP3k[BjbK]U-r3g9njP3k227DTOIG*5oVZCFUHCh+N,9-GZl#^\;Jh/Q-G%`*3jP`aak(98pQj`"Yfj3s+0T<ga\IpoY3h^9Zj98XMIdbQDUjWep>@\OYjP!j5^r,03"6DQ$9u\B'fLe7ogZCW[J*FtWZ2&h0g`%FTLFp,_'i(oJa<T(5]!$m=ocaoCoqbW<4IQKTV(J3sKpA(.odje7864JK)LoQPY*A-G;+eBq1Cn0JlE#X]X\1^tTE(;*m+j9)pkQ%Fid'jbli0P..&dGjUr2\Rgb(>2@nLeE#Ddtn.2pG/M.c:<K12!m*l,S)G+2-/Ke0CC=4g-H\i^U@TWDFL8c$HB@RC\Z]28mnQBEq%/)pW@9E9)5Q'+c*-*i:A8P)BkHRCS+WQBg-X'C-JZYjRQj]XQ)g;VqT?$qaD4`$Wf!s$B]f/lo0:8e[BQcKfb[d(l\mkE076Lu'p%[-(PX&*X]$1N6+"=X>(G;F4M3Riute`&S<&1EBTC6IIBo3ijXN<T9!E\s5)omVMF#%%YuZH(_AY")"']-p&OUf=WdQO5KO]qf;G\%mC.-Bh5[=\EAs>@TkYHTdOJ9K8n1-=K'>_I8@3$i=L/E5KVh*=bNDU"Vpm/])<@>bGAJC(L1E'fM,qGJUnQ/kW-W#o0!39,FE1qp%4*)'])7%HpB/`jAMZdF)hhYY?Ood\H1.rAo4-V4).3h7oX&N6NCQp\dEA@Rf>d$kVPNf#fg16LuQPiG[FjEpMagfi6>n6**&@Nlo%2\[UV>>*DVlB3=UM(nBhQAe"HC3rr9\3SSOi!R7Qd8E;M+A.B*P(To,eKcZW%Upq58[>9P1S#^-).0YBW.JR8]RfQtW(.&M_qdnL%,E'c:NP-5JC9=IL2%V!r.co#kO\sUFE`Z7uN.?F;@js1m=";J45T,t>^kl<MaN1[Ma"h2%$Q7:SKZFRl=i/ZU+Yn[0$e5]e&=J([%CT-VM6=^:3Y26Wt+gUHf#.Du(K@Q`=n5+ij>=n\T<6-J0mpe";L5H1m`=+$51<'i-C/ohDr'/hYVuR]Y1oU9il&T6X5l\L>O(#Y`%+I#mVa/Jj1fBmg_=H8*K:_b()QlU_0:4!CjR)3c/l*2##E!Y9"jY:7+M<KN]QpG9/Ut@,W)2*TY*_;?W%C8+(6g6=1/gC>18rrKu%@%lt``s+*tkqQn[WL"[dP>U_WC5Nmm-'*>I4_?q[$'tVj3-*b`5Z[E[^1F6,-EX*A(AT[k$JW0fIa!<sQCHc_r"p>@f<sn))7Y7C%qHeX[/Wr@Qe/p4,JO&jurg<4*<'SeQ6`[jueK6TG^S`Dt'd,:V&K\pnAB$.G=XQH=+s0iJFol2^kX"d`8:M&$6Cn6_<IYE67&!@W%"iq+KN[TfD&0M(3O[u7HrYQULiDb77k:m?i,X2J?+;/F4qI9`j6dGM4rg7+gWl_sRQm!u.8A5"i_$7hV=*gN(AuO'hHMK9?";%`&%+%$E/[7BdtW#$dnGa0?q>81Z.#4c8Y&ob'%<ITm3@?_M-nma5&J:PL-ILK(HUh4f8@tk&fe2pY.0n_5PA3SKb"+che!7`/9Rop*'%f,l4J).%<Y5A$kH%<g^15@tI@T_-Z/J'9V,d`,UCb`JII[CuPV>'q<jO'*t*jNsrg0mIL4=F:N'1STq:>7hW`RX$8E7NO^m/.KS=%aGW:e!>Q\$/K]TY<I@JD'KYL.a/$,J^%ti\WN&-/[u<2TVA<^p9$LYla83i[>%@,hK8/Eh1V-VK';B6!L#>>g0m5/1W2o]\@<d?`%Q\pj_K<R7JW',n2,WsYX4bgf`WF8ip0h^@L3&a4l0kB;OW*HaN5R&C*S#SV`M$c[9dN/MROD2&g[DtPlk<N*S[E!rPY[,Wt,6abh%RAolsfY@V:XP.1(q+?T.&0E^RWU*\$+%(t5;ciKDK-CgU:^tCa_!r]:oi6BuUf\mR)N'T,,s]PBX8&'hi4(7#et4r:*s4<MW5_j-%0ee)Ki2MTp_4D!XlVMs;VH<D[X8!O5Rrp2Be;95pBi5"E'd#4WS4mcQ5%[>2)=gmWbRfSDE\BV2Ku13^kX`\5d)_#Z-U,Pf6kMo-%a05oMKZbLPO#=$/^%@[8os5+@oU''IJ]hOh(deV#BR8ntI_Mc4Ou'pb9ZENpoGENK$g'P80s&/G]SFpF#3kD@pT!j&r#"S-G1'k)%DR@kK46a#OBrb6Y%/'">EX['1Y[qG#;3`/S-_E9?:6)R.C6I^UFA/Kb;Qi(b2$X`qWT4ooZ^C)]EJu-d`EmKlMnD!^gfOtb1Mi^B%L3,1_g/bI5'PUIHVeV4-mpi3^:hgF/$!&Z[V(pGDab(T_NM2V/k+0p;=q%6sX4!ALl4b-dNM4mB4&hKb$o!%UYSO&i1l*^T:h^=[%K&OZu1^6a-1(.)pN)#8qRWLl+T]m]@<-?2INFZ+]Z*dm3NL7ZieUV(l_JI/QbS],=k4Wtm@W3&NWjZh;U(f@^m_WcPL3"+)Op9pO%WW=I0V6Nu:/t^k/K>JIe7mR&Rf>9'rf_<d],j+ZMla+G#:U'PIGM.nd<WFI,Juj^q,fWC!Af-n6M(qX\#qZRZqgq4#en>I<`^g@l%&/_a4k606aN02m1p0jaN#"Pr[dSgn#:^\S<3`TSs5%ei92B"!&Oo(KP)(I=p"spr"#`P0P`U#XB1"PQW?=:uV)<-do(`o"F6_2.4%PP(rl2d/,0=>r:*(c,If8!Oo)MI+g['<4LfX_h<G:ls,GZIZ$0Ap@Som&@jh@D".N"i^s<4$N?>@s!d"0JF1X_f9dp4+T,2r1`a[%"i^t=lWkJ<N57g?5-GV:1Sha(DCdJR)!-gl^)6eNG\EY^(^O0%W.YWP`Q6YG#eR.OQsl,,CjURbKCkAor)d;7XeIORou59EIFq;%%$nVl0O7^EL+N/^`iR4>t-b/H"):Ij34NcmN/Ig'qW\7s$R5/re0*_/DEl+ij(g;l38u]NAWD'i?*9rG"aD7Wp7Z#up3)6\&Gqjgd%%#/us@^Le:.-fm4i#f1&Au%(laAgrl?=1pL(>^Gc-4*Psi\aE`AYbba[BM];0sh5P8sL2KA-ul_aZs0k\"n7@Po$4]6=-B904maX%C<#OJGY?-YWTmqZAdW?jW%Ng*ELs5B(l>URe2h_,[PYQ5kg[RF-c0-=`NUL5[+2.6ERQNuBV6s^-W[J*W\0%VM#l6Y/nV&\S\eK6%%'AB>?<bWU.O=]8@YUtSG-!6,aB]e>?<I]_DK:qeAMLimLm\d=`RmfK>F!1[636>N/B/Groo53Ti"'J_gJh`=K*sL.E2Y=B<oJb4%dUL3.>Yi&?R";\]h8NB*0uKB/k*N?Y#+NP3o"7q*N5t].AMJgj]gQE=:#En^*Tb:@=U^A,K(P22(`[j!$E;0W`[a&8V^uFNhcNI!%Wj3Ib,9i+N[DahN7=fEV/V[;gVlT)lR/2D1<-9o4%8eo$Wf*QN1r?<)(g:J5=OkA]b0'e*:gOQ+/BJ\X08>f#(8H:+0?2h,VcT_c%@Raf\Z'Q9EV)6A,+>8J9Q]/7#01JUUO\k/Y$pll-3"G#gd+H?E>YH8&dqalhr&4t#GM6LCgLO#TD)"qe1RiQd/VY!uBf)Bh(i_+l%3`^)P_dq>3a4auF;E%9;Y1d@K=:r(_C5\KZ[E>MZ(s\?cZmm[45`OL!,B5G#Z&4XB\erTT"W4<:@R:cI_cU9iA>N&foYjp5O*t',%0*X)H2o1LG`SbQ/KsT5E"7ddr;,pt^.KX-`)sW?daFL6f<F6.nO9n&!(F(+oa1^br;.Le_'c8I0GYbm_6[^\6:nl`Oou2He:s#Wa%(LtQHV4*29@ONnm#.`2!"%3h*<!TJ<Qt;P\L6alK0d&dcLTA')$DOLcd-6Hc*[!c.DQ#4C<e610^mH8sQf^=QJ"3#W.>>%B(gU=k%9r&,T)+KkD)p3>;aQs+4Ca^taYS>dZ<+([?r%uM_JMC&t8t9,i`X's(SZ)[#,b.Vu-<W>I!;Hj[;[(1f64T;V?qfjr$-!DW`[pEU%nEqb[7ZmdaYRC]T=LN.T`_d]`F;gdZ$B4ME1LGV[0Lim5fVVt_N+LW]/OP(D'L6r*hKK$2Uo4T'8gs&P#XVA;Ca^u,JfEIO]tbJ!%USs2T"ia)t,?GrmN0.J>_MqQ(N:ePtZ*"^LG`!mnEW_.QQ><n:<uAjE(.u?8_AHi2pg'o:R'\-j.ua!lBc/=XOXruS.90f8N)h.#%1f,#VCShZ2$B-.k>(dWk^_j+YAE,NY(rKDdP?8".6ma+e]tbJF_&OEYM]md9;J32uMt*)q9]a6T0eTe?-niS\._7H:?ApGYoEVD1%(mT[)s$M>lP'k\pWrceLCHIC1>,I+\/"hn.N,an\A]XXp\X0[l)V-?raj-%!+f[4c3>/;6;2$`&cnhMCW%^]tLapRu'LO,kotK#p%'.K^-NA\^@^qgYH:1HssOjZL+Ciq+T,AQa7'k$*Uimr+J1.L+I^2$^dPFf^_<L#;+5,TU3h0br79FSHJ)5HI*?'$Nk7e%=8-O2,2%e0pD@1K><f@S3e7*fVYOaHROAN,eID.Ybq_ASfk=]W93-qHMff:HfqeZ+iI!e$D8dr`Aj3T?^g.RJ8r'pE.,\3<,kg`)V)DkKg"#%E;<FXMSUC+IJ"A*amte9bP1J^eE_MQeah=Grj$4,5<`iuT9oTXrRY]NT:*[]DkAcKM#[DO\+7`B/O0/WC&2u2(LJfoo=pa5.ieQU%Zf_X$HU;&\=oH;aGlgF.0@9iU'<Jn!2<32Q_s=s_G)jVZ1OT'.'bKKZ(-#N9i@Im="<%%af4[FG$Z)Pg@mI,$^c7CWBO(K6o?E==%c`4ip_^G>!j`iF$pZh;&XN,O7#Z<2>jnSfiC\.Dq6)7o>YHQ4:f+4$h[sEI>`pnPBDdEXik_i4T#\M7F0K0IEU_.$,8YNEpS;iub%bmhh:?g::<c#);$0/m82*X7E*QhKogpuIaJ9^V+D3[9p5IBu&I8!t8[*m9-2pOQ(^U.38g*Q)8I&1K0n3^NF?Dm.Eu4]X6>1&>KE%'D0;e;G_8^82t8;W(a%8K"eeadFIDN;T?0A*82siJNZgk4;ugpP4N!t$$X&WZK&sPF*,[Y4U3;DlgMj>d5B*g"E>+OB'CSdd*da:%e[#&j2\)ITDdI]!gY8[cJF8omAR;Mr7tL?\W",jjLLD86hF$"'XLtpII_]Lng\LZmg%*[FXdIZI2k&.G>'8<LCt@PFU)p&<em41]%OPUJ+pj,RjlgLJEc_bd4@-smEVe`b)h0eMPZT$50K,3DuN'X^`*1HX`VV51WiYX0t3],mtbt_M,8t5-[mf#I4L>mBIF]YLn_lKL;%"\E)P=09`J=7no,2RmMRJj]RQB@Wd@`kh\&pc'+=hSBFgK25HB\<d`D<'e(Ni9RVd")pPme/h6<['#28QIS@EIth+[rS_SB4S\E5%]U58g<P+R)X(GM"=0GeslW*gXoXDY4f1l0IqgYK*5CN:pJ,/]XBt;Ho:V.^,:]'D6^O5k-`N(;6*'(X_ro(3&-iZ:j4YM;2?68G'%jN%!rbBIo7MnaXbZuX+TS!2<&QV0BkG4Fg(c`d2[iEo[$]j9W9`BF4Zo@(0eNd`Ya%t/]`01Vr/jj92mf,OkXLEjt?EQl0]oK+mZ%f_XsLD1D38G4WiU\c'YMq$9cFn`,*PO09$HhOhP4O*5bfh.-.3nsVrGDs&KLn$^!Zkhl\q\RHJdJ!aS=?<t7tr[)sDDSF#XjiL;:%Y-u)54mlZ)4RB4Q[e#FGY"l-[YPU_9-bSJJhk-Dk-Oe5H_%6NBYMNXc\Fk8&Qg`e':ACd\\-IKk]Ccoahk,=FI!,))PV4dSp/+#p%qpX[&nT*qWaZ8,4VI'(l(SZO/CjgpXO5;JgI(B0IpZ6fN/>t(S:U(ql4M&)^dC1_ibO;ogU]-["kkAAQkpPZG9r4OVL4^Op5b4E`%IJSl2bKHZ]Mp(Lkcl`)An+#5Qqoe$]?S7Dr^,\3Fn3Nq!O%5]J0.tQ,?G&A1RPGWGirSApD8#\A?S#P;525T:PFjd-48It/L1s.:%)tSeuhD">m)n#8VVX7%$hJAQc?QPJZT71p&no!p*9\U`>H,m:%;gmLWbr_fWc%UG`F9an)_rWPpe*l-5]t3u]T*%g6mJcOD-9_6d%m[];d!o&V^n*lRN(U>Y)41W7/@HTcCG?:u^=T3?8WNFp!8&M)Dr,mHNI=L),nhJmo7p;qmEqK@e]9B#]_s?2p(EM,pA*VSI]DUqK%%.f-BT<K<LHAqN9da6lS4*:#hot0>9%0M"hVsi5bV`gKYgEWTahI!u\3aR8ZHuqCMa;?#ti+)$d4p<^rN\=-\0)t=j2qMtoL<JCk%P?prnRqMQ!T)RR#jmgskYF?/O"CR[1q`lY"qYp-Nnk]:5HZ?b^TC=c)B0?*=9n'2\([(7iNc+Glr>GLnjd0grdqo'<s1>rdrqA-*%a_&uMn*1ZQ9R6E4Hi-D)!ku3)3PTl#BcDFaJD9WVSU`A94kq9CjE>n:)%,8`p%rssJF!<*^FPLo]9DckgYVT_k2BgGgE6C*[i7NB%g!*%%%fI5.]&-)_o]HOXs6%G,r6m7[c7WEnQR>jQcB_NFJtICpLtu,ppVG7:X)F"nY2+X,?IuL]fid/5o%a&:JhNIW5:t9,HfToT%Sj6)Op[@POk'W=&*/L6eonO>"(T3%TbN8bA#H2i*R:JoV^s4,ugE1i6F%MsH*kn$UAbJ;b`Z/eJOM*c&Fn1!uE3.)CpfDicEdBPc%I(2[.TKUV+gA^:t+%;^Hqi_ina)X<r0&OCR35,*$qng'/T)WVgG0D)rYo.iheQ<Kb9P-)&0,pcOc8OJ<)7r&%YkqAm/rNIGC!Q-P%HK:;chpk$m'PjClSD_BRqF'23E][>h5CBDW_Z&J'/"q0*Y3c(<Z'SJGf4D5r/FLGeqFA]&T/(G12gJi(fBaTgO.DhKh^6"Rc3CX>%h]C$gn`K'5I!PSEnoT.>$"R1'j2#*gg[1-+>JJbc)3;3uHu\`FmHN$gnn`T#p#XTU4^'>(7K$l(p7iN(\Fg7#V[3iC4`2Y7_Tpls%mC:EdgZ>c:EiJH"igk8A-[^]?pM"!-2"AbY5/o3YW[U*GX0[":M;)>k*c+=XG2='1G_`o$aLa3c[_MLc`<>4JnH`Lgos@u3f-dJo%P>[?7GL@&8^:ZFpnG#-2i@>;E>H.Tr])-rqkMGo).u->O!-b""3l'XG75FsgPJ\Fb49'\RZot\kpuqAFbDQ[`]7V=M*i%Tk2-s!"%W0)]R5.BJBf;%63^Hl$#Y)Y-4Xcd__,K+QH\!u.t8<LX$+Z3dibm29QptK%+\P:u\6Ea^d>b1dJj`S-Z+3C'<3^5Woddd'rKtjO-%;:"j(#4Vt[If'>s+==b=c6E=9QNf1@ds#r]5K,I8j!Tom0nE,7c@^@p4GX4RdFu:eZL^`/?7&!Tp[WJi&Rro(g"f&PI9s=BT0OU=%KQids+m)1K3>#_!,(t6QM%EVP_Tpls3>(7[(]<n3hdP\rgAO]uR*tT<3d[K$,/j!b8;*B"%Qcn;mj\[L5C"5I^=m*Bn46o'*soTW%U^bTIIeWeiQdtqZd-^T%!0;6n-c)2D"mI[h\4]e4Io`'GGh>\sno4'g`"YOV7A_dYW1+5qr*:5>m;G-,W7aG\#3moPe=S?d_sBYU%X*n12o?HE32G[-&4O*<CCn>811n1D61JbnB`t&\"J)-Ar\8Ud0r<QfU1M"W:8\`FdZMgog)=i-F+e`%lmJ1PgU>J^;@2g3_n/7sM%rSa60IkFO33Bd6+LV#+[HJnOB=>?*>0k;ZpYEl@fcEGi3)^a7N>om:"0r6"?E9JO2+.lhD>?&6_$l7TV_p&/MB`&D0hLYc;lW`]Z%s+?a/3G&>KR/l6t(AL'"+<Gih/Bhb8=dW%bh(6_K5:\sbs*e#JYdfH<Kh(\2Vt4-ZMVmtMPcjG$(\uElRo:#>G<T#RdTcWeP-oKR%Ol+ilghUcPSqT_4c%]L]YfBagr9O*`SGK!Um-W0Ice#"2%([M#4T(dnqkINmG/Hg/]D:[B`Hm9"mN9@8hYu^PN;q4b@Jb!+S*oVU%G'&"Mp#^(92.7ZbMl#c@Mnr^NC%jpc[a/aCrkRs2qhi"XGqrH,bn8-)N*+p_-eKEDgkij.7kEhZjTE6Lr^SN3&nCk[Z(*&)pL8]G%:rJOR*+G5Bq.uL42b,<@!X[RX`*n[(c;D_E8ic89hj11<(VakTrmR('hHZ>\5<f>UhY'aMHMe7^m]TAl^OH3#q;UDH3$.5r-HOmI%48;]/M8,NL;E[)9iRdej[eTg_lf-&\I%0ZR4)2`XF^`e)^&O#4e/*CfPrpjm[#8nOUnr.PP\*VR/f]OI#'%YIAkZpUNp!a@/sjcQ%c\g>_r2cuh-U1map<1Rsl14,GbN5eN/hW41Y78@o@+5)/Z+M+A48RiuZhIPQWMC!D>!;AkLK`L4(<b1tb;?G;E9O'j*+,4Tn,!_]%c!r%jHm(-A9D,@ZBNQ)"ncY)@GpC'k)u4\rQcI'>\@eFbnJrTQqS%IUkM,!:9nDiccZk,in)X53%Ss7"0k2"UFtmJC1NkK_(Gg4h%@i%oA]25:iYR:Ui#[ts0`Qi]`1Np%^4\")C@lQ4?T4"r4d*$XEa4NcGjbZql5*]UTgY`d\;m>AGm*%YZjA.06hpmnf$,tkE8cE3^%qQ?.F:X3q5h*p\0Q/ga<q>Q".b#dI?SQq(1cYM4:/-rl!QHf%W1VM#7*rU8oJ9a<4[=r#OQa3#[Am]7`VLQFM;J+>Z4OVLKT2OhC%^]*`YS"j%$^WrPcf=o_j;Qr9?ZKCQ(5]^*">Sqk#O0DnLmF?>;A=/;FcUSg:'-;S6X<<SWc(VnYG3IrYlZ^N&%.qa)X(aJ7Dl3'V%I(/!gn,3:EnOYb"]CHu6R],Pb%sf/kTKT0HHu?eC[QaWmn),pjK1XBQ_'s^>TBp"\T+?psqe#_\q=Wh!P`.gim,?j<9mDFPb=UB"%h/P4`nBb=-1D6q(>DPF2!qQ=7!>?N&7KRaD#IueBGX_a`5MOOjq$o1nE"<I5,68m;"C)sA8U&ij*+4e^DXNkO]?Ia/nA<`EY"l-[%YM3RupHU_)qifJX"d#L3+8h[i[ps9e:ZJ]C\ao[sg"48G8&%an+N%\2r*<W9*gM)EIW]Wc+U)5ug@d`'g(0bEHE`rGji=-?b<K>d%s6'@Or-6(JC$"hiS1HJblTT9c1^Dd'qQDLu9Wa4CGke1%r%c5N]Y;$<S+$JAlJ^]c$'o@FM//[qmE<`M1:+^MLCLsnesAlm9r9_?%g^@T^rVOb[hk(["\pps;9_tt<F[]7,o3I,(Dc;BHUPG=._<6=HTf4;_>Z]+[#8lHRKS^_o,b"5`Eur`H^RT#05T\=;GBh8U6r+DK%^+/i&s)I8ifcYVD6XO^%`qK[jDXJU#IO%^/hD*8:V?\igo:G2j[V+<31?UgL]P!]-9_4iihD<E'VN6%]mBuS5ZY+SVWB8j!bIhP8%\F2.jRc[>n]P6*=:"+Ss>eKptnn>n]hUrpuF0iW.VFf)tn!Y;+`t=oYY%c$?4QTkt';6H(m`Wm5laus.40P'ZV\Sq^pYK.pIqs8i%+Y)n%jdl,&%"16J^dCJ#Ve+a2U;-a%j6=t]c^uebl/M*Xn]B="s#(%3H?]&:,e8+Zm,=.*-V56Fr#D-u)EU/Prf#gD7l04YLbWN&%D`9#\]S8Z+41ukMjGTpEV=mb^lIRsn$A2,SdIm<0;eYY<<f_`ToOn%j6\P#:>b"_PGJ^Lmon4?5.@J66*?S!qX[WO[prdL";L8*:%o(CE#EoPi4O.Nh9[sInMWf]BXSkPHbI"F`s`bh>HZaBW4^'RlWLF!tO(VaPu[,o&aM7n\mnk[cQRb.!K>/0N-C4>m__<Upsl(;lI%cBhJBp[p=cd!`).3IOi3I`C`ZbT=sJGq?;>EYm'kS^,GBoN:7/eb*!g7+h?Z1>'?7%qPrmVcO+>mJ``],@)1/4c\2]#O:L<%N.IA%H%\\[d-K;;b_M8IGOs30/-.t"`X4C;%G]c.m-+$$lHS"&$Cglu/7q['/%+ZgcYM4/mN;1I/Xp-JkI'Y2#0a6QA[gCtbj3rb/HkZC%[U2\\rh-3r$J00CLO1]YHdMZapAfR4l(<Vilr0]_fh*+O[,Rf9gWG/`a\5RB>Gg%()Z=<t:L2/pDoSCr9VZph/t9;??#opB:47=R%IaB-=kHgq(WU25J\$KY,[XgKQ\GYop(YZirs!4,=-Ur=L1c<#APW7Us*]"$`hsP(C/9S`k5r0&L(109oq;EPmke/L_s+$08_a/jO%P,U=pS__t%%dY1QlMLJ;VqpNl^b1+nSK1L<JlM)CH*kK8EZaT4ZV10W[((U8]tF:7alRrd+Suhm[#=;OpXRZPVosR^#gJ>=IdlgK%]0?`ekg/_DO2'KqX)O.9c!h_e4$/c-Z;4uPb[tRELXP-kV'p:UJP+AZ09=E9]q.KD^,oj$[Ro+-E3Mu!i(eX)1:/+IQ^uM+r>*VM%qY^!XGJ0c]ja`lmo'Rt\mlkW</&dW8I/[3rr:$WU=.SmfRK?ZAq!-l:RrSh@V`^=._rXZAkJKMHqs(:iK7Eac\$I/0:7lr4^@&tD%MjMW==+>VK/3Y`es80"GhXd@Onb'4Pe)]u4Q!aN/q;K(]e#s/./A>BekC5@I=#f<rB?rroQplfX*jiWjM_h`-I,JIL#L0*mfn3+)%S2k8'is%)!+*\cHr2agpi?4V[(8Hea[_!CF=ar(PqDPs<kaFUrbdXht?`e)]gp:e^SnrYV_$c4Yo>S&R+.q('SAR9s5^`.3F*tW%%Mk;V_?C_dSC13#Fn[pk1-T9O.RKFA3/MC#up:rVHDmbYfhhOEZ/+;o4GPq,ZrIm0oBVP7_m^Bc!8nN'fp?Zq4qr(uZ>lR^9=?/4k%b^6i29Y_19aYkbjq\XVUi'Yt*r6WG1iJ2*1%qbA+UM#33p%fQZ$Z-R+TXcnV7QNANS%IQnGJ8<&>=rP>o"9n.APCOqeBUbDC&H7N%leM7hB8>*ehZnASQL9$QQg#Q;jkX6*qfDR<?Zbb,S*lhmH;#q%RW/jC0#e!'NUM<<56Y4qF-':uK2sX(#)ln,5^c_!Y&Q?1RlMID%f@&PH4j95[H%qY'4S7jn?ECj-b;+\Kj_rKE`^0Os=3omcP<U]!rZCG80F2%4.,`jg#I,uq^"FB9T3<*]aWHcEl^+iTN>rgIfJ[CN%kob6j7W#j[9Ydg=%/M`.q:=5/eBis2rgeeYdpAF(^p\-.<#IpRnR\g_..`&N_NmA8(I_gpBS%s"lH6F:3R[]"j\=H]grSQkB"T2Z%Zbm7`)if?U5!+e:fhm(6"u/!7R$uTOkrR;YA_+G\p1BMNM>iQI-C^kiYTqIm3,f]njUlNNc)QUL_^qT_5#68*_3sl.d2Z8;*"rh9%gfSjenk>13ZZN#sII['<B;QNAi:1YVQT5Je9rF:`0``LBQ,\oCiAj%"i4C%*]kd*B`am;N`ZM_])9Yb)5lRnX>3Wr`C:5n12lq7Q%nKfPVRDkanjD>dOdE?3AbG1<R_frJak<lCF7erErH@.J`FL[YTLQ>Z2ck[:k(:'Pb`ELs5l&oHU!Y&3K0/2CViR6VEFhe3rEg4I=%YtUOnl$qlp/!lQ5PqE!NQT;i+b-WU]!0*i,9o,;`\\=D'V*C04%I4NCj']W-l#GJ)&=602NEEm"-HSlnhHe1RN`oR'K<m"HfQp\>%b:G3agT:q>Z=:D(WF<qdIJG&?K,i%HG[C6a-L&@2%Us>'gGp:=DdbVA*SujPUl7GQ2kSfiq9o$niDOsoJCP"Ep&jc03;'GnKGQF0%o,cj2UqsS>_[j]g^D^r@rpW:MDC>@m`A'8ln'>>mhRtpq]3LlRS,V#[<,ih+fOWY%fVr)]ngfn(Y21rP(2]Q&+j1.NZ;>_Hji,rD%3IigF4\'>'R^G7qfLRf#3o%=1`lAja?TO1+%c.^4JhkWXD4F:c#R<tfc8*e,`F-U9.J',iZNo(8FH:La(!@RQh6O>H=FRnlmo(X<%Lpf'h;o/XhnnhlMFUH*?iZb<S'ABm#%"$?dpW@ZaWN34n5`$/QX;>g[0S,ZJp,kI\eDS+%q,8?Xk*TjFPN*%Z#L8h0*k(hG;4QK>%-7sP?ok")<'5!<EW/VYij`Rl:)c#J,%p6>..[MeP$-hpoh=>O5/^)?eVCZ]VFUj>%*Ei<0#5[5K[5V6;RPoNnXQ`m.H:+=VT`pHT%D$coI;B1`:>?opjkZJj.bi$X=]>)!ueM$s0fM"+2:$;;82iHZh'n8G#MY1]%-QV!CI+r[p+8mq$8cDigEm*^&)brm6Q)32n5/fuI%p;un]$d(GGj'W[NGkh+)nb]Y20<Vm>#W60P0Aq%qO)?Y9!SJfX>F#_N.<Z^rPg*B7VM`,i<e45BjCiu&Uk-"!f"'QQXSir*98LK*%&iR2nB(`7u(2OVqQI4OIhVV&Rge2i1^^YGD1t[?ChPT2+e.r]&D^rB;[?gfno?@e[(7uXS>b#j5%,[TQF*[W,o()JEpe"AFs)W;]%l?'[nDSAeLpl,6@aH-Ac\'(OF.5E<$jji0G7ord8bObG>dhAF,/KODKbEH$-Du#mX+S8<P4o!dn:FGV60%j=`/"!^:U&T4p0\F_E%Z?H2P+:>fpl7^cu0%_2^X8M)XaX][WZid>-lp3%NO#?u1?bV#6E]di'1R9k-8Mc\)d9)S,q^Yd3fmkB:NED@sD(MZ2&oG5m:C<jO%qn[N?I98T\.C'%grH`"phhWY6Bm>g,nYFpsFWF8hk,s:`jbbFF2Wc(j.#!]cPgX//WU>m=JC<^@pKdkHIg\N`:'Hm!!rtq65*OTl%SK'_)a7k+I,!36hHm\A/fAfG?".h@FVM>h'8iWdPPO],/h%!+6S%p:*K1Rkd1]^:eJ6uFqB_-QfW4\Nq?e>`giaSo,rj)61Z1U9&%e0!n&N2nQ/0kJc<D%=Ng][VYTA;R.A5_H_SV:_R&dq!<0V8ZRj*`+SlR7iPFpuB=@/`.o,"'r2n'ejn=KmUBj:-C"<V0C+\2)8E0%@r]SA>5P1g*tOOGXKL@.aSG6Hje0NI!/QbmEfDUn"re>K<DBRD]/8^!0-!icEt]]3LW,ciG?NM?U2OUSC2@m/jErf5^7[Jh3T'-(%#.sAcB=0$F%'?U<!SnTeGS5Et=gi?+?<c&hAV;?s-_i76Rg>OL7Z2\LQnjk9:Z1^KZWaleZQ[gkQL18g%GD&`[p@3D)]RDo)\eL"%o_d.DM,D:@#HagSCeMh."m@GFR.0ZC2K:^A:J`s"<h30:)6[DE$sQXhA!*pkMm0Tdc*"HhLrr38lhR@lJNl'%-Hh&_cA[8.m#[MF%k=\;Xn\j'8jcckmT(qO2j-3Uub<]0BZL,Y=q6LAJp0$NPq,j,I"V_kceXh0A_sNf0*%`Ca(n^^3^p++ObG;8K--46h&9b,ZU'sN#%(u^STJRq0O[IhMT[^=IfCeM/RD&JbsksR<a-1/^<116$\QP?32UrDTR1r)\g*l^VUNPu4L=ku:)EjZAX*E+WE#jqd_#Lf"A.G1NP%\'(Zup7NC,fBLd3SH;NoEk3pD-0f[$KVfZs@O@6pHFP2/*)^ESarIccN<>,tfJ-NrR\o_GVr-FjN5p6*RT%_ujRcRMh%Y?8D+bH'%^3Fj9?oP=-o.GtR$0N+/g.'k;K8@.,O^_Ob1tpMBF_JqT><Oa>C0LaUMjg/F>?^^,MK*WNiFD&"(#u$l&2?S6]BtMlX$=qd9/0Nt%8B3^"+k=(;?e),%G-MsPe/=T^k/t8BpZta0>"ijR;3uNCgE9ib_k8%%EU'&tP;7pC*>m"[J!B1ebdmSD1[t<aJENupN'#@qo8GcW%\F[c#cDb*eSJNfDo3r/I?L0f*4Da>gAq)aAZ[!gtq&8Jj#-9gde2L.?Rf*GlH1G5OVqtFXAsa@MRb_7Yc2M4Xk-u"=ep4QQ2:DYS%.'2+X!c'\mZ"AK8=ECRJDnZ8G9g.h^404hpLq'Y#!Ght-,%.`n00f*3LK!XK7*QBZ&A5QEn`JTbc-7TJ\XE!M)/l*s2q)CtlI9VM%St!\p>rH,16g$-U'Zo_c?pK`t6aIM@`8e0S(r<_)!$pL^TVX1Yai:u>_0Y:2CX;R70Dq#CMe2DI]%Gm*3gGWjBaO-6ST8:E*e5Eq%DRkm`Vp@AA0n%8<,@EX;5f]PN*s?@ikpp)(j:Ra19^;>:#p)Ee<fJ[]isU8^(P;c^Te/3MWA!2!MJt*@5T%bgC'#JsgbsJYY.;32%[sDlT$(,+D=;0Grf[NbO8gi1Ci&io.8Jh1027MDn/0:F!'lC7o:KL?)1"Wd+=.<Co]:*g+MN-6g^g_4`VGR),#Yd`PZWNHFJ:q=6%`U,>9C]1KcVo;8oJKhVieuKhJGVrUt(pY5WYCF(e=h2N*KUme+9Ynn!VYjDJVi9>=_f]a)[@8&Mn3LP!%6FHa#"t*k'9(b"WKDka%lYcSP`K=l=D3jX")?c<`J!f6HQ+dkJ?)'"B!99-("Cp22BY^t`C%-PZ?M&4&7J/a]OVqD.iWo2Fj-+S;+.C-T;#IjE+P^]E=.3ul%/YIeh*$p6(O'&L,TET+d9mQDh@@.KdHC1$SSMQcq,+f,h'd$*31dR0J-G^hjV+5um5u-*$[:a78ME.s$anKYk-RaJCQD\XR;o^A,%gN</9G#l&]-Ij/HOj%PNgSV<4jdEB3H`8Ypm9s5#:,Q^VHRkJ[o'KK37ZZ(WQe1fD"N:":'=@e.UrIndVe?ZX>(*pk(7dXC+':K&%p6Q]`WtqsfegM'DEiK0LG@`PPWoFs56o_%<";RW1-H"e&3pWFs"1tq;g5OD3$s.8"XYs\^_NOk'I>&R6IZhM@2b-\t]gLk-1[r'm%pYLFH[q6ZR*b4%G&aqTi]/;*`pLLXX"mirnXP48jDSH5<Nqn./mYsd3$I16F"Wa>HL2nef\Unk*JD?VKmP2X3cuB;1Y6!F]7VrA1%pDDcD$uU!:[TA%IFp)Wb_:et*YJT!DW:jh"H]2Z39VB;1f+ICn*RPqgfrJf[*F[XSDp"d!9uZ].3RhpuKmI51[>$nH5j]:[HR#?"%$.3pc&FHt6dIs%@m1%1dRrbLJE40*or2X4K?;$fs)j'FQmhEmh$7WT&C>)`3jl-hO+?M!G9P!Qp*8=O7gP$-X^AU2*-f.cuCn+'2%45FTWrZDBSh2#O\D@IGWfX5a-PVJ^eAk[DDjsX`N[gi$)9aFuc7c;K-J1F\BK@jKHcuHqp-4DtS:7"_F+RH<]?b3rF!rPclbIG<[%aa$$VqAL>WnteDR43!cTn$h+p/RS@CRnEL)LL@T/%hS)@2Bg`<D[d<F%J]TcoQh0o/a7\afQGo</)>*cQ+ljX,LCSi!+!W>d'_a2%?,oE8PniLDXCKl0gaRE;S-$eZD$Q5P@sdQ'/!*H.krS/l=6s*!rJ05"E7-<Q]+1:]<F",M6.kjQg!\OIb,#=he7$_pZ>1=()G1Ea%Xee8Jk1nD)Q/2G6YGMhGY(!]*,K/Nc``;Y'D@jrU<T'tR:_!,sK-N_I?fM;B]C?5`f3JE\'u::,pG:r9(j?YEY&QC7bFhf+XS%nV%lR"14X5/H6eA%e#;=*u<DHaTfiO)`hn"u)9o>cH<RRTIXSoN-JZ>5;lb5AKK`JnlP2NFsMHu"+HD&HSMcWY6)?@/e!Sdllr4Q,42%8,UuacqjrV]t(YaR$/`WUrYPFE__L^M&g5<a-kS"*EAPb*G8j%RFlL<F!G=,a#Q*LK6&7bA4C=^*g))\As_U+X(ts(=l?/&_Du6]%`H00!CF^B'L1i0sG"+7GD*KVpQYJN^C?#[Ri6I'cM"+fb(uA:Uh8(B]MAW27`$f=[`>F:9F4k$ios2Q5YtW"E*V&$.<mV&sMTTop%,I#)JkF*h9K$;$uG71`oWrk$H,9SQ3Z>V1M^XF,$m_T]_(d19(Hr75&JkW]eZ@NPTLWsM>_u%s@oh"4ZG4;jlq\FFWVQSfn,FLp\%cFN>njRLiO_,9np*?O=[G\<GLg(mbre`">V?^mUM6@+mq->b;df4h#M>Wk\h=a0a_TK0BhCa7il=$mi$m8uS\69?/Wh=(d=E#bR>%Hj7J]PdShjq?[#368/tA?6K#V]B_AD8l[Jd8Z5/`9=\=g+,t-h)#Mh8m)""_E?tFGesk8P[n?sl9sLF\jdb<2<Z&>+^*XAZ`B`NU%CJe.'ZCp9D7[Rqm*q*;8GK_&mrC)iKAnA75+.tMm$AE;rb9t>n6UAqGGL8]\J,<YaIF-pfLTe)YqT"$AQnTBWB3i\gr7;]c0(!3,%m#[[<YHpDO6U*N+PJgBAB.4U[,BR&(%PJE8d*1f`@_:'E?#6UMpO+i8SA`di^c)$Yh0,kN3=Tog7MnI19@E=G\p&5oNm;=(ZR]q/%@^XZAANI#:A8S;Y8]"p!1O&Pk[p<]-.Bu=?1a/VcBj@-^0.;,5E6AJl0l$'eD:Dh&QkQ^6?%2Q'A9]saNPFZGH,I_SG4-1N[WXKF%lL4[4YgR5iK*;Ge6H@]?6b=Kn\Th;.X;8O4J;8!kro^^Z$]l.TXrPi>NM8-G0=^6bLY#i7lYU=P3&eKr%Ni[3;>T&R4Hf62;HM1@%S69.^MdqlbqJL:(Com'5GfDGml5@55'3gh+1MD00[T&5WFCWMKWZ*_'7"SpBWMZ5!!KY:$(K3I)k1M06'&)l7.sA($CQ=rKl0#A"%bZp1$mWTeXVKs$5,/JAYUSTQpWbIniIpj/i$[3+Y)dfQ4<aCLn%la'9_m#P8_=0YbH[QN\n-2\cZ>[S7&VRM]ZEUpJ9kPZiT>,[f%\fP>0-j;D<`i<*kk0PudG8X6eWf=uuW(VjOZo"Tkr%]r%(_B;YN4L(`)FZ3gDr6V>AiP27;)JdWYZ^nPAiKj_M=p"3MGc\h'"qVE%p_0X=/s1+`5Vgk5;;XYl:`Y^hS$"L>\`MMH%Q"Z(04[i<k-^4tWL;[P0pd\u3PLL'RjahsD&tMa4r@4"Zm1+DTWr;@l[m]s"s[I(%kb?&pChtWY7/$\hZ#Z^PffO;rdcY\)?Fl%)gA9P7)s`+dY;gp+[F[X/IZZB>*UeDbfO2AD(AOS04:.(#L9Tlem`,MT$l3Z$:cg_H%DG822;Mu@rQ\`2</9IIOf2u@,i(<RcY4j2T;2:t3ncTAZLa1Gs'#!ZLD2l,NF+^TWG+8XNcYB@X:L^.FCF$Wc7>kQ;*F3u%X+gWT%n9der^!#I#BRIL?2]^RSES)#$`\d01qW=r=3V1C2aU^Uj$nWVe$Cbnu=Q?'$[kP%gUN'4^n*U*HVf`#u*D$-Y]SPt>d;P)-bAVP^%>[&*.*\".>CTo^oI0nK]=)S&07;>%0c[QGRhG_Ss`Ye+9.K>$/\hQO`569KM@'@[2"__0XTT+0=??=@sn!1RuNmQ&`g,VJ]7qb+8%6G'3"i3=K5Lo3d)^6oTdc$b7'eSo6:+[VZ5KN='2LY_N?dOf6fG4@9j!8".K2d0AB/*fJJM2B)&X9faUR8]&^d%Db(cXV1P/c%U'%\7YAJ(4*oKl&SA!I^@C#FB@Gc+:JD=LGe/8D21.=2dPh?k,U5Kh%,oI4t;Q*WDV?[a7*@fdpoDkX?gOaeF@f;T+n%Qo#JH+OdcTk%)>5>:r4D(<jmeg#OaKnLT+f?8)4m3/alc(_h8(Q&7.M4mQskjiVO1eL3Ka76Rn.uA;*iZZY[TGaOYe^LHclNs+,]`S!,D[H.5#%C%X?LtD\l-((Xoe]:dq9EGo%)AsN!'m(<gnrIP15I?SZ/#Oc7',l/09f$b4-8/d5CC/-Y>!Kq.Mf);Kkr"I3\`%:(i4/9<'>8U!\#I%R]WGa@:f_?D/*al<-nk,Ll)n2<EW5E*&BmdAtujUPu]gdofsEoY,S[cXfOJIrO\$peV2TK7&]5&eun$oE4\E6>Q1+^Y=ta/m73*-%b??36-o2'tPFIUBD8=Fg28U\HpMg"P8P\'0Tnh&22#L<O[7s:IaFV8XWm=O'[pb.aF@+"F>V]6[dknkkC!'Ho(WHt)O)$=uDr^=h%Z=NfFgZl-kc#YX;e"!r%f*#k`=tD1-)+a=<Ok`@^'q%Zp`MiiUeJ+*u2#WjU'hm%f7sus9G4fa/0fF2.@#'_!?+*H^NfParUoYc?%DH/;h[mMl\h'nL[<A%*ADj*!uh"dE"QUPHrVTUif][lik*;<$Rd)qOu]+kK6j`5n>SX=r[$KW+j39eQUCrLpmQ']t>j-o/!_TJSB%5\H*=i!r[kc_,..eui_<GfY(WUFS8\eN?jh_YA#+Wq@c'A"A":!;^@=<TXfP,O&$adml`jE,o"6b$;@&Kc,QRa-tN82I+H.^`&DO%k,G>*MTI\uAT2Boc(Ap.'R"^PF:2TFHRL.Ga?2#C8SPO[/uXCICN:I'*3:JqeV?kD^.KkZ4EaG5b,3IEnl6Y)JAHAn+(]E!*EB47%.VlQjrNGs8Ddg0>6Bp0fPb2$^iB$/[2;kTOdW@2If,`Qfc.CTCgMk;H&%>m]Ju28dj+Q^F>5D*PFm>9F14M!eca:58[o)kc@YsAj%>8hSH>S*_c%S.beh<r!0\%%['oXhY<DNi-X8n2.EM_jd4D$N124*J'0@l*c5EbgN=F_QSQ\MYQ?.Vl8(]`O/GjdOZN<W_4=#M7KA%U8(^s'u+qYmbZN*lJ-+pN9aO!neHl*M%a%A<2n&SlY=&_]gR?\h9efj#*1iE`W'%`+?@SNaKB(Yf/9JMA`(uUWB./hn[N2!l^Cb5%jeC_/f*Dnl%J?E(Wu:$$20IG`lhH)\5bg1nE048t"L;b-`)sD&WWSuF>?@BNXZFP7:Gl"`XuZbs.?7c/2V-C#]'Aq.()p(O*H4bD%Y=hGmF^!/#X(BVc-E7i6j!:*?LMkY9qE\cI`ZJX!l6NbuV&uZ'=N_R>j1e9AfUA87?'cQ_F'[4=I62<4Wh-_))'573Z;]>;`n*(R%QQ6dH\_)>e]'PZ@?T+Im-hafm;W!Ja]'Qe8\D(>N2p!*Pp/U)NdO:00PYtV0BeuX:o[FjJ]mlG<:"HU08f#K5W67pR#Y)dXqsgYF%2:9"#!h/)QY&7>dbbL76\#rqYi#Xhf)]^s9._?,^9j*D>e!BIOUm_m#f,^k.=/RBflOGtnfA`U;mM+uM,a!Om"<:JC\*\>s4-3q+%lq-F,lJh2)Y!%tacfEe9\b8_"4d0[-jOuE#p.VVPPAAM*g,$;5/sC).5cnl>I0mQ\"+uo+?-Ba`hem8pcak"K/;k7YX/\p]n5;1j%gFB/#jP9pdB]-5YQdHC>-l.(c_03^2%^3QtO@J,1=tN#D(Pb0/%U+/Zb<`8DT!dG'TCp\HD.g`J272?"bGd:+o:0GTkLn.+[ND,S%gOU$U4PL@9)!'@NFCLbQgYigXR:eV$.)KSXia["GmDJ)?G1F.seht9Lf'>2I]rS]PDF7.fjL_SXg0Si%JLbbp.n3*gG6q>u=L)et%S8?rt'n^&OeJ,fG9t'HZMXANoG&">MW4VI(Y_Y5H#I2/Vr&S65h?6sQ\[HAX?nqJSCOjA]2^Mj/iJO0"!3XtR7,%`Ud3mY:3RN"F%[%.2#9P&%KD=p6%Md>SI\/c&"SpEhAB7*G#CHJ6V1:N7lk2;sU1n-@B/D7&,[g][cN;;t/#mt;)ZNB\If.RoD^hFTQC\-J3N:G9V%qMmG\l>pcT)*J3IOYEoJ!ZpYZ@pq-?ZH^Y3n,%,raik0de7u:1^J-,Y=d`&UKRgLCn>nMenaG7pQ>Z*<"$U2CQ!a>H\1c]G2[",s%>?]9q*<J9eenr*GFQqb4EMYMIEL_17K]0A;^D-X;@)n>'*qX4=b-ei#1HVFX'kVF1=e-h$?QAG-X"!Z,i-Fr=NSW5L](Yp=7d.I4%>eRDaj.=i\68-gBnJt:Bh8\U)[>-]\r,7=cP5UBhO?'k$LCL&jmD]aY)`N4\o@fCe8&WPH5O4bRL=")!B^LQ:ZjG5f]CsA]OA+QZ%e73P]Ug<<lQeU.RSmiYBXC?Fb*T(_1V=-e72`?GV#LN"(g5X@+_mMud>6lN1-n,>[hN59`iC`3cK1jcrBu`%eg8,=ej8bVB_-_8"%^fC^>\>8Of]C+YOlXE$!f%^cRZJ'DbIX"f%[^u^YK$Ld,cCsgZ7kX)+j-Zp+[N@-UWEZ`"M@.VjQI-\V+5Sb=f5Z0RZGE<hd%!7-%WR:st3]B#?aD:,tL;uoK?2S9IAb6t]dfYO.P\0<V%4u)OamPY#2%Moj?*qQg9s#m)$l3YYIun&[bW(RHN(pEsM@WeA[4<c^Y5s'O%=16n8TebGEQWAE"VS4._5TL*qHLp@Soqo6X/4:_hm(7t_?+l2mUlPDVcA9*_7iYgHMM3tE+uE2K:#.#\`a>\tdN`\/kn`Nkk0^U6%Rh!Pb7Q6S93irmOSB(T,(Q!$>oB=nN,tN/MN6UW^PO^3,4Sq08/XpOPaN@4-SbCXsodAuo^rha&l^DZ/5DtPPeo#0PKm=XG>eB];%X@m<JBR946I!0F/#83s'HLlA*D7jsL!62KPC$@]tFinI*9F%mb85d()frkQT=7/Q5r9;-h+"%#6?Qu3\VshrtMuRkhe'($5a$o1$%k]#b2ERC2(B]^D*q1iS]Tp^CDjr`=AYis:q1l"NgKn$%YW=9ib9tPa*"(9X6."FjBe@l)+)QiJSPe-B>*&VWe6>L!lQ:"CFL'V$f%#KK+<A'0J17PJO\flH!W&JFgdJ1^q@GXP*$S$lIMn/JQNGhk52=^0>`/XjNj:3_g#cK#=Rf]nqpb*>sq\6O_%,<Qq\S;$O7eZ_p8%IQ)-I]]CX%9]$1XPA%<7>g)^Z-rcE9a4;rR.hf<k7CGoB3k)4RD2j"2<cqJ<P,e26>(!L0%KR33`f6b6l<49VcE<VM'O+#=P8CBc%p$TE=%@fI/!pgBKP_/+#2S>B[hZ-%a0NJfAJWlAc292!lD<^&Y>*0K%Has$c=;8&`.tbn.l4Tb!=r,_im['YF(pKusdU3i0<HHDr%=%NPEeV6b!FEuY$r'l<>4Hg<a^don;#V$ckeI7D-PZ`p7^)-VG??h2)W5U6,#UNoUq#\X/X$3M$2:Pg2i(DaCjOD0LiAki+F/f'Q%AODi5IF<+:h9!1C2fiPMK4&P9&bVXTgAeSr&JQZC.8+qhp9$Im,UBhh[nj[)iIpN+Stou2)Vbop%WtK]YkP57)5eJ,N[\Smgo-i]%P>-ZFn6;ud3Jo2FDH^IXdohA:<nqP2iG)t7qS7BVff,d*D9^]NdIL86ET9Nu4il]be4d7f,TS(8NN7pj%G^u^]Ip?jdB[8$U!A=s%\PKM1O5PI<rE_9j9G6d!Cl2q#)I,2&dQmJbUZ^p26W?N3\Z3BG_oHqYN?+n]Jo+=K&7XHi2#[,C/P:$;N!;[9@3QVW?n]^;ZAE90%$C[.*kAfPGGmDT*O,dn)>d^"7$`^!tNP8=YCuNsYcmPb=-%RtWRM=MEPdZsD:.JR6LQ`pm;;:<>C25Pg9cGPs:,#01gC;4;2g#ls%Z(G<CT\q7($=7':3l_Qh35HR^R,\;k)^ga6[8EH%YnA9`XMkD[3uo8R'X_))&,<c9R54Z;UDToJ#Q3EC-sguHHdu!c*uc>Y)Zp4(%:K@N"gljp$JABtb5[^Gn#lOW)#\&MQY@1-K<1j$XV:YqW`,iuWF#Oe-foG/?[!dJ_p3/ZiH<3A)^?oT?E]XL3DAOF/2?aAT3C#8'%#X1.3i"rEpK!h\q-C2t!f!=aJ<=c;opd%Q+SMbE[e8^/W05_LJBO++<;ljWrj380f*o*Yh6#b`5!.fj#+!2*#e,@8UQ:i3(G6u7o%0G$_cDpB(J!cWuehHA)V'k\:!033`E+7M!7G2ZW`j@=*_ATf@bhQ2`UfB>^W>2NS>9;B[HY'eX$l;;LH,4QqI/^#;6jqi>-\]"a5%9qgqU"Q_+.->lj7T3]J<NU[rg)cp97D5R?[<]9Ti8#9n-pm<!^C]`%sI8gIrlW6n`>JGb4Z;Cf335.baf,]bXgQ_UIl.p[A_[4p@%dX*&qYP;s%SCa^[176bI)8rrJW)ae.MI#h+(@WFQl$#:uWZV^^G$(gH]t(7ek()6[8ods6`jQA1Z6I3skk1'%/ca$pU(`?+=b`1A%:f7s;fLScZVN/7%\b'a&K*&`hX_$oTMSK;pe]N:MU\$n!DnVr.Qba*ufF%8:X(Z#pRo"5LlG.U9h)/pe4]g5T+Fha;Non>;ZPe+d%`mfcLl*)&#I"E2H^ootMF`IE*jiR<uH+W7cV4#Edn.3jZHAfOKq9(^pn&rJ\rpdbH)a+#Yo2c_m/f0;0n)(f]I!Kg_o[EAOnb)"E%jlIS&rnBd=pu:N0oV<>U[r5$%ouQUFX*qQuMmlamMf7R!J%C)FZ,+aM)4s_0j@s9G%h=N,]L4d=c_j97>EAg`ir/D:[6O6qn(uR#%oh0[\?@I,T3rR7rVcP6W!%m)VqT$R+oO[:b;,;Y^(V0PZDYWAGFB84G_bYhjnSS%cq1$.O2E1<K#Mn+9gt@sBLA,QQl+V`C`E;,:%Ml#Tr>5n!)DRt*m^3_)QDY_'%^&+qP7k9'<-MG'PhbKO,SpgJ8c7aW0k:ag(IWB[ZFSmp&,g%pW\bb@Ge$"Wn<UA24T,3F`bH`2a%kmQ<Ys7t`_9Hp#'im#lmq*GRQej#%sejKFZdn/G&iI3_WFEmHGjEPX5Mt:$=:Tgi\qQjgm:VSp$]\7bB$'2T:\!oT2VaZ++-c=th%(lgX:3[r)7;u(OsfVS<*-Q<9,im[?lY"nLgbNkaKIJM^Lji,RD!lII3I$]blDjSK\`B:oP+9,4C`OF%BjY+NV^"E#[T+4B@ij6TO%qAfP39NTnfL%Cp3QiDMVH,=,*IgYjE?_!?^@5%1r=U/sA\'&gd10hQ.=SpP`bI>[d=7<je+5MScT\*JOL$eZlB_k]>6&/h3ol&gW%]&4i3PAKR[6YN11!J.dpiVteZkD__(rU\92]EZM@O>6O<r,i^s1U:HgoS_/@T.QWd4rHHq*c]]uGht4AcpdE[Sf[hW^CE?#HfH[u%1@"[]Ep`YHkLRD.:Ao"F!ON]hOHmY2GZl_CoCTP4%.a>q'4E+H/POmmBn(tTT)",]f9p[.oA=^lD&d[VVi8u2N!/o0lF_nP"=c44%LG!'bgG1ZGr,DV=$W'p8oq:(3<U\6$IJs$8]B'bIV)N1u:6,,8l03P@cki#R7rL?@\^=D<"*\7qq`9tf:/B1)Sl@Nsqg<7pGl@'q%O7GFo+9)08lKuMU5$RXg(>\D57:0#,'E;<%<JkY>EOO49CS?m`i7iUdd!&oU0PN`KQ+Oa(hqfsboZQh'lW:8LqJau6m+ik^#7$P\%G5,R82!]*jn_N<sSo<b.3BS:'AbQUop%?f3naH23Rm5J@jN`8P0_(Fs`])YQn!NP21Hq><I35*Qfr'>rkOSC2Sq2CL\SI;Cqk&mt%]X[aq0Al.>>4;N=K#pCJp7D0e6Q^M5qom"3=%C+L4"%1$Z2SeuNW*_`p=;%m_[YeH]K=!*&IAm-LXt10D.20GjK@uP;0*Hsf%\a-%gRZ(Vn%d^da*DiKIKWJgnbN3t5MAE(1LlZ1^8'L!N&!?++X.f!8ZhEh%]lIlQ`Y(]i6HuOGmer4lSlL8bT#CVP.V!^9F974-s6gA%okhm.OWd^_q2K/mj3X+.f#0WkAA9>p1'Z@U&EF6ccIR5p+*S@.0ZMH.j6tse=$(R"B(J!d$:>?ti<Ndma2&0Q?9b-c^Ge]/Y<'NX%1F>1(,l,0aA3V^W:Z!fA?S/Oqmi4ad5W^4R]jtZ@m)qV.$"MX!+dMgF\Q!`GfRE!s;cn,99_iEm^RG2tD:.D9JPVtJHAW0W[>%-=%%B>;q-s.-Z.Wl;*mZ+GX*W1%CiV'f0:mutc&.mIns6RGn>$OS+2uMN_m\,o.JC^m990s7c;F4DNfa<BZ83eC<4QH%RGO=;aXgMnf%!tE=]cT>dra$.iE[#<WQ=&.;u@XJ32BM=;2!nIOE:H\dZhg>P]qmpC_;rkt7jU<,7H0)RD6EXEIUGE5@e0>7dnDAU!.7_rQCs$l\%!^i1Pl:;j/korkNNOG.;1J!#?$2bNIlMm\jX-8H8/VC$-<M]Ah>q0J82*D[fr[f8aQWjaOs*Cg.^Z2okIhRh:b:hY*^Mj$'\T'[7%s,IKe\)-lZ%]B9OWFu6Gm)%X0f%<K->s@%-pb\dO^"V2ngMW6+d=.//PMuCgq*u'?:GG+qg7lu&J`fF+%YiQZ=[2MiCP/.LEta>#%05l%F%_B=Lk:;$i]ji.>;^t#fi17X[T*r]o00ET)Gr0#L2n':.o!^iHat-+WA^#>C%b\[q!=j3sq-^)mZFcud=4,OAk1_m#dL09u%W)1(>mr!'=p)Ead2PQ.!)/ctAKDf\3=1\W7='7p_Mb5#7k"=gihj7!n\ot07P)NNK3s_&gFGB4dSS^,^'H_=r>\Y$/kkoOJUUtlW%XSkkpZf-N\3>^dOgY&Hml$A%W)4'_YX<ZNKL,9oh=T2l-1_4l`ACl-HfB(T->p%4_<AmKPMbR''[jW<5l6K\Z_E9Z@Q,61g:DaV=%8k2<bnq4QQY^G'Ak.Xa=llaWa?l@4F\$E4Yf<"M`B[l\4DQ\^`_mbqUN9V@=(Kne90,P?fai>K]e(sMjS+3^DKCo#PY%j9cHlZ<P%XHOs7OcaCX)iIe&$m1@L`mL(;8-(6Y8n[RH>aC*L*NXYVXJrOd"D*eOn.,U3T4&VZikufYR4J#9f.$L#&/tb8CH\a[@<!Y!148^B%4>dr]"^,]e7rG%d9Ql\f75gTB3@m35'ED#2nJ/L"Z*<F1S;kq\^+r!_RMmZ13%ITYod[1SjmZfr^kY^XbhPq,?qKujEWV_6rMX!^%3\ZsH'TL?a,^&?:]Io8?O6,R][`O'\I)W.\@h5*@@q145X=WF3M9?:8@1fL!n8K,&/JLTDOUD@Im.uYZ4H/po!h9,pprY;92qp-c%)5u\D!sfd.I<n!rU8J3:<&JKYM'nT(JY/a8(HRfpj.>H+,ZtgR)(P.bHj%F8`M7[/;ln-qJjX\O25>;u>X,/!!^0q=8.$=fK^b<D%;V1$CM..hcnHOR9ng`g^!1F^7-X,aO/;tDaRbQ>G72jbKp:RJbkqcT]WTee#SusY$V*R9eL+[H6e8ujQcX78%J]R`jVBL1M*Y]m9%WcH@;JPP#&1#%.B&7IG*\tOX]!@-hqYdAG55'uE9TT+MP<5o4f6@$aV+!E\!RK^6lJl&FC>iQ2Y3S5mNQ*jmQdE@:/kkIb-]E<X_%98/<mH[9WI>L!\sTMpkUn:[*"bXk'Y-j9gVKldcrTWG@o%U4rI&#`r4<=QVJjjFJdD2>r'<>ZdbIV(tE*T)N-KsOoVb-]:P/=2]U%&ti2h,\HtkO+o`-L>/05^H&B##H#J3mZ@/T#Y`q,7lO7!rtDUPWo5fI<"BEHcT'5VRMl6!:r^:Bg(5no<jZr)[u2!=9Z*Y5-$R7#%$BN:APJX`Yc)<'l8I"ckN&8+F0mXu4PdfQhb,/6LKcJ:/2:foP)ae\0;)V4Z6)W%]Z7WC<L+-Fr`Z$G+[mSaL8l#6oOYN[D:;!)I%Ub!I6iKnN('TuJ&0G\g.?K_`^c3@i#2?K!MZ^og9;59CiV3&@MiG6#JQ:>O,L9J1-+'1G(ZB&G^_p#$PIP.*<3P`?9bghNoAh3?j%;B!,eYT<rsF7ca<UWg.cM1TUn0eat/8V-eQbj_#W0ml^2<Aem()(-Qi>)q,\_B*<C%V<cW!0WIDdb8p]IV`/e.;2]frKU7U>TK#6%5pgT@Ylm5;&qP9u^-:d645+g2_SYkI\$a_$c&t=`g6`/UB9+n?PJN($&,/XERV4k=?f'W&Shns&c5>Z(KU"KEs0r[bX:4a#i=dIV%0Sn1Bb[P%c/0H4TFE&cF;t9B"9(R!n.-u&b@BOkBQOu8>)M<m82*si#NT.l.2G`Q:<&=ZC%RBbb#U]]$36")1Q";WUZ:#M>H5%q,%\t\4LAB_uR%T,/BA1=FpJ/o'.1O`<Q_IuLR3M2aYr\r%1nSaMKK&@n-)sQdlGb1?G'hPRF<6MS-s3Q<Kdj*EYkhcP`LcdBW-G8kT%<!-cd*YB9!3?gB]4$qVQ43B*(4?EU)_FP.q8[kW^ac*-;!$(m0"")tjbc4UXB`bKZoZs1j,*NdAKG$#QDZ6Pa;0h<'+H,m\U*8$2%9Rtf]WK_<i.h7G[/o*KHUTi@-'a;CV/_USh>sr!Y-c,X-P.pq2pI\nUrr8]#1"5m,=8I-O=(86^I?ETYOqi7Iq+E-qD]BHp(l5rH%0cu4!S`L?U<uurMM1IakOQM;lC$J(eN)Z1:D<(ud0uElcH&^?',5sJ?;q@CBr*dR>-u42HZF&dNNJXH56N0MQQ,Tm)_6A@OUcX$)%(;n8J.n<L<:7-$GQ@G_6bgBVg)!:j')!gPWp\rQDm&jjPkF9-e,,&Lb[ar%bs%a1&>H;FE53rqW*d`%VgV\MY0E9=IL!f$Rao%nE%m>emF0(5u]hDeik8u=e#$[Smq]i>tdpL%n7?lA(Bb("JDYTpTnUQo4]X6KG[HZ6LH=sTDS\@g4+4n%bYmRbg.>OS.9rmG$:NZ@C\%C[@ZTgUm+@alS/-rN-ggW>=g270g7P^&HhTquu*koig2,g0WP&mN*rd<rRu+*Aho^`ie_&^\kOQhnLr]Y<(J3[q/[@UbCI!Vt<>-%Nts`kQ&ZOXor#.%[C\n42*Z(?FGL'P^[NtJImV&drurTa=805ZgHBDq_u&3VXa]`ArQO+jcbJ]?s5`UmRCiKuHeh"/^RkQ)F)UWa%$.3\kp=#t#Y5_oY`qEFDqZjg*s"#JnpVGhUr\@_Si/pDgIMNq'm<Cp4q-ULnrthoH^]';o`SC5QN!=^[If1q7Aa=bZ&p6t(kjL`W%[D2a>l#(A(F*I3$T*!I@oM-a(9ei6KQ[`hREIQlWqpCH(%=?gqC)tZB2cY2'B6Vl?CcH9!/%l%J"/+mBgYX4Jnn5CSnsfX_4J.Jd%X5;h7C3KmPAcHbI:TWeF]nDsE_=AMd5_!qtq+n0RnsZ!gIKmB<3_t]"(U%UWm;;;bO!_;NH$cTAXJrtddrA8OPdS3,[PYN!h=m5e%erG0hZeYT;XJtfieN#bU[9bK[&%_XBs.cWS+h0fYp"Wa-5?R/%n#s-4EP;=:Bl/[@!.BL=RrbM$[B9DqnKjj_hXXus^X_5q3S\LM%;hqETkLRKKnnrqqR4`:JGFEJdNI$op%[U?XX`CYJXaZ=#laBh*r2"\I")'d,\haTg^.UM'n*kkimM.h3\XWOB#IDhYd^eQ>#J)h6%D2rGuq0og1h>aV3>3c+YTJaKmFg/Na[Cp^UdK?"SXr4ZMe7P%kIp;?U)Er=qX-r?mG7B5rblA]#9j6TI\2R`OQ'#\QH[D=^mdf`'%rdFtE7gF;GDDF%@;paR@G&Lr;qdk!?E4b#Ca3eglH@&"dVP204<GR"%A`%\<`qC:Y-\(Hb*mar8R*3+B,G"lPra^.uCQBR)g@"s(%%Wm?cn"9Qt?9-m!Dr(@TfJi]&d@?<$Z#nE$DTO+)cs/X153X]E3sK1:T6Ahp%X2)0]*-Z>)JI`aR8K9rKk<>mgBXj3D97Gs?9CNu%dr'ZA6$gPcTkTaI<(FZIG'L5]\8_.#_l&]%Y7C;G/H$@]+C!17alr__Dcc=@BM75ENtr57\'(Z*FSBeFoN-a*JX#u#rj:;='K<]'%n:cF,rgsE)N1J?4:cmHT)#N@?N@sZ@Cpf)i/t[4V6m;&Q5c`33cc>;B.@gtT$)OOA_I^DF*6*oSAKYW$Z27aLq`#HLp<+t\s0KN9%VnKL#a>q/DbV4>a=+-+M0!Dk@&!mgjkT@XOqe3.YIiTis1d)Y%X397JYi3=6*L6]UR.[7q3O;`&IQO`F+$HXA>^$p',k_&,s2ccE%T1rY15QBWS@34:Y5A7`ZrFi@ai5fFhP6]/N>luFp^0=7"LH@#g8%WPi^lNYC&"Y^mFK@^SOOH6$/\"KM.sXt><GAW>>$V7ldl9*L%Zar6.O=$^tfF8f2GlH_e%5Z4'GC'G7e(WN@fCA]nZi*I)@Tt)cS3]E#U']lbi("%I1!F=#5!7[Qkif+rd?ho;BEQKBq<SsO*%'h'%5mYf=2aYJr:8?gG2?3RhL_Z]<X4)#CEjq[o_T8F"L,NOnZO$,Y7A#$2eYsKmC?UHkL*#c'lpRo'FuC1Ips<T61J[lgBJ/V]2:.b/%II"#BGtH36gILf(GcuN>Hi*bZO'e_DZR:Sm&GaW>eGm7j[mFm1IU'*AhQ]UM)T-T=k<6JJ1[')?Nm$&W1Rnea5hX2kPt/IP^"*b*%4I94W[3(uXDe%sWHNiKF\%^]7F]QK$;nMKLmsjdJmlkJ>7gD9FGDSdDX(dY^?/_oph3D42<5/%47m^g3(cR1>`8,Q]P=P-%`6A14%mIm!-c%fG0@e?V_Xka3Xf,7lgf'mkHp?k^0@;kPG0uXIHF;tIM,T:C+1JXJ:kbNN_`f@]%l8N6h9)6tC_oA1n&4E(tFpP>,gB\Ge%R?!(93,`rfF+5n>)/GJN_pCA4J45];XgR_HCMoaI\c#G,$D6bsZ`K?HX<'I)dlX+I<\dX8CQ=rIfWf<Am[AL-b'Q#q>O2!l2KhTh%bTk6TMHYtaV,+etXmL1cW6hgKb1=DSo%nZ!n]3;Ph!F``HY6H"*SFr1[nBeN!)poULOu+Wkd)HFOf.p/?YfE0+h8%&i+X4`M'$[0%pA_&<91S\b.I3dYH?.Srp6cJiIFO*gW`+9;8a>`0Z-Mb2gY$r?YO682rdHnU8>"Ggr`P=UIJ=\fNUuj6\$Wi]GQ'U9^GFHd]Vs"l%l^^ISdApVp!)E\umNnZRJ-9M,-1F)`Tfnq_H,Z]O<[-B3Z&Y!:1DoF<I9-(MWBIWsA<JMW,gPY_5Er$hhPALR=-iUXBAD3<dGR.4%EMW3Bd$DuC42a@46Co&Gj!QkuR+V4_LR'Y%B@_8;g2#GUP;ha4\%geS4c?bB>Q8Z=@%SB\7t'*)@j;h9MuE>VX4q91g$NZre\s=+%6*#Z-kA7(_5N4*'B90H;0\UR#g1WfBrVE#,U]bec3$i\3*l,ipMEpaON#_4uY;D-:s)YAl`(7sB)qA_Rs1%kTSC2K=GgB=b.E=M0%U",.j-RPatHZ!bm5r,A@bZr=]<8^\9p@_P5TIS`jJ&[IhLUG%KAJXRX=+fHr?nX&:H&f%UCl#FZ%T;ZikHbWc[=5WtH3Pch+'%b;%3/q5ZG?s(]/In7+HC^rFXR6LR9k/V4"@&?I7>=p7Zu'lQR^GMggQ6qElL_%d1oA8RHck]obe:UZqcRCZTO[Fuo/mIg"NoaAE`>3i%PY[#JA6Z]jMp)'ON[iYAk(Z^;=Kf^#d2;8:GLt=EI[8)[5$EVn"GTEo`3,:;2X_kHM:psN:*j9G`*C99o4iJpn*MIXkgSC,FPgI%%h$mHoO.3/1G9_.?3Qa!pd_%:-EN%`7CT%HST@)](e)tc[?]$LOBF6_pB\_;&4`O,3FjJE<E&eb*HkNYcmiFS-#fd"<pU7Pg:cjiW%s1Ett2!lsnGhUp>X`!S$G.Mb.J*]d@hXN*8I:>]jJD)0a9#N/&AXR^UIr"3r#pXB#B+#o[5Pk`k.t"Y1HNs!Zg_!ae0[J/QO8,Zu%B^LT4IlW\sTAsO?B<6s:lM&t_#Vt&R=hB06BpK:@CujJZhV(.\Oso4dh0*MR"+B<%]`$I\/g&fqO=l2&6I+Eup$N;0XQE3$HUXZ:%pL&Q*X-\q'Iq%k'_5N86,tJN="]F%)Y]KU+>qgLDh8Un5385,?1RN1af6)Z<'Jpm8s,UPplE'W8X?0>>0AfAjq$"WT,0^)N&Mj"P%I\+>t87Pk,5$2(h]j(+Vs&8Q#,a=q7bG090I$<aALS5U9p\:q^cHC8Xda,JWrt*_."@q>"qGn1b7Z66#cfmF"4r;R9hTR(';3-hV%qRa7l7_7lGIeZiZH[k2?!F^Hm-7h(Ooi]'fMFX72\F%X_6drkc%s.EMDtk0`T-8M$5Mr(BEqicIod;G-jrA<`cU8qHFh114+764o%%!Lu^cc3]0DZ=*;/C<R;HcJ>fT&hM08t:*DDb*A[rSRlG7#HjpRtONg@bND34^.,7C!km+^?i?.Z.[rMop6g3PO-,hMVMTN8k!#*%8o(tu^WH'`1eA>oenu(`a11d15(@`df\_%2XZ_gg>6Hfh&SQG%1?Je@!H.;qB>^p@9XJKek5/H<:@"R.EE9]R/U$80\$hY!Zel@T%7OLQY.'VAh>i!>5+77@Y?XPRRbU^$IfcALuHg?=7D"V"f]AHKMXF3.'.^umu^U<fWn6]RqJGB&f&k'19H\Nm#:eS[H\)!<.>MXe!%%r\W]8:_sjn7SG-ES+TC3_q,,q<1Mql>cXt/;rbT"e6r=GeOFU[[o]Je%_<j@XHZ@*/hp"J#U=rl)Zb(/hhAMUs)c40Y5q,=_pPV%E=&h7J*T9ECu$;8h)XaP+-,;B()sTh]K6fO-"@r+qLTph;gRo24V<?bpCGuY]u+kc`AmC$pNm;4bsPNgP`CL$4RT>YSh]s2>6=nO%Cd;4c<8^d?8[m`"3Q!'M-&\?,6KRZ#]Cp5llL!EnGF%,\4Ef>J:!QH$5M4Z%]s2qSn\W8%Z0S`#bO,:oq"irs]R5)&on.TerVbK/%^KuCN]mmP\(?Y#5qPs)bE`Meq^<LLg<*,scHu@i3Ssn<t:\UL6>8OG;hc[V%?TL>6R+Z`Z@W?_:G@/U4h7^9Yf5=sQ3&/tCg3]8A%bq326SN].qR/?Sk`daAGkj7pWqfMiCS)a8&jhld4J*$(A\*`L"03k&PY9'm+*:-;?lflZPO2#k(B%q6!T6.U#m8)20h\SINhsRst%`oe\O*\NC7=BiOZPn.Zh.nQ%Jl_!%2RI08+GIQ1:2@jCYdg'sT35/^g>;_='VPiihIk0R+P5DSX2a7!"f<l]AO4G@XS=-In?0T"j%]Y#b1Gdk>/Gi<E:2E&91^D^F;c#3A2GG[E&h6ld@?RELI:X<?s]eJ2(]Qrtjj3*p9<`bX&j4DlWr;,EMb\X:`b@uIlb1GBPT-(8]%CgXl*I<'i8f>GnnX(sr(rYs=1*cJUt=6#i1T;F]^X4MR8mlnF+/+*7\G:TLorH6`F?[ZJ)^Y^roLoYTXqet]Nde.L(l`.AI>I1f)%l$gn+]47$<h3m[&Hq/ALIdu^qm%^Q'Ds&KgkgR4-qA:mC9=)=Xj&9mI52N^uQTt#EpNEagL@3$MQZ4;nj4j?<([#mYk51,tWM''!%D6Yjg/jGo=[6/SKiSsWfIEW>oLX/'iGI_\#>.O:HoC)3r$WHn;lL"K_krq0`s&B90n*M>$h07EE]mK>aG4,@L>oi+qh5NJOhgYCF%2q]aL`d9TWF;F-uo=.r=VniGYf\MnXeFhT40$_[hiM.`sGi-OPn_7ekC$saNh"n-#5N\<!Y@!]S/$E=@k?$QSmQ?u0Gs8_:C?rq4%O&*5D/mOt;n!Cc0@=F#J+6L>*nM`9'?0BnXgpab"B",Ln>BeYBY&5f7Y2;'XJG6dToQ%&mR'1u3A*6GHg#C7($Ze8XT#fTLK,3+;%gHX>+^DO`cB).3uk[(?WVsc/W>j<k'4ub[8[::RGF:RCVhX+Z$6bO\fGrC"giTg>r[At8?ldYmDC>mcY`um)/F_Y?FT]>1Qpe3>j%5(6R':NlMBb=)]tgu%H?ngVsmL<o,Sie,OCa+baLC4,Kqf7gL&-gaYd[Ih;l\FOo;(39%,io/)9>o:2^G@PeP^AL/Z^=Za/5Umqm%q]700X8+V<kVOI5c8F>0jVtNFS+HT#BD(r@:ASAU*l!?j&%CF9)>hj7q8nJY4R,Q0p[46u$WfD_:Y3UC_VE=U1Q1_:O'4.0*:!:V%I9J"oRCAH0i1HToS:fu42kFsF=dTR=m.e7!?RIL3*UJ]-[CX(+58VaAS:($b#u95;Ho&U&cJA?.GB;p$_:m2Yp?nDVB5-tn'cQ)R%GVd.lr']ui]5VUBII+UOhn2^VIC_<M`tp[g>2GWN^]#q8C3uF:"m=dUHWWfu:%75mP$==1\GHa=rp/?shgF1(I<DrI[,8::bGC9S%osa>1.Agb\7R49grn`!,:!J&-gY5o!H=4aIB`!RO2j]<GKQtTMYr:.TiV_?a+)_CSk1F#IP/e'\"td%UlGVTGYN'gJp",%0Y?h\p%k&C3-kLJ2)Zhi;/q)U\3E4/JH^:ka?Y]t$)HoV&PH$-XX#Ckj\7)u67B6o(#p,0C_@Jme2Id6p=g"hma/75P$++0T]SrE'\e%aIG%W[DD\,JP;7^ROK>]6i&94?_J32J2^lRUs"lZ@;RZCh'o$pl0aYaNrrerOPZFj2bVT$e4YE9D\<u::b-%4di-L*]aak_mA^R*?Sa(%n]_l2^TYoHC1Kn<*03F%^aucc*YF=A1%S#kF>2Pdc[r?]+&TB*j-))jl.OF.]U+]RLVA4bn8*tC]tR;BqUcZL8tLLuo5m"3W>@ol%+QrRZqCcEEc^hnodO[mAC@p'Ud>Ku-%F$Htie)8RZr$/hnQn5R,KCu+#6-.A_N9D<:TiZ@^&6*>n.+M\),^E[j?EY\\<g+ois`0e%E,flB<s)8ZH!'tLbVJIfA?U@njZ&"gN6WXYQ!n09c[(,dM&kJ2IA?Bk6QBCV&<b1Z5MeIW.E7QChq_di);Nfj>EuP4Lshhh@MGgj%6K0dD^bCl@<8ZbCnFo.neE=[V+8J"Og&T-]M][<kBXfeo07b9RM/JYUN%l2khh]V$0A[8K+ZmC:lVZ'uAnUAQPMLrWleNkMo[iIa%_oSBSiftI@$X]O?^V+UVAt-;4eQo^k(N)H_Kd<"qn'c2.^YY@6qYXoNIeET!CVn5K`//I&r,d'n=R6lSbN]N#@Rh.O?Kg1ajGj$\%qE9=Mj4=<m4/-RlQ`&_G+3V![LG(m94aHU.Ap?[!?b2ep]5u;q?[^d<+UN==HH."rAXmmugV6_B?`#0b0(b2(p"#rY+%ZceZT#W[%Z#jb.:>!Z3^!Y'*Cs7$?c9E;i<fiOe+6LDUW"er@rG5#I)\sVg22,q;[hjAV,+b>Bi16dl-@<4n^APBkFciIfdX(]XB9\UP:e`&]%rCQ,3-WCbEqAKX1`7@=f5,.q'r]\\*lL"<E6bS-(=21e`o^;5XMm7nU)@Z<=Q=dsjFO@!-r]9da-=3SVDQM'pR/V>Ok/GkH#:p?d%Nus`GigbaG&I/,ZnO\)qdC6JF3&]29E,^.$S_](cc1^-pkLo/K"R^r6!h=msS>K9,H/=JLAqL'oB"$a>8!a-->TLoc-PtKb2YZ/,%eLmQIM^]K#<pA5S_1TEo.li[Jn\6%aG4?7mAa6j'Qj90`gXG3Tou7NKqXXVA48o"b<_[`$AsX"n]0AgM[i`=kT&'>;ib_lgQS7Io%5IG4;D8Q7>mn^tq&UD+Y)[*\\`Sg@3GC0)Di"$:$=1?e)[OYV3j!-U*S6;5Js0^[AOqp62\p8R0IeSr.dU(0[[6W<]Q!5?r[(?$W%k/HrVkOupmSR6K4L[VEi?MsBZ%<V".LUZ02SoO4&Q+e?C4KfOpg=m/7cas"oAlbuq2YUQAo7a4S81mU)mr,r6\"CCJcP,*5mbdgI%m;B@9ca/[e`dY?To5M\kc;\E8FoUH`48AT]POCW%D#U["J$c[GXGb>!9^c>7r,CWWN<rDAl7M6Z'5P4uSR*p"I(=6:'0C?c;_+Ja%Vr,3*^NOsFr7)Q;^\j)MI#'hU0OR#5S9qnuo;f[Z8Vjo:IntAKpj6PUT>OtS44fi%_@CW.rjm[.nSIP4=pV@!<5IGflrJTd_Q#<c%OlV;n+1'!Wr!=s)B\4+;M/sL"FlpO,PAT`.gXI$h+l'j&rqSkCaa:?@f6I&305GWE4*dP#hq07'e*g@ZZO\\s1RdZ9][modJ6:.S%h@6s+?a"VFS/sl/27)+fBkYjp].A,1\10<6o"+fWs5ik&O0n\AMpjn&5*%Q@CU8RRU:Tm;<B?!7#Wua0Ic].9XeRW[;s]RH].:X&%g`T0;]m[Kdl6u+eSnZ?lGNV1T>PUUkaW1q_oc*M'j41=R5F,Xfq0Q>(/>1J(bL9Da?XK:L['TFF-G4WUm_$(*I&$:RBmbL$jm%Io%C$*$1gE.22KV@272>?=pi_9[t0=_HfkG_OX(1/_#]CK^qbN3O.kLSn1B"%"U'6B5TDN(i>e)3D_&fXoe'27I[GLit1g)MiH-RS\q%5<jTQXq.itgst8JREs?#XrJE<1G@/kDd85+M[Q?Nc%MqejH2Z4^K<Yqpg?^LB_X)^BV0`X?ba9srP_\JkpAG!F714-*4<1!rPJ>`%X*6c#55ok/V`-Q`0<9;g*U@aDqt\6U[\M[XA`M(er'^"++j(Wqk>bXZoO-k?k&p=n<[c/u.(\1]?Li2:"I]/Wh1OBfB&DB."rlj@%fY@3D`9&-pl&qro$qZ48<7Rl+ICj^^.Q]mbgd.G!o1=mb(OeK:RbM-W"!Lc"nakk#F6g$Dp1Ccd>mUYdr`Nn.hP8pU(rErdkaqHJ%p[Zf+>Gh#YpAC-=4#;6$P..T1C2A3G1*;)p:Nt6b[9r(Io@I4<+1_^/Nh'h^[XW^^q#9INS_iM8Rri+0JY`sFpcj6K/=mW"s3VCB%gq+N]-ihBH47c+9P[C`Kpgn@A7@uQFO:#:\_oiFoSPL14ZdTjH+'uKn*d.%Un"%j33]FfJ^KGli]J)3e0XMam`0W,OhgX>9R'-2W%^T_#7j=Kor`_F/tJthFt5J'i+o8\hdojI[]cM5*Fi$%WW+!9p`D_B0ETq(Sh9`K^;j4h!+2sX+l6Y##3Nt:F-0@qPKDu]CqqiGbl%s&t;H(3X?@p!TN!O,dMAgYX1BGNAP&Dr9:8If<N2]'G-4j5I>^\VHgSrOIcML&%\e=0B7a=FC-YB'7j\E"ZJ`>U&n7r<"=A4(aH8%SA.[jg=!+6oqd(7p8[eV+UibJs7H!#eV/oWVY;`n5+#RCmC,RcCaQ<qE<EqGG71bCpY>gt<.BI<OC3kZ&Sp@J]5Lo=%Gs,-*o+B]%,nV@lZ,*TWq9X&7]sBEdB^IC9b?mO[hT^2@5!r=0*$6SZ`QR:ZNnpYOrggMD'g;?CH"LY.WS.$\:J]g$]0)%171>ntCU]$nZ0G,4%M"b6Qq+d<)ncFK]S=G9pnNoGnfVO]ml-dH.meghPV3r^c2b"e<ohKi+FFil<rUWdfZT^9n(-;7=ok?dPOn;UigjV<PLm'Gs]D,<l%H3ETr?;:V#`qWj\&/$Y`Ft.igi<984f4od-rI1-'I^o-IFIq\^TSikB&)L*#Zf=lYMt+E?5<KuJ*TB,PB"$1\'ilX1OW!+_82h&F%04*M,>bB_gFujGkGl$o!27(!0p[smT5Cg!^[_4H2;GCF=QJco(."CGs06cB?\.!"EeTohP4IDU_p1(3q9&C/K<=e[;T&n](lD=94%1ms:!$hO&7LW>+.*tM^2ZD)_ZIHT<A;VSt*JLiWE!dI<OHbRak9s^?5;quX[5Q:$G3$$r?ag:j"HV.uHj9j/EclP(9Kr`JRDl9MA%(N'Z)i5Z(LFZS@[Kn%>G17u<:6Q*Yjs,[K(Of0S7FEd)jNVCdrI^uk/q=^$[[&)6gQgJ">BOoni:@C+'48"7*!F4NG$Y,5FhoqP@%48h7sgXgU^cS'2Fc[>3%%SMqWanJlK8#bTYVdA'2(h*eFE'M!;IRpbNYI_&hf\JbeH@%U6D@M$A3//;a/mOB#9R]G$p8`n$km[^b%=,0FakJM4KV3fL/HGEG\T=:-IOf>7L<tj&)0,lioLM(&RS6nFloVGJ^[P'ohN5r_lf[4S\`d_?"Mf2pOH;ga=ZO^\-5H\:DL373V%l@o*tpZ0HGV8cYcr%jMV(7)/K:Z)!?R`*MD@_Au[5?<W`J+uc$GC?[dE]^os6A1]_:%rS=]/99CYp6Kf4L6u(TGFa0o+,R"bMhlC%X424ambC9fQ_l)>J)-"VIb^G@/a2>XKrKc+KuSj225I4u,c,"!<@XSI)o"J*0$SD&!%m9\CjNM?Rj)Qon&jh8JT:;Tg=ki?D7b2e%q98Q.=aKT*_n03cQ\1]W2,Cg]np0>9iTmDZ9gi2jBAI6AG@J\c71<OHKuX>W2V)e@^86a;4kA:lg#tB%mDt*Um1/a'Tbr\4_nI;Q%p%'=Ii;9QCem9=+r[KVq[^5Te/IfuXJ"Q_K83>^SHc0HO;uZWZ=O^[-mo36#lj_W9q64J6:G'iIgq'mS2=^[f9W+J,K^l3^d9[Yk%)hI4[P:r8t'&G_W;_tJFB29Sc?+TPIk?s?%l,=rX%c*1iQJ_DMOnO*:rnGtWq:s_ns86d+2%cA#pER8!NN\t&r2(0?ET,MJa'Q8q%E2PY0)K1:sV`/L0V;4Wp`hA52[mn+T^Ai<63e?mf&+c"Rl\ue^ekHY1rmp7hNR#sWs(;3!AGQ41dZ):<\XG9DkA*PtH'e#3jnAG\%F.]nt?QK9UAfOk;M<F5q2M?E3]/dP_3VR36p?aT#?eH71?="Iq1/lZ84T@+_)qt<(4*YQi_\Vmj0YanM*sRu"aNP_K3':GUK6=G\%I)p,&JWB)s[A,XHg[iTq^J/fnmpCIVn9+)]"Z$!:p\<`o2-=0&qoe.aO.JL^)/m9:]g@)1/uXRsTVg5uEOA*A:L`/iRc)e+>CF/4%q9r,n(5;ZtI/`AT-EJ/Y+<4SMc`c2P841))[Wa%4T)X$]DnIA:R9'"mG5:jpcI1k?!S44B^.u\]c#L#7A)W"d$pjueDuI#SrOfbW%hH`9(dEu!-FZc'D2n-R"Nt^c^SOY9lV+;8_oaZ:Bl,@_,mZr&u2gbGJHWt.DkIk&)*[D2_F!;eigY8Rm=:%J[&]ZkU&,>A#.Tc-k%$c46G*fo:PPRBrfkUd<^V;/r"9R$WEC'CssY$;h(^+FE$[CCR7/#42EW2P[oD7<`tpC$YZ)m-hNn(/jOP8<rT6Iirja7'"IiK4&"%hbe8m0dhFU.9?!X0#%_8chUP[o8AEIGrd>^hRqk"+o0sUT6s,]&UMep5.)`>&#N&^9P[.%Ets(:9e!KGd3Md3F-X/\f$`%<Zam2@%*Pe,ToW=</"43L[>e)[lK2D_f:'\R-T[K9Dg7YlSjnhFrClR/al@nm=Y:ntffT"Io[rSG7b#l<?aq(5q5Bq[=?ZaHP7F#(C$DbR\%Yr6G815="2[B!\T-?[CH4S;:Jd@5<XBhk#[e;i*gqmL\8KI8BXUilH'/#L<Whq*UK6j*!i@hGh"<30b:(L5cS1%P&n[k#*Km!OeJ%"`*JR3]n9RA:OmRemh`q2;-BKBdi0.UKgr[`amf1VOAF(JCau-2eG1]([sTTO)EB9*["k.NfGc&!59+Zq>J"VZ8m88!'300WUfu#%bmkP(pnV36>GS--lf?ea3Q$i`/%dNIlcS7ik;:sb"!h6_1EJ:lmMdr'.(%c#a(k*!-64c\)d]M<`ba@oEsVpO)?>?-PBb07cAdpL%Idq30BWS8ep38IA`e^%W*P0)?OnZFXTQ6tR@VX*4bjk"Od<Ks#1W`:l6a-V'8VVDU17r+ugQhg?0J_.JXDJ2)]=)t#=\B^7:N(*)%=<'IZ<dE[*EP)Y1p37)Y!(HY@#i^$S*;EYp1t-_=;\M]H3fm/CDY!uXQJ;0X3<;Z;-X0$0'"Tjg6!lbS8'pK_NFZit%$G^iGX.Z8%.t[AM(Z5TWnL>C\n,^j>o=1++W\OdObn?OfUTo(.&d+NJG-7.-)E]Ln\F6DLZ+L',6fAV6kGs:!l[fW3!r^q8!a[&V:)j#F63;7q%6&9"7Rjs?!'ke!$:V[q=QmGI$:a#^Mr=SLKe+@bAGVRu%qW/8B<V1MLg[^_RmWa62\U^6nYnB<K&.f8cV\s7;98F@>@hS=OXHabj%BNNk(1qIjP`p$N>YSmq#c/8b8)5*uc;-JR<G&:eG!q[rF1t"$RNcM3R19%KC>9P+9iVC5(2^Rq9WT&V:DQ@OVMo;\#dh>WgX^3M!%\;g8G=i.:OoQ*r^p(Et*D9BBhJ58:Q`"RqA+-hli/&XrfdGTjE"h)WjMP)@)JI96"UB);^J>Z@t[DDoWl&c9.>#WZnlS0L<8u,6t%4Di=W_uo1Q"gQ3p0U7K[Vu%Y^c#gc%9pdEX\J)4OOha&,gh)Bof>O;KJ609jSd*7HJ\`WD/Ibk[7_2?22\7\jC;Pr7B1SZ*5f]_Z%JshFgnFq#1.EG+!*/GjO?q#U8N`d\)LrR\VQXkP[[%ZKk%YQji-#I5;-9+q!6)"G::r)?&reU%H?+oj@H6?-,RJkQ0]Z<]nM$=-r%dtpQ2`B%Bui$qlc2rMS/X:q;D4,!1<,IWedlpS>lT%CpK$#5l1&:<Icj^jq"plaETN@3Sh:/r5u[0No>Bri:\+JlLH9G3Y!+<Xfq%ML[e$G)Blu'k[s]PG=<SRD;t<cn0*#GRmZe7*LIbVc0Rca;M?8,)d,@b(AkHrOc`I+iZjEW:K'D'9a>;8sOMN$L`BVXWk%bA9thn%^^0!1?'?#U;qRW]$./h=FFnXC%Vg(0:D5O_'4s9+.q2rF9n;Mti1!gnb9.\+^!gs7r?^=:kXP%jPT:c[+%04fGdST"PD%qPl#7k,%*tF3^(V5Kmku(dhRq7+@GE@K\d(Rh`\*t4n!O^;4#dOR5Lih9MJ;oCWE.$>lHR'?GUsbF0^]Xpd<S/Gn6C0u*;&`%oYhGHH':&o'%aKd7`^4NR^NPn1X)3POgUQ+3P$XKLg4.h/`3Dg#D>E/)-^R#=s&:r`o#5"u6rTVo&2SC(E!L4BnVsgtPK-hq7JMrOuC)cV5A,A.O%')4gETjLY579!GESL/L!B)US=KnT[+T&b5#8]H9Wi1a?#iA2cH`gBL4@T9F^pr$9+D04KPq2i.NOiA*r:,55f8oU>gGV)6B[M::<%F<NrOFZMc^3Wp?1)Tr-om`5Hs()j76)O;L360]TJN^/RBE<6W2L9mi8_!gW'Y[/:mX[a!npgn_@/?(`omc:'A3]84Ds71g57-X2O%4hoq04DuhJNtqVKm`c-OS:i<Bp-aOa9LQ:E[tMiI"Rd)/)_-a,-BBO9Jb]EX[88+?o/KI;IdQ[(CZ8s=2%($mA:YNBi.s/t$k=O6%&7B)kPtmF^CD>4Y+[kq3QH9]Z,QsFS#7$,\Cm\oIoe]@h"#4.D'?17iU@:pdoHbE+kDMn5+?E#cLdmPq8Dn.>_r)tc*e:17d:--J%SDb8tq#i7@0fV$rG\sf"#QlW1*oe7k0A)U=OCVB6LqQarIAF><^*2]mI$JG\,W]>+aUeZ-OP6Li3=&.c2mZUOU_9CVmF#!.JHO:>%JgQVI6R#cFAjZPg+RW?f_;/*]qU3XjhCc!e)mNgZ'D'@4=0N.F1;4d_-1)RO7Xn1@2PMQr2'@G.8!p.+6-!]DXldWVLNc$b80T1D%A&/SKB#l>n_Anb6ZkB_=9^MNc]l\t>7T)"hmonAX/>0if`(YaPEcNbp7;(p:Q?A"k-`31TX$Y%IW^ZtO'Os7smBJ?GKh8k\nnKsH%WP!(T>COm=)DMe]<K/6T"PGUf3uVj/(-6C)a&JF)R[ZSY7ur(]-62SLo#-dSZ"-5]J\9&t0Zu-"e#lTf5;EKHhJG/qWa8XN%sh@^%"Z(p85+jA/#d"0nk^b*CW%ii\$D\;8iJL/HCh#:J!MoaRn3Vp?-%MHk@$l/ciO6(63YdL([0SER(!6uJ&/b\(Y.u:,8r<U.6A:34%F+LUS=Wi>8e%cD5U+dk(po:V$qLh#W?nNY?V!4755of5"BI)Q4<r=6f_<C&bLhN6XaKQ1Hc*I6WUlK]CS8AnHD@>_s<Md!R,YA@[%#mi=[0Yqh9P.O\upd_?=L\?ZrB^n:0!bg8P&5c?ID>"P685CTaj8iqL*k4R=!:c#eCg^[?U75hsTU_;!AeNn$?uPFD>6[^._[7N7%="LAFYr4qf,O.rOAY]g%k@2,"2J\-13S%U&2@8_\WO+rhM$+$=Ht55<d^>fXM@VOd=U$!O+Gmi"M5[[c)lafi+Zgg>O-Pff$?@pU%J-;70KSXu:@n=R8DN\h/$3J/u!GS-+JUj2qB5*d"SZSJ!i3A;/l0)Hr`KF257#!"uaa77e>@;t)jok(0)j@5_,LL0?i[Pr[?"59u%JFO9Ije*M\(=#LBJF!A(S2:FcQpCa&4lZe$+q',*8J=NtE2&)lFA+KP(s#<6WTod\;rV)9^CKNl0s+C_LEuf>$=42TNC[<)C(bU'%$q\((6$WGCZnc`8dI0MaK)Gc9,+AXilBj+0,:l<gK47i?aV.1^+9ODF)k;HYM9qj_(>=Z]lPNoKG0*;,(`:"MCjn+ig?=rZP;H%M%+m;e.p;K[Y*6dP.c^-;?'d1LcD'X*Lkb8E1OTZ5R`>!jHk!`bP0oNmV-3W?J5nWTO:'rdWZ@9Yt3d'#,89h6fCJrY!M+.$0&t*kh%9;@"FYa7aJ0.+kAN-!>PI:?*ip6/U;HdVH_@#RECLfHa$Q2*]sj]"KEHqHGbF%utJ,'Z+3^TsdHI7X#mS&@3]@k>VP_AL]GZAqPQ%.>T^:XVtju0`ZAK(=EIDP@>mb_T7L$2]rk@Le+>](dU.p'gn+;W,'4%JpXO4P-d$r&7H"S!j3E<8m%9H+OM`]CeN2E[`m1b^nP^@%WdGQ25T)<VcjukFe<(Uj@+C'Z%Sbcs!X?YGJJO+t+9SMZ0k!>Q9M!N4_,AFk6B&;&7Y6=t/f*/c[b=D/_T-,Ye3l`L',\+t:o&9g%81P>m%lFSM-\3$;0]>HoATdW3ULDNm3eA/c5X9(IZk8J;6n?,5bI0M_&_fp475L,o=t1sa6/+rL\#oD1"&m<@QK9?F65*AmKftHh%m*,\l#S:Kc\c`Y#X]c%$o6R[]f1?1>K6'XX.hh2Wd=eTtc&#.oNi3c<Yrk8Uc@EJl0c/@L^&bfC.tfI)&/Fp)4<+<Wk`I(TQ$X13%f@$%g86NlE%HP6+d1q8c,d@N6ZXZX@9ZcN+5kNocka>ln5qAGULu-K`L&\4Jif+MjjD=qo$qlF%Q.GfKrWDaUbesu93EQfM-IZ$e%"g!hrYoYM$O>`gdYsBW@8CV=1mYq<>Zl^(I""\?(<ad@FmMfQ4e%Lq@c1IQ_\uG?&/bFEN(/Vu?(#FaG0n1=?j^_4rW&65C"<sg)%D+K#0/4%nG&&:G>3@4`7rP2!kTjU35-]-%rEmdOpj=<X)-;#i1l&&Kk6`#RD`eGg#B@*n51!LqgK1$Sh">Fm"[7Ls<-HF[FT0X6G%BEJ]l@APjF2\SpFL0eScYp*5#(Bea8&0q=N&gJd[VGY;D6k.q/-R3_pMaaDn]';3B;@]2g';=Pb!('\M89cW&YYQ4]$3JG=J=ZsK%VD3BQ<FjBf?pCZMXrq3]TI5jug0<#BZE#`KdCGr`]>?RVRB!9@'S5[aJIDo2InR]a`?@9PhC,0((>7%=Rpm\"8HLRbW0NMR!YEiN%We-FZ=t?TjUD+g@QH7B;!%X@]YSY`oUW=W)Ws+c&CD)1801@UPKk:D5EM-/]$Eafk,`iYMZ&uAf\K]6$,2fC`8DJt7:3@Z0-5<=)%2Gpn*M"D&Ub6Q,Lm-7C[87\5)(e,u!%n;?i93kTb&gTQ%W+36g=Jdrl,On5(0L@5hQF0(\WK0G>`CW*4UEUY.6Qmm9P6;_]ZY/19%#kS-iM@i<<#&NEeHZk?656s]_@gfL(&!\ScKg,+&mO8el!gX"j6JZ<D?l_p@@'_/(PXbKrE?e,u$G&VtOt]!/>q[!u$]2/T3$.r"%N'\U,%C73[s&2_q#"P=/<F)T3#Ad;/,o2B+^nk[NI,T@Yp#Q<!>/-EGLhW3iF^bgk2If'fFHBLQ<2/K2!WWT`>Go8eS_C_i%>&;u%''7,f@hC6-<.rP!9k!MsajCYA9L;o+>$"S/$Bk1\&IPq%Y#(^*@6!V`AlBZM]FcMl!9-EoNSji3&A[["ZBFKQ3."M<'$HkD0?a\D%,#0(CV;FpQJn#i\1TR[tCe"O4DZK&YJd-0J"<:9,+*`H(;ueW_ef8S/TsS%S3!1^8=98>tip_MBlG_]qLb$*YZoeERj^b(CQlrWt%Q!S(bNZrg=+=35A#d)"KG+'924?#Uma2)03MH:/2=&u@&OG+NWfmkra,GUB#**uV*R"Wg)M+F]60o'<u_\3#+&^:FW(SUN[LF)d7%fJ6*o'O,MGH"HeA%BsB4N.jSOFp\MCi!)9kS>'0i.QI7;E3Er>8RTY.8)?dD6DUL3.\e5qFf!?f7=cA6QSsiMULrV7JkKI>K@^.f%rlY@ZA28^*--<!g$rF4(QCAOlCUqhLX/`5U;GARXiC4j'.@4M[>rV(Y1FTVPBa_a8D(.?7gHeno\1EqXg[k\BTAF7&-mo#C/`T/)%p#QTiGZ-`6Z"tT6Cm9H,(JM)k^i`NHK?B#K'qTo<f1#3;.W&=5IXMoeR>AL4>)6Rd?kDNj0fVP=0T?"\83G44,CT#[jApml,`kIu%nfk3p)oDk&G_L_j!-"1A&,8)9c3%.Cc>F2O;e1LDEtee]<e=dh1IeGVW,b^l"KDoCa]`$\':&VWBT!IB/LTMCEh,rDA!mY.6rs8D%NF.i3Zq3)J[d5GM15X=!:/B;p=sDR"Uh\$GcrEM4EZe7(5/A*V[4Ts=.,kegiioAOdMN'N7aP0DI,[&fVpCg'e*jCh.L<mX<^kiD%>qTa.S6.kK7cH;E>N)+BdTEJh#"^O^4[)8cR3Fm/MAu)YegZjbC*SXg.8Q>5Zf5Ro^ML$\2?uU_@Db`mDajBbjk-Q;QE*sc!1M*2%=AFGb8YB1=aDu.:ejpZ$6#01E<9d.2?RJtV6D/_DXfImbb8do8S.\GY@BcaSDUh1@Kf1(V5YEQ_V,Ztr_2&jGO-O:n>p4S\%KKfd%;s$#pLG;6M@2Y$KC]dg+Qp_+iY:FH2[X\8t"C6*t\C_CEJi6i&`j$1:/-Xn8=u\!:lrNI"BNE6>>3h(+dP>W,6Lib'`Cas$>tiJ/%&<SI4l_?J?b7";q`"e0LXCb>N,iI<aN`1!^]LFNspBZ!412MX,^D;[ReO&XcfSh[sG+jHoPH+\M)FR!OaNXbHZ=;9)86f._*>\A-%EfY8?!QpQ:5j6roNN+6aZALnV/53IGfs:LR@b$jmW`Dnk(8A5eRXt"7Y69+kp'E,j[G!P^bso-3Z=Y<+$#7[Z+;iAS#d>Hj"UE5^%I23&=)Hd24>Ki*)Pi+N.'f/+:^]64C8JV:\5o;rjl6[P$8RNqb9i,IA(?8EIK6T%q&3F^12Nh0TUsZ+CMmi"f%cV$d`0];+E;`rK%&^fhQ!rS[*18pJn;Ia"u&KppJ-2n%"On8er'/Gr*`#qeb:-S4#6WA-riUHne=W*JuXTW[lc/i,b)pFocg:4C9!\ck$Z2e">"M(2"%7(-)_J2AJ@f+R1;D/d.%7j>WIb\Usqe3R)U9MUL?(*l7?)o4=#_*[66Sm9o9_&HEDAJG*7m[QfUr4=YNA8c%*3%6l#%<5E7^_I&!%@ajm2.FCumQJe;&c\j::e3R*P29p_@P'O2t,8D.F#8eQbb@._/K"]QNGT%0[1Up*&Z#gP-UUET'2+\j_)[bSEJ5)1kB9OlF!Jn<E%4)CT^)T1?aoNe[Xf`7CHAoN[dkq($j[776d1d\?tD87;5;dB>j%I'n23J*o+moaLc:t7&(%iDgaQoIN&-j&t<&TO"0)A0]P"c-Sg%Z4)A!cCX]3k5)@e7"Q_!Wa(e71ZC+`CLSnS9@,Ek$BS&RjmZME_?dfQ+WT,Qg*7[^6>A;mFn!a&d&#aV->M+DZQFcp\7:-<JFCuC%Y2Yi%93]O)BWW:.1\%.cm@#;40gYS*1*j+4a+P%a2G1mpi`+QZKkB>8&AulW`+53R$k`gOs!E*_&mUtnQk5]ld*GkpW24ED(oWXP%`06q6-a<JK)X1(6)$"PM?7NgF3*[TC;,Bn)"?MqmZ7h,J#n_5JK%gjYTMeb<bg?`r/S\RCF;$qT&H<&YdpXJJ=u^shkZmHpQ0:mq%:WG_g3$*TG&7-`fB:Umi$N[muj`LE,!dk_&L6)sI`bL-k3.%5*1(E0#\1R4QB$Q5Uaht'th]pR1D_&]k;fdU>30Jr3&GFKd-bV'0%o49.mg8ig>Ti+/nBnQWt^uu=nAo$OrOm+1u)Zl##Y6t=DPfa!QZ7@7&#U$2,QZWQ?o"qY^!k)^RK`=tU'bSj'Psf(@@nP)NU:gUd%aZ,M!LEYtq-ESu&1t9Ca'd+X="Hb!5[72WtA,I#A(W6Y6q6D`5%QPqK-=K4P'D>sLMo&7lPf:]`6pRpVA^%=h%@tFV9oUKXI-0A2%c!n2c_/u)&;'Vef[#r8RR04;_!M&XFK7=.`.cE]#&r7C8l_5N;>K9kcCnoI9&@2U;0b`[V>+&AC8CS1A,B9FNKjT0"c-hG7m0h'@%WOEAQ_.ZE.F)o^\_9<ITOk6!QImi]rkqA#raM./0(lH[j!+KA(?GI"*LBI!W->#.##L\6..:EYp<Jd0d7\WJi#`XYB&]RBPo;4G=%-U`Vt$GRcf4c(!VJn0OBTfH`pn3QEPCk1UYVi;Zg_i;'dEs4u^$nL=B7Hu(c,g&>2^=Pfi'#h-A&Z2d;_NnXdY"/u+f!qCRhkc2M%)C-.Z%\3c!R%,Ek&ri^3WmKgg&Q8I+[E'o;0oV,biWXB3(2f(kl@dE\gfJ'DW*ls!#cY1t-p/TCInng>!;p#bI#l>P.q],`HVC9H%6A,q0!\$beLB=-rBhScY`0hsTXg[NMo?`?E0h*!2DEK9V)Kq%Xg,3%DU9f+F>[=*P<Bb1&5UD7R)R!dBTXV29i$qZ@!Wb]!dJ\k_%1Dtd@+rhP=*%6Ft(,_r5f.-BB[])b!kri0Y(?k$PT-\NuaTEE;:K;*R>sRg22\BL=(i+A:<Y7tLa1cM&<g+61Tg:MbW&#U;&jU-q%@ObFnL5lY"'=VO1k9-_-0&JIqO_$P8A6JF0,&sj]bZRs/;G9ORc\P@XVKk5J:33/jg.M4Im=JgPTHiW!N$Jh>491j-8k`'ETE>Hd%l:-M^O/5l62T@*]dKGESXKFb1Ve&;>-Ws1_Tc/eQ-peJ=g;p"ClMcT/k@U)df[*Od;N`qmaG0Nu=U%l?1oVn\?n#j($*#;F0aPUM%RgCQ'[j@<.Oi:.2=B:-;>'nKk7#fl5=Hs]_KJ]R'9`pqpkch40Bn>#rocn..&Q:.!WD!"(XDjI"<+.j[/sKsH2<!j.s"Mo95S:dm%'SB^K,+cSpAL*]LrjZ(:mD6TW/T_;n@*&^1<Ja<oiP%&'eQ+o4eS@iBfL[Ko^Y6$e#\W9&erA_b?a3o]+iG*c,lp;n^3)sm,V(QO%6Y"]W4BT(-;1#f5$+-EE2Bsqj3jFMZ[e?ctZVl\a)K"$CXUmuSj#YI-5pH[\AQ].Q`I=iDE\uJ_GS<>nRc^UY&CaedZWhUa/@pIS%0X`#2&9?g4[>Ei_AkNRp6">kbJf&;[5h%VEbAhBu1jbcDq8)g>o%KIOo=`]$-")beFUX%3eRCkJ9G84T'#FHl0fR-Li#j3N?r:*C%CJ#!SSX_.KmGiYJ`T!+)b$M>O!_OPd5U4BD2(-G-XDZs\n1au&.tgA_TVrm,IR;pa&dB)5]&D<ec`LZNj4;$<<ufGX1bqQdS#2!^%Y`+Afgf#J6m`Cb/*j_8jNPQiOLV%,.L@NnAU:?;l0_A8cbY2Ylol0)*mpP?RF3ZLPgJ]R+0o5Rlh(A+r'*/cdmZECeeKUg7o)NW#%"$fO+ha\Ld`Vg7(<A[,MTl8GR7'_>?)2K:MUT@_,s(O!MDBQs!&JtTXN6ip%H5VpBZAOJefb.1h_eGca-n19]`FC!Q$K@<VI#r[V%]Re!S&cG^WN2_'6&PoJO\/YK\fia@%(r9N(ST#&d1m+`b3HQ#il';gYMk]s>Dt9V/<!\5@!T:S#o-s%TMQ$m%NT(Ij#_*Hp!HDiB%=?(jjRq2[M;FFVA-KqV"Ulfb/.q(=G=Z%DA77:.#(3lLk9+22DD62i[19o(&=VH^r^l.%_-(k7`"U)pm*Re++UPXa<LR*dY2C?n*%#A7<l%@Yp==+QjqP3gH[O;\EX,lp'4qBh57LEOo8<eXB'MG:d#\7$ij<&UGdq;;JPm7$(\3N.hh%,WSq)bn>B9,aoT@0O,pDq&Bt%fXq9]R[!846/r,6,\)rmL8r$3#-F)&is:U0-n*NHi:<tWY<eZ`21ge0D*\j*CjN+DU*\CmUTMp+&.%h>_b\?G@mr9i_$FGfFqE0I%LW$;;R7/BRJKN#A5TZ*((5-TS4)@l:60r]]U]/sE"/e-=((Uti>+-!Lc-_jii?aV'@PE:hP*[XnbfS:843>L^I3?pZ<H:a<@5NN1%"GS_;$Uo'<^sE_PGNPm)`&>jb7N'PX8_ScuM^V^D]9JFS(`9kI(ue)%fBf-;G4>Qo'QVQ?/Sj6QlUeZ;"L#3mD+?a_8'OZ/Ufa@Z%U`h68,T@[9PiZjJJgU7'MnQ@3/Rngt(-RBKEp>V&]e;93cQUqSK=0b7!f"p)E"F8ahFS231W>"a_4"."kn]#mVS<R`IiI`$s#/O.%D6Wol@/$iAlt44EB>#5M+Ek_5S!1"+kJFLRSF.i?DWDcu;mL5FBZoo3ea1Q`3_4(6?p?A9ELp,qArgL!%=\8DU^*8*XJCFj2uudl%*=[kQ#^A&ug00=]7^7Z5fK,1>)NsI*B?"O0%@_uI7eM8>CKXB28kkO@,t8p#=jr<?phDZ_'Cd`T0(qJB;.>*6[4<CL+U8JJn7odl%k,b7c<Rk3e!XF#g0d>2V`;.c>RoJq[C<\0M0_\07)`APaU=Ef$!Y/I'e5pY<e)c:ZHG1,N*!@B&e#;n9dcq_'.h9@'@P6k3S.4J5%(/U)YiN3Snl[_Fa>_/j]KooK.Y6nDu&Y9VQVqD--1'j%mNrX8dkfSp.cJ(okkUOGC3@9K54#Bb[PrppA[ZY,(n@+ep>P'F[Ul\*r%/-j,o4#C-q!u$;([SYPj`0(uM1l*2]U)JT95ZnS!AG*kU,H1,NeB3\L(k<2p;XNC22'l5C<ucUFS6a8"iW,DqGN]/$i?m:!$bUut%,[\EG33jJ@KVem&759d1#<;H+T]%m/]p>>DT[l_uKP]4)=^TjFS6h%6*Nbk)5KT5)/?,0G4-nesi0t#S!hm]FShlKdXpor+i[:%N%:rs_F<)"bYJXQ+37Nh6k\mBk9,M57q@p%[1GUJ3k3:9PYi<g*'YYA#Va9>9N@hYQ"aA)1$j>8(uqo]tb$eCc@"E,J(NbKrPKgQ.`%aXONsN5N$>&LRu1!(Ym)qUWJr6*Mp"1'`]P[*/,E>fB%/KR&A/bj!$JQIUR]F5S<c'-hqY,gJEp(?imK5\NP^],tdO)+IL\Zh2&[%=L$Qc@mQE4-m$pIjB*]":D:@UZ.[(YUuVsI6mJO`AMPW$^dri1nH#3f5n_"ijcW9o0_pBHBIX2uKLG#.LcV#oZY]GHfZqDbF:%k'%0^5ga`*0[7.*X.hLT$U$&r0.Jpll[G(c0*lRY3gKOMN:"Uo&/l4ELZh0^5S[Z5RH,e66Dt?@ptc$t;2^gMfJ!pI.\0a.+jX&G%]:%#[C#<<r<J":)ar:/B:I.9i#N8TrUiG(SV;'W*jG"e,%Sq(W9AC\3<Wh&P>WhMB,dmE%5J\.,,)+ieLY^$,n*@BIRGKZNYVuMAg;,%(kkDA&8\nY:JcQD?".Rok^"8F)>4M2!^VoI[X'c:Ck)dQp!%mmB^k2F$(\tZE`t:(b-g$,k[@?47o]frYm=Rab$<#7'[`;/<g5d9%<_;^51a8P[O$\T0P^l'j588IQ;hSU[JSbBFAMoFs9FDD;6DBR(("BWjd>Aq8-H77HW?cL%oJ^qAYf:0!qMM'P_Fg+QiD9kZ=qH:L%2<>)nOj1GD%Ej&G+scEO(t/_u@)67qq%IS`+N7[$k?8HhpVl*oXR[X3"%:NL=9bqo;O>F)8I`B<6%-$g33TE,/_,;0,Jo_lja2Zp%-)[DIOB]n4X\j\.U[K=o$c^nZ3X@;+,:5qYPE%G;eQg.qQ44tV'A;%?g`hIAWJJ?N@NSL"VWOn>U4spmT9FV1X-?Uu3GW1J%e6W[%Lp4]e\XX)]cY6o;8O64p(<AsS_`tGr.jn:LWQ1$Yj.\8IG[/V:;TS:c^u0jGCafm-V%+`%Z^o%1S]%6eSIs)c%`'<KiqJr_`O933%G=Ls60*Y3?hatL/[[gHHecA>U_Tb=\NH7gmUkEs`Z$8H!)!u)^]23'AM+F:ME[o.0a\j&b8jmVf(>pLT%-h8\TJ`];Bi,754o'CY%0RfL]MN9m@Z9jdr4L5q5OH^nu2kh:c$BI&uT+X2uQW1]cK_%M/@l=eXb'4CXi48@-)hB1bZ,q;TN#XrF<LGV/'0Q\RVnrj]fu1E*%3HdtpJBUY5KUeee`tc"f#SY'Ifb#S>9%=1WCoh)DnKG,,*shpF[8j4,nY/"RRGhHB!qgn`LUs:03?XWEPNmq=L^91Y%`TUlK5oa&%J`J(\\kjX6:*<0I)<"sQ+LQ1W"K^]JTE^.MA@Dijjb&,NfI62SAuRi7%#e(>Y!h`X?VQDB+qmf=)'Yc;D*NE=&:)c#'dQ*b&ESn9%1kMo.A.mSra?*;B,Y&X+N2a2T@1CO_/i&]%8rb;#WDVYO2?R(aUTirXVZXiN.gdIK>NM)^,3->E6L^'Rb&JqN-:nIn7tV0HGpIYA%D9e=C\ghk>M$:\nFV<^#O_H%"a:Y^Lh0)Z7.7A7sFj\%Z,r^_XM3(7E`H.A4%a&3c@^euM')lWSMX4%FU@pksc)&W2]SPS?7<A*;%qnoU>g8\?I(*Q9`_6YUi-7;sQ#Xp[@rX:1\pdXU\8HOl:M$'8UChKffdL"Fcl8*fmFc_SK>H0MY*pMcXYo'>G2@:?*Qrc$CoPDMI%=6d<rF1%A\GSPYJVhf?qSG;'QSqFfnli\I]>`&7mlZ_h[nb6&R?(sAn7\m+N[E_]`_+Mmji^,4Z#IhQR%l7ZoEeOpT`8h8jh.#q]%mj/i0bh$"g6=^*SSFIS'CrHGcHCKeAVFH59Xk_$kN%qqb@TJcuPAo+:?n]Wp$is,g??)f<WQ=,0HiQYLK21#JP&g1M)IXKrY7^J8%A7Du_Zd/gA$$%Ls0@bBg3&Dj<Z4TVQ8\rJW.9[=]<:<A'&0hB]**3]FeoFWRW;B2IblmOB8G+&g/>r>$>T-qANH5Lg.&;_HHiubU%KL/8%ad%\.TGS"fW/ss$_'8%P5+b9+0q?nC)'!]h+V0HdJb&r6+Dk\S^KAmLAqcRCFFdrZ?.Q+Nk`oW:^2"4m5SP.d#)*OC.uhO&%^s!j?b8[].3A4J?2-)+]Ce`&q-+1XHSM3XF(s#)ce5"(^BHm3OGUlW7&FD,9O<H2d/Y`o;'T`MJMQ$nsWMLRD_UP)D-6XEuSFr&O%_[7L8eAOq0=J;dZ/NLq9_<72MEa0BAYL^6>dU=FK`M%5r(ILJo.&g8V#s\hgZLS9>hA\<[AQqcj-Hj5"Y_n5QJCCYhk=1'2\-$`>%,h&gB&&5=_n#8;=YSR2KehT2*ViqNAW:[LIfn#2\Z_a<NH`mTW6%?1@_+IF->%?49`8Za*O[*cd+@7f\'H=#R$5[\oSK%F9O>kIm%Q5W`CZ03ja#DPcL-+-7YH^UW3W3DR#'uL*1&2$T17M]c'7%&kjOP3r4[2j.f<=IJ'88(YpZgsSTIRo&P$U_@2?s\XE91Yf65_O/h%Y.@Yp&t5Zf.@OBkPXaC9+Jod;k-?*Y)GBQ-R`3Xsc#qOXXB90W`t!.L>3(i:Ter(V#nTNs)J<oLb:c1%bZX"BTg"o&<D0-Zj"N=7%dYf+B?qPK63^D-amg)8oIfs4e6Wl[R?,iV:"GsAe7&nBtWM6J2Rbn6j3g>JW5Dq]8d@ftIW.C\N\a18m>'Wig1-QE)86N67g%Q*e%:$0TLX@j0Y74"L%@^TV!OHL$rP`rAkUD9Sp,7F6Nf*A=E9'2Yia>s]qGSDomiYIW&e>3q>Z4F0IO\67'-N^o)WLYkH.PGg9Zm</c%4JW)d.YgE!Z&g5Q)J89',D(Ga6&pZb^kH"tLn`.g3=;I8)d[p"BZs6"`__1[^]J[uUS6+T,t-Q,7mO"`-)"Y*/')e1Fasp!J/,Hl%XN#"m+>$h-d\diS>pWK8Ki&!j^U7*uC]L.V`N,F2C8BB-X)]bj$rIrWQ`36Fd7lnXbF7VY&NVM2&NkCLfdg90j^4*R=@7ia?fF:1%K.a2$c9$lbR:Q8tW^S[2!VoP#[TUZWD"hD(j%=pg^#P>_@:*7[=j!juM?q0eI?D=GE\Nl=#nuQ\6"A.[=6;/nS-p<&7uarX.kiZD%_l)G[(4shr6W4+rDMUWLf\XE$4$puaqC&kZKT`"5&rqXb)JV&=&52t.`t<DumYHcMM.mWKTH)ELD-iquUdUHt'K[Q`EYU&XHS0R%%+OA^lN%XYXGlWWP"?pUgP[Jo<f=i)ZTZHqd/OJs2M%n+T-#8XAqrU>s5\1c_7>]E.j:q_KL`=<RJt-UnP2J"#8@Uh:^rbYQ#78^)%7s7a^f;r]/O'C#LT`f/-E5R5C'%Hu2>WEN4:d_Y0Tal?EPMC,K2B'!#5F[)-Y'pot_1';COrgp\V=4`N$mUfJE3W^uqZguVH6M5Q%ib"mC,HU^7'spt<bK"D4/M$0?Lm3ML)Q/GC-k\(r6+N;Fj`Jq.mI`%[lL(ZUgT1AnA;mN<q?jS4W>Z#mjF]-qfV?,rQQq_@GSeUo%9;=j&!Ko!+KIg3b7l+76e3K0BRD,VWS/oKY%/jW_o3Bq`l7"R$)!&4AR#hfPh,"s6,Z2N?ZB9'a4g#]p;F*""HXI:WC`I]A5Y>$C%QS`M2c5`6#UOq#')SdDfd6-tP#"1.%>%,#k,ac+^1eaE*Z77"XH7p!dcn)T;O;hPJQkU6XWVGkkV@oq8#hFnRaMO2l;%ISF@ebmM%7'UCEZ5"<jJ>c6gYhPt>7PCV`1hO8X0E>R<Zka@I\d8uY"NaH4*[WNM/qr;_[NcJ2o83p3i<rC5OTU56/9^[:,hH:\RA9<ad#]MZ%JR>ktb:mCq8pLkVdj0BN!]42XA,16iCl1Ro>7tl5N(>^i+!$L-Qs)g`*T!Tj@T@H+,mqP!C`sU>6mfan]./qQ?:#STC/T9d^>g]B%P#Dd-,_GM;.W*e#3t1GO*'U*\`))?>omuEX>,7M-Gskad:q4@34!c(Y,-\HJiYTQi+/IX_ZmLfgK?6(bU4d1@M?CfTY8=rm6rC%a%M686o,$$L!q9SC0[]'*BU;TI**sh0k**+D3_XPlCV9P]GKG4X#q)*2qQ5\kAdEQG__VACQP7'7#KrZN9)i\g9E;1Qmm%fk06MfUr%P6413/BK'\0Z%Vp>pV.,+BGdWhlu4/2U[G43\]S,<J^K)+SqCF]n40U,!LPoi%]#3\5)hc.h1`!V.^U4/Q_@,UN[]8K17;6b)IiC%@pQ0NQ>:?B+,ADMpGji22?_.27hi#)fMLgB;m(rb)bZG[4LgP;CN>6PF,Xt+*RJ%N48pcIg<B[:5]Q`b^]c*0MjiP)S]NZOgk=t+%Q%#;TD029N[OQis<`8Q$#94-W=p?U\b:A1K(7<f@(mUQ+r6drXj!BLj+J<RR3sGa*WQ0`KkB4b;V@]aQ\09:k<$4hM&&S2WP)]\Y%Ot-tYY&%#m_fP'ZR'*O<67N7f&\4/Y>1&RJ*%>jEG2>NIl+.WC##i,\?6tGLjoN+W_BW"cR9SG^N@i-%`:"!c;5nhq$:5"`=VXl?%9:FaI@BD7^M`ui".\Kt:56hLeOt(Z.=ad"L%rVc,K\41R9pt*3WHX76P3bEqn9cmfJ!Q'D06gPfil8JZ)V7;c+i-"=N-N'=a$pB/%f0M5?PrpPJ]V^u@`rL?/MAFgU:/XcX/"T<W322;E]PW'/V+*kJ'/:q/G!D?e@'^+)s$>r,J2^J7rR?)C5Q]!AhFQMPaF2LUX`?qL%Lqt\m#mN],6rr-]E:->!QHP#)DBraFO6iYfZ4kAC<99Ma3"]^%<0id)\fg[j-$@&fMe3ObP'V3>dZ01tQ1HJP_W)i:2A$&-=`KHr%L!H`TJtP)CXk6h&"e_8?VG\\E=p6!TZ`7Ti\^X`!.MaKGGc^8bZ?\#;q,R&?(<T&F!VQiUQ\npNWt>>;?4UKfYf.,@la#72V%PM7%>AEW7d@..r??-KXIa#?B,\ab?RY,7/ZRi5C^/a=T3GbE$@>L]0[E8mD$"E&6Bf]BJ'PB;1&TVgt-YrpN3-;\H@\\Fgjs2\l_Ped>%'mUqm/0.e4iq]:J#qLT4d:]$-F!^FD=:.db?jRPH<t,jTULen85g3KWQX"d*^\;4!(L;`+Hr32[4-k*n)Am;/PJ]7iK2d.`1J'[&%=2F#Hl7,DuM[l3fR1W%pOY]G,W_7$5a&=If=)$@p2hilqKe^)L..hZBO\T6"el3%?A3NlL#a&*p%p@/r!.!.IT]CHjb"BCC=ojQb%NO'KU0JS3Bg.PZU-XXuZBrm?uD<,?.e-oc-!>'3p!J*,CU@3F%KWq@D?$RFDX"gi'ah`kl,:7C5M^:jKcOi#YXk&n3;$T@FR\&I\%k*Z<l]pNj0Ne!SG;(miU8Vg.T2@8Pdd%"Ig"4N&@`$>`3_;d"=K&(CS6mkL4E1t!@?/i0qL+>Yqf+R#49+E3dX/$Le)HDh&+4_Ij%-%dV+PJ@o^fpZ"dTWa_Qj>e)7k2I"sOtEi1)5\1!%Sfb?Qp]]kg)"ZE-_*g@LX]"->Ee2TZ\)IK1E>R9816;_%1Q6GREJ03/B/ZY%Hde;%#k*aTaZsft7QoL8G_-'-[9S3ICd,:SC!Ea#C$n8kD8iH0fJfiH/rnM*d[6i'/6hPLE%Q=;qBB;`@W_ub<XIT'+q!%i>$cos%^_LXM((D.-&^"68p1Nn"E@!TLV[i2%jTK<UjraoWMrb?k[OW*!HnM*=8I-#3k#'STr4?^e!D5p=,$T"SnV=A=*e._`UW<QDi@fYk%+E+WgMHADC>_@ZifP9hdmF;"<F,:$@HZ<dkUXpF1h!EO9L<O9:q*8G(dMg5H#WA:g`]*"DXjTNmK2O78ZXe0!1Hua"'MRp+NL%hB%$/Y/Vf'81s?ZWQ1`N/8RN[$ibD:ZKO$dpH"J>?&&`KqueDNpM11tI:KM>=uO0(Qpl2`cq581[>G/+HR:4p^3.`b>&B&-e-jTHfY>%V(Rio$n#s=jLe'S+0%'r@Gd,hV#4d1dMBWoDmQZHh=ID:gg&H*F(Y@iBt.>_(BPf(1#+1NT\O3+lr<gr)*mh*qZfU8R]h6=]af"/%"_VF=44Kn(IPOQBKU$N>D_'f(<l2VRKR[24s0`R>D'f)^<l/!"JLDh.'8OnT$9Tg(91UM$%U!3[!gno_-,dV.3$97n(C%^+2o'RG%-.O%,*bu[=WS5Ml<<*K#FabP_,cq(j2;FSa`ZuD2\FS#EJ1Q]6!YtnT[$=QM//R0.9RT#f;5ZP183-RFN0LZ3FY1R6@?-Rbk\t]K%loQERc3QsL_hp%mGJq:N/OccU+>5Ac!C$neLho)nRL1)]#nTNlD5B8A:]^3Y;3j\qO^*uI9#:#_HX>r4OGAnDaNrN.#+.+9;'Dct%C[c<#.[2JHI]O?n#:*iAdu^sER>%-aCVh^=35KkH#VhSq_uN@SC6=#X1uAcl+^.ZlD%)+J$<r=V9J=gq0)J//XX46uY&.bUhs4dN%[0E3H%aUH(D(nh?=@BGsA3.02Y)5oN;&a0Y-ugD1%^J8A&bW\//sDqCKXhYa,RgENO\cf)qco'W<t/ns)_!2]>c"I-P!><,QDd*:%:;gZVU`bha(s+=JJ^h+>Qj\kW'$pPK.kuO7bUU.jUa::u/dOYLqW\XD3,8!\lEu:jUZduBoE6GZ;RiR;i59?4`OQK-ET6`CnN<74%UKi^Z*[n8`e;?(M1Z?6o#\IXcbmu*mjW`=[jN2;85po5?JS5\W[a;MC(OmSHe5esNE9YMY1hNQcO1[n1#EZ8mIt504%9R/b<2jg?%E92kY\73./W,0<co-,!q(\=B;9@RcA!1(cK[[^92Xo2UATB$16V1MnFAZ_3FamC;6ZVf,.iAsTR&n3%`epJ3O^+9KBMXBM#/A+`L%&4%Ea=!$GuXggc,haBZ2bR\J'2^86bj8A"aB5W>hJ^5%q^'8UEoJE#EcNQ*Mif_dB95oWM.d$4rIPZ>8k4J+5mcKB/W<l)@?Cl3!%63b;@q7ssAJiY:M-jkb(MM?`HTdlAl,`b3^=c!<_E\W$nWJ$h=XLXS'PhtSj[9SuI>H;J%*./^Ueu6`[/1QORO'`$$Z\<$BZ\64@%mn'/tfV7-Ypp.nE+m>sZ)Ocm+(qf[_(_npdQ`Yah^\mSkeBA=I#7E9.`c,lLHrOE/]S[q[,rV*J"Geso6<jp4+>dCu?asdqTf'c_%S=7([3h#mW&kl55/4Q<;Y>m6>LkR6"BelS-+RiF&8XLo?,U%8kjDt>dM.!Hq>b!'\E.iG$<6SO;YJI)aV0T*V4+#,T_?!br2VMW)%23L[lS9o83_C029C?ei'WE[Ie_R]T)CC,hX#A$]L$t"'pYlqc1Ru+EQK]T`WMO/+,gHj_f@1,#A9jD`^MWYd@B8m\NK0M!C@OOt;%O7OQhMFA0"?q))p)ST#]/8B>h#*<RH0JqAY4?XK?YYc<kUkDAi"4MqpCFC1;R&3>*bAVbi!?j&%_^]N_"$lXj4NG?W9U*7g$aqRj%pGa?TF+i]?*iX52PRTX-`2fdIMa*Qk%C29FaVZmt%/A\>&4J6pknBuh8BF0M8&aT;FQT6*IK^jbBZB)5[3uYRl63/&:eN;^7)3Qu%^5Z=\#B!mCGtTQ6+Q\c*p-P@4!%PtX,DnENm1E<`P?aHqKkRRu^of7<$O#9=(]4tg0@U@[&$<)@Sk<93<t2AdPQ=T"KY\%!5,o^?%,:;lc,"#QSbE5FaPUHG).62*s"-g?#D9;s<&NQ6V8@deul2^<YQcJ6]YIC<F=HL0g.:^nkZ=-%jTB"WS<B1'Q^FIbi_+D&0W("<8%WIrb_Whm"O^/#l/6Xg6B"2G0T3<GQ_ji!mL7tS0C<ZC"T;J&];!jI7pel*W??g*bqAB]-Qr)2QF8Oo+n9FP-#*0$)ecg"d+h*c(:%i6NO4/>--k'F;i,)sLJA1XQ^8iTt7QL9[($DOdLB%0JfTpStM#i^cGA<hsA+0k<IsZ^d#Y."*9UQAm.ec:X5'j<V_KmuN&o/rH;?%ZpGLjkb<ap94>>4cBen\,F9e]WKIQS,$MN6M@,0HIX_3\_`WOt5;&^D7"0#oPTi^cF3lTWMb@5AO(4Vg8_=64Cl*%3Ha_4m16seo%\t>KYSOt_+jJ5\ET54<Y.%hP/f@E7OLDLF'.o;=?%?O&XDo'=6LK[Y<IoM,ehbB>+)5M/lXrrp?*Yj.b:mD8.ki,Tt7et!.f?=^i%NjKBKF6$4HXB.n;D?q`ORum<WfNm/MXCm`jk=:S$\$"hHA2]*$/^9&YFIUd7JE1ccL0kN=:YFNs2CC$6)SAlu67=_W7"I\d#k7r6%aH&WnFUWC.=]XV#@pJL7B!f.83gB-L>.jqP5]_Lc>+VdFa\C315e[?8,/[G0H(oEu6Ui69ih&o=L;rTI;.SGo]<sN:VfIq2>mX:,%Quaq]Gd)*9`Q?jQ*7H,BIMf/RYfo#17Y79%bU1FE6Oa1GN=nGdlQe8".ZqA.LF5<r+s8B@=X1ZM'FYclk(I/gap-LdD$j!s!)]r0%=<)*(r9U$5*#C[.R_gRt%rc$D=,MadTh`MXJ=]Zg/N&e@g%WX%!*>I#%KLHY<VbQ_9FAj3\7.*FE7/N%3RmdWqPL2I>'^nOYH'4s%Dh7dpI5P@/"E4X9JmK2T)J1L^3!.f=hKDq9lr#5`Z@L5cGu6>#?>&6V(p#Dl/1iPKi7_aGm2(&IZ7'N]/EB@&N7o"Z_KpH4(L&pI%MH.3(eGDf@A%;4^g2+[(]O=SSQb8NnUMS3*@\-h*TdgcWlT1889f4>s-lMDgLIb<G&b!f:TIN#Nn]GC`aGX:4'QqbR+'"J@Vq+Bq%R/IDNoRIKg*b"'^Z&ZM;+B_"r>aAuRH]TErj^:u?7)1(m_9+9*7sb?#9GQ"G6%C\d"stga!-WlI8ZJ3;6u!hY>;+NoO,'g,YXbsi%-G:f[E6[^6jLcn['epth1'm<@VCG2Dic>suKKV[F&k@/!X%*QY,"%!@I)Z-#]l2Sd--;2EK)6(dR14^bq"q=lMA.2+!,<Y`R[#S:%*)Zi_8ReWl^qZ5*ff:+9R8M3MG$K#TY^=b$lV((b%t>Q`%l9*n24nI"I03g3;XHX-((Ps&1lOl"g6a8oI7*`W-KA_*dPf(r6$F*'%;DMDu#HYYA.Bg(AAAQ&1cT#c('S)hWHHC;g[q%F(YTO^fEPPgOiBRs$j^8O*o#ou]odk0\,-$<30M'DsW61b:&J:O(%1Kos,=GZr%n%_22+WkMY,n8p)=rB0tD'W!d_5A6!oH>?L.N/<_6qD4Y22&@Q#_jm)7-O$Sc]N5@B5L52M?@%rNVl%b#[g+GRY?"4])KcEK5h-/%p=8g7V=Ygd?K`4q>&e#BF(bH^2EFZ$JjMHWG0nJ@ksKZ%cMr#<\a_eZS6/UFb/6E$_9D[<fVW6A2C`_YN%RU/Q[bR3j7"ZP(Td.m%La`IAO!Y_pVHb;;Yb<b\9kPIn(EpN=1Wq[F$bq5@E6U[k!1@$[_ic'@<O7Z?n@GN*/epIr1'8A<<\RETO:*h:YfJWBP0N6P!2]fH%>f+(gET)J8#OW]g$$W_MlqLPBchpV0@P6[9.'@eS7lqe-Fd>q/jd8kR&hgAF.h#f>ST%i%Z37bc5c+<6Co:Z2R]8jIqZm`]WMM>I%6=q?$TEoBZq^Kh_7M7l;Al(sm*uAk/.)q&Z>bYhQB0*@#-V12CaBuj5*[W4g$N4irU6Bkk*MY<J2B(C;WN&/W^9BPlV_rFb`fHV_%bO#6'`,0Jkod@NS'&W]T96eq#OoMSlJj0G;pOE$['gTZZkq^h5)3oOXi4XWN#ciB$q()Mi)61<)l62@(fiSMHcmk*)BGu8FJBnA>%Kl!FB;fjtgESWD;jY_do#q%mb.F@qYr0SH%32;TWjfDfPReR"L[;gZ)G_uH-]r"$iYF'YV2pb#)V+0_Z'T$*SAd#Isr:'dQ'bnpl%UQJ@1;^6dgnNqaSB"JaS?GOm>E=d6prHLU#At%5FO![&AO#Hd[BCddjrTW3\#`t$37;,;*_Ni"_@F46DZ3JOms#D3r*KNF0W'S^3%2'BS(_t]^a&\9rL*;t+M_<2+po#G5RT>8&JSA:gW,anomZo)qVP_,AB3]inGB-N5Us%\sGlmm*5j^)9u[Gh;P/.Pkj$p+7TJ0Io&%e\N>g9md!aD1(J&om['N_#!&rBkT#u@jdFk-mKB.VKdb\LXaN;h[5g,9Tl+U7^0R+->f$0!!Wl;q;.49#VPUb$SFE!/D<Ch$M[TP%.u#0nfu_+T%9[<Y8n$3R3AISmMl&^&:%%&,@ThPP/%:R5rc$Iu!X<3s/fS[KKQs>oC[dl;+0m2Q91*nNSfX0Lb:"ha""[%n_#noD%T84rs\TYW)//Uu.`cm)<bHbs9-m[EDApap:Y1K?jg\\Rt,o&qN!G!U^cVBq0];U2sYlI)(Dn48+G(m?3H4Wn"`;UrP$g`Zkf8jq#%i1>.,0),En"rCl&jCK_sT"GnHQK^)'*KC.109Tg8(K2F-UP9RSjYWu)<'.I\R1ij]SA^)ZS`crhekX>!:;kuLj1=X4TD>k>f(;6F%N.N!fU[k\uYqK",iJL8P'W40P=DJfXOi4K!/BR4?K5eV:8OG?:*X`r!,EL10h8mWZgY1d>;Q8<he[9#D0(LDef+\;T+Q*atkl0:d%;QY<Vo!kpYRA>0)\_E?=O+qggNX?H1>%3#!^4Nmbc/8\9JO%;(N\_#$a>,m01Ii7q[@n`<4?e`TX&:u<5(48537Vf8>!7N'!4m<G%]=/k8YWWjhdC(&_J1N+*Q1*+H^E1=+gIJ=0d=PZkiT/3d$S[RJ%nC4$D=HQt,^$`d<Mp$bJ\?oT\t8E+lsNt#/P9?OZW*]S*IEN@%m8C<D"`g'Vcf*^$a*$.*p'$Hfh52FM<Wd[P1*S7M56C0^p(KG>,'JG!k5f's084'0,E0lnSMCSCm[mPC1M4Ss'2aGq.Ko(KAmA^?%ZcEjf,2h+U5(M2d9W8,C(m9ft\=.,rK:L`1f7lgl?!52]:WRZ'(jrO)$O'G++<,3=)%g[[bnq-3(40de[+%)A,o`>I_&lH,0&SS)%*ZOnXhMqGt-"N3^L-\UGK7!p%-9So"qd4p]c2""q3nk]][HhfFA?tlddh[4H?-dW.bl+d%Wf'jB;fjtgES[pt.X::^3`\<?e(b#G%+.J,`>W$.*]*V!+HufhS4CHa'or5KJL-^="-4PsnfoL4jI.mAe3X*g6S\ekn+$U,#c`CB)UX:l2*I.U)L*)02i[M#h`BV/f=SpjU%r^5TLOVA97m+%3CnAbXTj9L>V4rtX<"?n^6agML:pW6aeS2ei8T7!D)3Rpff,96'Bp5Vcgd3p(>[Eg_tFke=9A"sQ5%`YLAdS"\k%n8[-ac,2pa9?LfgeK.efLknAWDZF\-FT.UIA\iP=kp^34P4)2VNP>d!&ei'4+ON!t"*5R0Y\H+PB$D2_VC@P]Aa)f+k@'63Nf).p%B$-.3frX+.IVeWb=pNEX"5_l4G_,80.^D]gIN4#56*5GSYkRI'I%4J$9Idu?O!WD>S+Z.T:+G/a:bsXWIgWVR5-EX0ruXGNM[t+5%*oYQl4#QUIClNgI[sbM,s!=-c69-i>G45jbkI1\`%-YdAij(oK/]H&ph8mWZgKK<s$9NNPAK9(I41am^3e)/Ho,ns(&1-!VG'*?Z%Z_CThWs9>*&=ejpC6-ok[fMcQQR=8a=@dD0KK^GA._Xm5f]X4&mphY*k]oFrT&F<"aQUp>-4YQpYS?d"VDELL59=7oh3>!,3Ap@6%Ho1E?H)(*?OCC_!"URjGlcM3'jImF:^u=tULO;kCId=AtoNL["mqlJ&r:U7l.WZWG1SPS`Gk$2Pea`e#M,B/*KBl5S3\_n3]jXUZ%"p'CI+.?kR)ikNEFiLLe?b`,Y9(`77Rn<6i(,R;<noqa&'cBMoFc;V^[]'94e;b7j[nC"'`p#kb*IRnXn?<CPI!HQrh8FREGqXQW%*,O#OYDMYuI^lZb2tNc1g&+h)(.gS?(>nHV+`(U3"/jb+<Ej&P%k[:p%l6BHecU00^b`X\+M_lY@_Y4IGaaWKnH-7<jObP\+KE%c%[G5%0rmLssrtkIVX]]Np\YJ^_jnY)S.J0I/^eC(S6J`Pl0bMZf]O%BB`#1[+IY2"hd&O)WfJ&#kd)roL#>i1M^4$9+CL!@VgUYR[%C_l:ISUQ'@?b`-.H@5Ga<8QoZo/lhf9``6CX9gAf,I!PWZ)S\P,cBsN25b^_SE>X]=##_1Wlo$%ofp6r)3@CBHAB^TL^=Z%<+b-W%L-F!EK,@`:\1#[K_q\C`F9oS-8'HG^l^%j$9sBJ\oq>5`@)p=F2[oN/VlokDc]@-]?9Z(mp=Y@bHRgbRlR#k>^5iU^?@>-ZeP^2F%d#AgM*kEG1Z[$NMk<KQDC5Y>Ye*&u!pL0pu^.Aj?6[%PnBL318CR3'4M7?X.gl9"=<e;%e23YpWg'i@1=E,h*Ota0j/6nB<=MA3q%Xgd*hPGf-`Fa*@.dNMU7)'IN[Xh&BY\1El0U_%hk;'3t(TgWfFl5f1c:e\:l.!1.q.J2/D_G*;Shng@5Q&gR)bc=$>PbORuX4bir%6mA@C^p:/pQm3>:/5-O,&2fNnMo$W:F89jJ;l`$lL:XA*GJ48NCTJ\gD:32U.^-k6VaK0ES&0"TlS"pBA?%2B04!ls5f6,46@.le%E!YB6c`3>oqaDi6!"!Ei#H72TO9p_s8M<$W4%J+:S]<h4gI6\^Y[;-r):,6jf!1r.VR1X0WOA57IUi)o$3dTtn]JLJfVl1PG'^R_%d?4u9_@HZK^XHhXObm-Dd[9V'b#!&Y)s-V4aSL7r1$PB;%IHpp+Q.FHq%!m!:gpTWOWS(f<uZF\N;G<=W]*Z'O$mX;fYO]1/;QRA%A!MuWQ-NbY,UcirkS*,@[;Q/!hBm7RX'YAt]N_hc#Sr]"67>A>1PCZqrn%m1&s\71WL;+UQ)dfQ[AhMH.2O#2g,`:&lCnCg3m_VU%.cC4:Y?T*mIUVVm2b&:_Rknar11Sd>Y(<)M<;5-dA;gg$>YP.O-mf"IH(q=S:Ebi==B)ea]h6_!\/<uT-c0RiBPU`$:a-iC.YE"(%6uC$/o&EdAo/GP=R_*PX:,Jru"R$?)c-Zc6So6Y"7NDEuf)Y9)D0affU$0cqMB\c"DhQa3X/9eR&0707QbbNgYUie5$W4F4B8O.H%`:!<28O!&0!iVHn:K(184'Zp5?m@@U5H`bTl!]mcN'_f(?`S&+qSY\&[uDkc#A=g8JY"3/WM,:omQ#X8l0rcCpN;roWc'*AAEH+'%9b!k@_!22M\lD$+Rd]=N7ObZ3T*^;3n5IN>FW*jSdX"aE9&BUg6r[Y:;?&EBK%fX"[)oQ1VWoopJdV.2laH7$Co@`BrgX1_&q(tH%g*IABY`1Oh\+C;p1)/5&Uu^YN*Hg_Zh>>21r*.nSF&r,$2o3mp[PK-'ZYNCdeo`?&Wl(U/UQJtprS$sn@h#,AmGq*#WO@ja?`+pC%jsj?OVCCr-(<grg:3G7#@0`DD^2L6^"@A_AN?emO8$X5mGI]:5+aEca;sMZ^.,FU2f;A!UCS(5DTchIHm=!AT(C92sDF5rtlJ_fq%09#Q72,^9>@rQJ`\aB9K)]=@`\_-Tm)K(db9.l\sYmmJ6HMcpaa:=PEO2FG'DSNW.?b`L3/:k-[)W)NQ7)NM!@*N/Zl)E)EF<[sm%SO'?3M2l1P^_]`&f53LRFLtN,)K"tCRZ'0d1,P!6gtL>4D&T2C6Mq@/_ajU#l.aIkhs55pP1:i,85s2<UiNe&L&5WlgBt2B<5R>b%MN(IY,1PMYBlqbpSVOlJVET*KTVS\25:J5e@&8SC@:Jrj]W%.8T!:<Rh"7/XjfIG`7g8g$$7#Ea67s4c%ZX8^9Zic?SKnK)D^Lq6%2UuTtG93/X,QZJ>nKX7I*kNfAm?#ucL>uqWk9)8qN=9#,(N&%ihSE6%VLEE,o->Y;6iuejNC+IQ]-MK<6eKH>b_N'D36[]O[dQ=9%V<heg(I'agfIkO51?UPaE.-P]D[mTD>[eqlYIl]?Vh("!93so?<@"Dq@0K$*_pr?*K"'3B3gWjPa#Zc!TShI)3;hS&SRW\?mFH)8%q2m\4*BiW.-uP^m$!@XRe);('B.Uan?pD,KVhp!dDmkY"]J851a_#Tn&WW64P!o1S.1BVi.4>d_8?JKAkGI^T:u[QkVm`W:G::HB%`h)tY35hmLoIs*.fXtKA\O$#EoUQ1YW?R4Rruh)3K&F>fFMQ;KPH;n40VF\IlP(np.OGhqqql24GM4Ftr?XatH"N^;3tTr+m%Z.q%3h_=W&lkBu2L9NCjLOODkZ<@OKs&j,7<pqV#9YNOYf][&[t(U'+b1e&T*6UNG&9&j,2N'J]8X\/QLB,+BNlA6lZ<moqD\("ME&]8%iLLH.g96'l7E'[UF3#a-!5C@=?a#UM@@AC=BH#H=aqi21bJsTB:0mW<`LRN@>>uk@YjNN5D;Wo_=P5/mXsfn__r_41ML46b3murR%lqW%3b`NO:"K7(i>TJ92qS$hX6p!h,4-VsgDSn\UG?hsBY&HYl_k;H#`Vm_dPQTM0q5W]V\deWjH2UR?gbh[g:t3s&-HQj;]t08d%S4t)?UY,iB\9E_#Rf4?E+=s4$KYN*6]u?=NbIUAF)I"O4i*rCZ5`NkMl`c29jr&Vcqp+lfZR0boM2%%?/AuGMOb@B@p"=^9JptNW%#NR<XKbNh2F3Ad1c5C0M+e(Obl)W;%/qe)X2/943r4l$opZh*+7L9P0T,YMNe!:o_m_hX&*o?-p2AP0_I;R7fS7]+rbl]NU]&O+j%DEg(.kE_::XWXFapYoBa=<9@_][nkees;EgH1X.PGeh@co%`l.>=o4Hn)'p9qW8sf2E#sL.;@G4=\5nX%oXB&3'-ump@gLL]#5tT%,1UNG14?V6[<7A>"#52?+-$2b&%.P"8Gf%;Vl&q;?GLJ)_Y",5VUX,_0%"Hi<?MfsD/NfkKj\dRX/b.&NsAo0IW#%sITIueJts0P%7FCr@(+mq-&l."rLq"k)Y"4gpMpR>&A](c7r7q!or@V<i$u%%K.H$%*@@+MS=?Q\9DAMJQT<'56#N89`85X>B%R7FNB>:56PmbZb%@a*]t.,l>bah)C`[IAF+A@"7jk[UBmHDdAS^9?"]QVuRK#dmS:C+\!M^c$RBEC7+Ji.4H`)tK%^?Sf&KqV:`;0jB_o.1nZ:C-hW'%gIb9CNSmcaI85n\'f%88kmML%>3Q3>D>VV,7F\=@d1J')g:!.i4!rU(6h#/4[h8R3oPTF"dY?5*T:3K8=399!5#P+8?)8h#iI[+r%-)h6YO9s_>7fr[siOIk0[dRIl@[LNsh]HY-8V3:t%s7U+/6,m`Hq:0[UF<%b?q6h-^2n;fX@!FbSFGLlip8"\.(K06,kF3-OT!hL%:gcu+J&5VTr7q!orME>X>R7iUL@3?D.IJ%hG$iPIWV'[RL\U;"f&]1&-K-WuIW#"oRk7<W.*h0CZ;#W*;'amO!8E_[e8stgTX8<0%*lk&rm=K1n^M*MQf0CXLmM<r1[#4fOHCkfh$(EBLi6lGV6n4QA!(]>Y">@TO4u[ms[s>`&Am9A8YQU$mW*IPS9aJ]8Q1"nZV'R3b%"S1l03r%M$ID$+'rfLd>4\]^B\2BgbX]=iljt._&/A?^*qV9(!"o:EcgV1#ObD:?%U0FDp*K6.p0R.oYK;aW7Toa2YCD\$-b0(H'%]\h%Phpu_UO>S:+EQgW%-l^b%.9Nob+B)0:I\7tB>o66?W=IOjTB<-;mp`aK8h"LqQlIiM]dS5HDV3P!)Sd4anc;FY[V?BTon<ZR%a]qnahmojW#sc>hLi2Cm1mPq^d-9?r-<l5_Tc:S6^>6H\\=_ookrZA>h!@MW^q/6I>;9GF_P_5s=nXho6=TX/,l(&KdMVqmDYq]_%>-%@.XM30';J1E.D1Pkk'AsaEVK]>p]'1uI/a&&#mp)OAN"csT-q]/XBHdJ1p[W,H)oda\>DC;`,hbC2nC$ZO4W^7r9kJDKpJ4&V%`WYr;b8T^YL=NsIFQD!L[uS?K`<X7i_p<1LGIrQU>&g0*2cDkk83TU_O0BT?J1W\m#"j"C!6B!*2J;<ZQ$UjOD=:n0ZT"@ndEM]r%bZsWep'kYgTd,@JV].%lAXcVS?,Zn()ucT!qtf-f$>&?'Wdr`?-ncXGRHoChOD&$77^Hqoi1ea.9/pha\a;KUSOCq.W-2\h\#>=M%Ga@8uo*".%ff^k9I/r2k'P!_BhiD*u^9?G(F4rL2Unt]\l`/_\mZs.Z8Z:Un'hc5*)emk*Fo1O5l2/':!fh*j7B;_?'WIQ@2seur%\[]*,+a@er/amMTD:l\fQG8@>!oDS/.=eMs]s3*(];5t[LD$S<RN*Bd*-Z?:8bbU@Z*?F#IHSUJ@W5g&i4<k*Nck5"6C)O9;VZ6&%0f#29LiB]@NI&'@S%`rl1@`;a$d\=#\BV)0MK&-'-(2Iq[-W_.9&Z'WEPlB)>Vpllnf4L:F2_&#,H:"p#(;f$p1rD1a`fn$LY;bN%MtXF;48U"dr56l^nglec8_IMRfTZ(re/EF76^NCCKb2VS%ei!X_`YDVkFRikf%=MXeYWU70'5Q1>Z#c)./s\0U?TR#67?*<aXrs!%)/!#fIok*Q`Op=MpF_\0Zq`Df!DQ/s$,i,4MFb8p6j6fc.b*\#DlH43jT<0)I9V_/6#)9_h+mo$'rBgn/?,C8q93]cXN.U$BLI0K%hl!BbB`#5eB3a>LqbTOmWIDbAlf/D'#e&G].bf-iLRrjZ-esTscV<<Km=m,f4kc3mLs42@KDsX>./%4D:D9lMG.DKKid'=_D;Wr`%0_a?$&9RP`\=#ldcL?TsPKL]_(qn:*2):>_$]jdug\:BQ_JshcTSC'.6-_Qd;.]:i#*VcP"kVCehV%>sg@4JKb\(LOb!k5BOuPgA%5No&PR&:6pnE=5QN"T.Mi-JcK1!Gb0]&k'MM?flL6Fm1JYUh+6.'mkZFiUB1e>^X(Vdci>:_5-</6aXF[J?.+G8lj`HdVJ&:MFD4%"\PhJ]YJ:qO;f\c;&q9)&r#NS_&6tfg-#Amj28JO"XA@:X22Dsc7u^9+M.lSTulT=E5/]k6c.Q-0A=,nJJj-nia?0K@4*c'H%N`e%W0%@WWY@!)]An#"#HC]%X/>@0Ef[Q>FLsnMjkT7a".6.K_%Y%oT')+X>.JGki7GF+XPmiU,dXq%ImJl;Su.?GP<cWV8U9Lpcq'^W%bT;*k(N&'\n*6XTf!HpEOL_(NbNTfZN;>dc["fefedj&W-W>m4VWRPkg%9^+7S`O%[Wqp!oN4P[GPXn^#ulhH:$t!l5NL.tI)%e?%0A=.dRY-a*)OPT\Og63ohpY@RQqSG_h!<)+C]i_9S/Y5JD858Bn*B`6B)bTIlU@D*a*pD?<#'2qW3IoC=NEfh?f7u;jJJ]@'Gu>q%V-SC'`MW.u(Ot@oLjSq;Fm%%RKl\At;XmA33itFq0sZ8DB$;r'd$s57_RO:T``!soOIZG@lg@2VRF0b3UJ(r(rM6TuaNU/3,4cn'%E)N7*JdXl&Oo>Lp:04(QP'EHgDT+JK]&86nE*`Z]8;LTUgu15d$`+a,#VH0o:BG#;DYqfFGZ-1j7/1qV\;:\KbT06'aq8*bMH^(^%:ea:ZO;`#KauDbUM4`$UWobUqdQ'M%Y'\Fj>-`GS"Z6UrUBeIb)eX`PeT9,'TUJ[cW&u%iD-!nGP/]k.+M1\\Ssm/Y#8s8oUmZ<a%X7csGM@@3TPj_4Pp]hS,KaouS0Zh#ljo5pUAIF19/Dc2AW8?eI)h>JpEs;]*@!na@bbA,d+IpNc\XWuphgNaec(Db\@5>`/iFV$7%/*dDP4f1+DO<HA=%H/#%rk8V.1E"n#ksW6Q87]@`ifQje%=f3kTY1G"CbCW<i7PG^WCSP"YS#tZIWj;/7WUNrr4E,nZS*7=Pb,kZ%MIpMdZ-XmITBqO2&RY]C1Mncjgr7r]2!taUo:X6qbHk;b2;KZ<H4NIZlVg8^*9=YU9:NA)4&cs,HEcOLZ[(>XFF2Ae[Cj-rZo9iB%eWs$[b(:$jTZB.p]"Itlgu&*#0Gt6%GGMJ5a/WCa!)^b8S#1;PJDlacIPieH`#_pQ^)s)sCFo't9H1-LH/0>V?WgSAW38\]V3GGs%B4.I;^lXG)Z"m!,E.YI*+3]!Np1M5)Q$[sr2,<684nSeI/7[9A>Ak`sLGmcsY`f/n.9$gf!69G3*%`/adjh+QXL<97VA\R#J7")+%=c\V^&aY]k*j;'cg8i0hAQ'i<qac*7fr1cFeb@[h=cWkjCjD!01-$Ri0!/DSj>Uj2T4U2In?P44[))^_J%_ZnpbY@"QCNsdk#Z%'%$W2ER^d?:.F:^`0`eub\"l!Npk&N5]81p((*BA3hL127lZ8p;ZDT=lp6HK.SZF[:A^a$UC2TFo\!RBlc?^!_]"P-R7F,*neHmVTc%OMpHGa2bZmK+)o!THo>$l>-s]-4Hpu/=q`mENo!1$jlf^NSpAOJ5CXrmQDBbHn3q6:jn;A@)$'.*Y3/?UgkB$A\i"(hQh]E0]3f:%/ahf2@R%\_]@Z?"Z4q[TN6GQ^n7;'c;q0>o\o40>GILo?\SLb+9cO0b+dK4l8fBKpE>fc)8g0C$7h!@3K2^)SJmOA!q#[S3d;>X*%-",P)-3(j"8#oWg5;\hrorA0d*Iu&^lko@pP8Y'F.L"C%<O8j*8j>$30\gMKf<XWGHKNcpi$_-o5qV@fBEqDNIP2E_;1EnI:l_)Q%R81akY016I!h:.aH@Xe1dZ7OA[\2WL<D0WL/,!OL,$o),$D5qf1IIrZ'E.<=8,/k6[V1*_mMgVBju/cU(K0BJOXS:UUOY3>3-_q9%:p>tnRS)2b"ILC3#"*66@&gihB&Bf2^Q,k<^L#+,#AYEb/_[Z)nE[/?cOW0uP`=NH;MOq<F(WEip@CeH*MHH)FU815Cp_^W-@J>0%T&tNleQK+)POrajJPiCUM$7(CS0ZKGg/3jFfsImgDG%<CZZj3LQ2qL!UtL=+WR*t*L1M[4JaofOd5D?_O\^3B%"DdC9#:>N#-J:9%f,cj[m%rHEeZfG=i"NT?R^U8526NnCd^?"j-Ou"QR_%%5b+;NFYO,D6X%?A2n:%AUJn&3nqgL8P)V&UZqc!$2oDI!D=50KEQr_4A%GQ)l$a;R2]H<RqX&ENJDB?G/*^6L5kZ(=2UZjaX>L+92(1F2^^ig8rH:WN!T<sNKghP""abGsXP]C#g<'tA19Xm8<()e>Q!QpVbm%0SU\H3@>bleSM<^',.!4Tf?&0:L^]BXhH[Ke(a!0n40m7>nQaYY!T`\R?:;r"1=f'WV#=uMq':X#[>P"Z7ojjP_'75Sa/N$8/<+e%.fFG;h]Y/G%a%Y5I*7rL0F44["lo+RPS@=Q.X$,CG]GA?86Fecb;VHn:JA>qSd@D$DBNF`Y]>eKfU<UA<u(-BCnqE**X[d7#f>Bi%EoSulJlS[T[/E/Ma2<:##mZF[bLZ-G5_aU!;cu'iCVE/K[n^MYK4;[&][=eOp-:tHINR0Ys$(e^^Xqe#je"s^@bAoEj>s3!/SI*)%/0HLL@>mLY*:O/PODL)b'oa2P1<Q]M[VtdCs5KH9+<Wm3O*Af]]$9/UlZL*cD?De.'r:T`VtB3/25:;DipU[3G6Kd#"IY]V"&QN7%8$-nq<`S]%<YPp\d@mEec>%sbn<>=[Q#N]45IZ&J^OuHnau5r>_`+]R0!DCn6iAW:2h"]68XLj^*Q-/6&tBqjDYpkke$EqW1)]=1%&l47Kc)BG)Mb=Fs/&QF,3Z.]W6oIe/*J['lFk-26rC.QIo")V>MtJ%C"=5(mm8m,&c<g:`Ub\S!-8-K$n*0f#p3ln20TJ#Bi/VR&%a*Z<ZK#c_EF7Z]Bd!\DN_R2Eq3),1#gV0lK%Bb&C3=I<.AaQ9,=YYp`'A8D8GI5.P*l_2$@#cb8ST*?QF49l]"0GUDK9QC"&9\q?%'TAR:L4-*&28'1jOX6ZbcFE9X;sRJg:<BQFmlLk/Fgfl"0d"LdBff4n^'RR5j<1g?pka]?P^_.c`sL(.D@/:rrUZcN3u;e*/a]uH%m")j<C:5MB[d:(E@uo)eKr3P+i9.P`A*3'7KPNr#Z>u8j@.I3&7bs0!h<7_V\LUNq<=gP]RP`RQH&MYh%Q$dIoSg5d51\=%2Rc0X%B,S.Y1ahLF7QQ1j117Bk/-&I-K]"b)j++,=!Y;Dr_>%LgnUCZLBT\%-NBG*#:[hO5\B=Z/nbk?mf<\b+li^5XfcFW_>e)FN5-i!8%@tT*GSDLD<nbmKEDdK3R=;Bu7;Fbg@"H2Itas:+pA=s.96Ps^o(@0@Ek8[aTLC?ue"D(5S!8f(>&X4J736j)a&hPdcGY/]!)A<sQ%2+KT*TXoU]^*\X;3PF,W'EoZ]OlU&3T!`Wk4CLhB-714L@5?;3$'S<rIPh\89r\hg>GToY/J*DA#N4;ol'd@UIcpf![Ad7?p7q*d%7pqiQcAt\>"1SbWq)5\O!C"7:jCV>]o_!>uVsY?N82:'h7!i?X^s$84JCiEtH'MMpc(]%q&q.uf-u]is/cGi<AiT0D:hU>f]\L`X%*p(b/R7&'^#_dCm\8C^sc(oR.":M&J,Vm16#(*nl&f&?Hi2Sqmc(m)O^HBA\]fNb#&Dc5inas=XesI,0^k'LK=N`QU&pa!g4qk5c%`b>FBj\Xg^\g5721<JjV"d^2c6^bg`U'\25&bZhXb8j$T1i<?#eD=T;2\Mq-dL-oZ+>e$H9h+!6GqfW[+ZkhR+HIi-Lo#aZb[L_N%n3V0_$$;LoD^&;1B,FK5.)`7Zq+"@*K>Wk/!f=YAkje;%jn;[p0LdaRH=0LLc6?1XOe0Kheahiu0[AVR(Ot9Df(DjLUMuL92N%#.%CQ_$f#d"]Ib&_$MMP+j%J^Ci%RUqrIMHM'FZ;!SJ&LN8Q*K$+Ogs1:`<<Q5-D%G2k)r.D\aQp5<*/4Y6["d7dd*+O<33op#b:.Lr%G8;flJ`$f&N<Ad[fCfNC">(UW2`A3G0EFsGhdc+a=+b-0`>382,;*X.l)6uhK&&H+NImL)o5IH8_Wk3Nh_ef''*1$D_,@Te9$f"Q%0KY8AJhj(O6%i10+##(c)$Ch3P2@l5i@\%gUJ`9GT*Z+=]5N9gZcRmAqr%??dTQ.eY%r12XI3p\SO6=0'Ml$Y]tWIlcaQdL>-KmT%g55:gJ<Yad7W"0m"m^oVK*P)$(?lRf6cKRnS(Ruk)dH3A.+"`E&2hWhFO.Y1Bk_O<9oDjb8rN-cb[V]f?I:Dg_"gL4<,.S23>ADF%`Stj=_*;0RaiIIkjGqSQ9>5M>4)n>47\Q&2qgr@8$*?+IIeUZC>$5H2j_bVb0/q;H2L0)0caCNqf;Ql*j7_0d>n4gETRG@lk]?U"%Q&o`G0K6TW,BP["orPA%/n`PM>^N$.[Ujg65orqW&856Y$]I&0*l5l[J$e9,5n)/dLLJ^F9RFkPHMN'ho%@(6aenXAp8ro$K;YQ#%lsnD_cJ+gOIBpWA#(=#u?gcY")uSf#E,fX*m*9cnLHJj(CaT*[L#A%#SjhqDo%9J0l2mDLA`RCQ+U8MdULqL4M.WV:i6\T_)D)AI%#"pN3%(ZI_qS$\b1)!#+U!R3$6ug]sEUIF:oe-5I,Ru.[T5]eHZ!k4n+K^=4Ru;J"A5>9(?gP6(VKuatZINP^DGeWp(X<94_[8NZ%?[8D`%p+aV(M9n4@<qs$Qu7K#o`Dh[-E:@;-Y2!-QaPMY.jK_I(,@c^(OntCB&2c*oCXH*B^LY;UO`n)PQiLISd.=#EZQDo`5\$_%H30__km^_Er:AaJM;Y[Y;7`b5lAt09Y3VFCgXF'?2DG/nj+g3lBD.b-/n"A>@6PV'DY@4.40c^,"1bF)pD-@=[LWTVSj3RDpO;NF%M?J!l_I0j$V>AJl\Djm/H+;fq+9kJT)oK+apXX/[2+ZP;j(W!cG*O1Wk4?$'W8"Hue28P)m:R\?Ba`j?-J1i^X9`^&(`:'!qhq^R%'Z=j0Mp6@j>758hpZoLMPN4<B%L(`+_'>#_pA5)2*t9T>T-EGFpN^iZq:"#mY548lkEm=5c*!)=[gdjf6(C\?%G&g_%rR)50i7A`%?'k$Y$@GK,c=ajDpWuqd:$BQ^m\4JAE,&hp`2BG)FPVP]5%J=;a5sA5bIc&5o5^WYT+[F'HEgjrpCH/Fb^s@W\7C"\**m*8K[TrX%i<S9h,JScBf6RY#jc$k3I'fru"c-pF36M??5J&8l3ek,+KfrF<Xa=deY,qr=TPtZ1"AH,L4SsLDDHR%g[<\3g7_7Y^rI,]CX<9e9%RBI<l:8rOhQL<IQJ=U#4V>dTp20s>:$q+f;Aj2nHJp"_6ZgMbL$-,N/"uuPH(&>GaLe#G_cEM)PCB.<n-1@R[D@QY+,u`X=$;BO_%(bJ1;6cC)P9RBm"J)=*q*)GlcpPKUg4NcF?FLeO;kF?>[06V)qLq&8LPhnhTq+Yhmd2g9KD'tWDrV?ONrd)KWL7ls+N^fjSP#50,%iu).?#2ql>0I%PW2jc^V:uDlG\.a%RCaNO$*)eMs,2JWHRfp/%Q,-HWT_D2BK]qFK".'NDSA<?iD+%:'fE7po#2d2Je&p)`XSJrK%RH4k3#b("!#&=\FPK;lR]7Fd@_r-,e&b'FB37M/O)$r\DTn+1$cH$V*-<Kk+?m79iE]<i6Ym1@)aQ`m?.Z5=[8aresVQ'lN>mVL*%Qdb&'hk>b,NbLg\+B0u;WWCmLX:pidi5HtoRV?3(\o6</f"/\V%Jm+D-mg<D@>lF\*FLMQ_3'A$W=5DQLc8c`'V*"gp#8?&0E(uA%GNJG,HA]=^5",W%^3"ZA2F8fsdAD[E.X6\*RB.[H"]5g=Zs<'SBLMS"C_gh0.T3N-b[2#hnPpsN`rgph4n8?pO]`2Op>*Im_`1VO%<6lrp]s6]XD:ll2H+1J&4?Vd,&Qs(L?$5-ZQPLshY]*I*Z8j!<GO>o0Hb9f^S5D0?R\;dL#V0U_;ga?r\9i7Q(_+:_40ljZ4)hen%$dgm=WDqHG;W^=/=L(b.m+<Ig4]e6ac_jQZouPISo2W,sR4]>d>7n@kQn0chRaJ9DiT8VE^3VM,5+,3mF3bbDod"3N+9j#dFk[?<%p>llig\O)J*(s2?'K1tbI1-!oD1?u&p?-;N@`*Frf/@lQl*.2jLMYRT.=MB'WEAG#pU&cNEhg>'P!@X60=Uf$6fE=Vjgbf'LE''N%l%Ad9k'l*<]3,^sQIiZ\"b`Nl6J9!h%$kO#%nb%"@&PEU$^`f:1`/Q/_-E\b6+=&W3;bp65nOk;f62m_oW5*_gD1P"Fu5n^jTX-Z%NA`Ss;U\XY<lHP&fG7=Mip@r^m[uJ+#7GBb2)5_8pMS"'3lY_UNZ[Mh[R]OoC`?J3jp99r?>JQ=1Mh]2dL4]d2+U%'kj?f!!K8<`%m)5GCR>hCUg`Q=>LD9e4KO:nV^0<a$Vnp/@k]Wq!b@m@U0OI]G(5V-)l42AqHeIkVTQuZ2b@FX\IsiLM#]HZ1ZlRaoXDT\8.sZ[c%,s>S=Q]n[O@&Bj-hra-8nD+L,E<Q^kqojU-dFsT)2hl$Q<03eID%-*qa[f+WnsuW,m*g.e/SmBhD7b>&F&)jI9PuM)@IJWt/e'4u%p3kWg`m`K?VN.43^:0tk.!N!pXH@i0W[PL1"STHA=E@nLClR6ZIMD3Q.Kd0-W6a%W*,IUu"BO92Yr=T\!>Gp,SW(P/"2UkDJ/uDg%A35?TMuNq?&BX=a>A_DpPIq.b313\9#'Op1MNp,MY+673[W!1<l1o60/:,m_k]%]>oIjW\;^a`d8=M-e61ipREB*!,(!l7jj+cE,%h?SMrG!8?q1H^sViG.Q)>3OY2!#I1,p_D>7d>eXYgV?.Wl.CY2<p(R,f*Xt*VSh)\'-d8n_GSkj?sKf?G%HXtJgO.!6$TO$hGWn"%FsO+aBU6hfJes4\=ktX*Zcg.->XoGjWWj8D25G@s@,=5RW9ce*,[r@P#V*7rn7qf"4fGe4;Oik@Pe7$!HKn\+)-Kpb"?U$$I/dXd%Cs(#,>q?oqK2Y_Ql*(V,]`?+#DU$aM6235TXP1[Q9HGu]TGe-eBc?NZj;IJu<QbkRQSfTF*X,ZAR=#B'$9;E$Z^a:@D6)MY8DE+O%E$o3-RS"Rh`_+>Dm;ge5m_!jfA$&1[&/!DZ$M-#oMhSWk&D+8Xg(-%q1=WC#Z3$rHa7\fQ682#L]H>Q)3Cok[D!Dj>M]s924L#_H%Fn"*hrXRl39XN=ULf([-m7':BgV.Cp0*?"f\>Dpk[ZM8\*)e8,=r-'jGXmUYORUF37G+Drn4o&R&lQ2.Wo2L;DnCUrRTSA:CqD.c%L=r&U?:X\R1fiRsNR@gfj(.8:XQ'P*NHd9(PMr8'gN)2lE:P!WD+,sWJ>W@,DFZ!(d\Rq#p(W5VYiUkONfBKg2H7#'dI_;?c+j:a%p9!9<H<'bXSDo.rQ5^^I<4>ac[^7=\f;'Q+/<^^+-r'09m@3s42!^/(RG9m&Tu%o0ZCn6/T'FH_83OB\5VE$Xp;DNj4H1&lQ=DR-%mm\5AmdKti01?2jS3V?;[Z1u`rYV>d:N%B53*uL`B4li#06-eK^cYL&7tBa(N-2pi`1mi^B/G8HR2XcB<'f)8e)+:L`H(U53B8U6%F_E*,k/ZuI0@REZ/UIsI9;IE5r!]rUQ`^'e4AHuEpNmEbV,/2FY/eOJ#PHe..W=XuaI9'qQeT+6,(qA[<DX.KI4>u&_.>?\:s4NN%en\XTKu^=E<nIOAShc<Rnj4:Q+tC.)FM^^R8@XR/(cq:G2:a)V9,u.[.+CC8^&t\/Ucppm-j.5GBJ?*D>`9Q.1M\#T":/sKW1kI,%!iGnG^u.U.Ma1A1Wkt'=VY)j\r"KsAKFBI^N*)r/64NG-8Sp*p#PlKF-=7Op?aCXWA>fR\Vr,r1A8Tq0%6$`Q.GRU[W$#3Chu'gF%8!IbRV,opR0YdgCZ;7mO!-64jepc0%FQ6#pfQP&";YUAY1]o`I3FpJ<"i!l.n:\K5;qh&u&=uL.bM?h*$g)RSi+e6(`2$)K5/jIr%#;_5J>Y&nEOi_V`qOK$UBH'Y+CjjAI,9mqV8_;p!<tIM=6c:`Fbk1%/YuWSIe7'5;'Oce/jlP;^-HQ5dU5k3QLo&2ZM5\eKN0lT3%R1lfrH(BDS<=iH_d>.NjNuhl#kU'QHS0\*j78XU8YD7dH0fB*[LeOO^\A??X3GR6Xpnc)WY&m"pVVAe1^[CFnX#s5-_/3b#p*aDp%=X.N%\?-FEF9:-U(f3!F11hml(+\uii'PF:/sBd&D&Sl$rD3X/.2Spk0>Y:FXa1)/'1uAV^".DCp\<*p]WE^e!ng*)Q*`9:8g*7M%j+oib#E6s/[6ZY=IPc[);Ve9'gSEcX,;)0M`70P(HKu0^JjhLZ:q+Z]e93+X6QearJ-tZSW4YG`oC<&f"3%>\pg:Fh&c\'0"^m(P%fk9aolpI%6]/JS)>c_;S37tdM4"cJnk!5r+P#cm@jXOO><*`>MZD6!]PLUB%Sp^DEIYgN8WJgLn1#%g3fibDkmZ,A5;O!mN&QAB3%8@(6&:M$!<TP4:M="'>&O4L<+j2eO/O`&Pa76m"UF)I)3.nR2lek$s[bKP7cMe_2qMi`%t^g%RP"&!lcenLqQG6(>:9V^,epnu'g%%k8Escti,E91B,>?gBZHad>(712))DFBh"nc2kQkh0(R8GZ;Bq&h;GALZF+iM-QVPk!CLCANVogm6"lWAoK'6nu0"QU!RKD]rj:(%Xqp@9JOR,No*tes:V_Qh7--OA`W_8/7oW&>"Je<LZ(;",*fW(`,3.0u*onfnCKF'Jo#(2@4\4oTRY!2:S^E63cj?:@gBbM6*o'Jk%J&k\CK*Mtk[+B<?V29#hKKR$"C@L>n/1`dGn[=g7a[Qm$a/EAL+O<I$$Y2?LAeZNKN)fjq-8?I#q96V+=_n0_A6g=8H0@lFOMM64%V[Q++$[Q0Q$5rb*k#U#&=d[+q^V8C)I-$3j_gJaf'G\D6?ergqD[Zu-6PgZR1J:9Un0A:lXga41`3*h#UfU9DTjn<LCrmNt&n5MG%.:e6E6JRLW9PTf%<o,I@Kdgao>eeKfA<2ZH^DUW*85hLoiGmdY$TO(?(XDQPhSGXGk0X6m'!G(h&A9FX[#+$8agQn:?Z1fZBBZd:%RNS7gm@'o6f:$/s@T6qt6R.53JRkZ8,mBU9&Kg'.A;I\<@"EEJ(:c+E?UM8cjH0G.9Nu'[aB#FnJtu&m>7im;4P+VsW9`PX@<o7s%&!^;#$*["rKEGV@BP=ke\s59XOD)LVZZaj_UKoA:aGX-h;r/f38Z2&6mi%fVZL49ir2`A:dQ0]h9X1JuUQ2<gK'CfD'Z<X@S%s6r%`I5QsK(2;mI$<7c^^ua'KQg_5:i&\)C8rh;,TGCor$FD$2&a9.?1`Pc3I(^B_r[2Cl[A?].Zp3E.[$=Q'<ptl1D"nFecI8X7^JpB%#?.eLll2Dn6`KjKTr".+!FAuX<`$l+TMb@a1h/P^kL6d>U?F+U#q-M4cb]hE&<<LdL6)!;`49VI,t;gg9&gSdjT>"pIXIH920`tn%NfV34Ie"@M!`d()c>0M>?DB_;`p>(=!9f`U>^.*!M_($]eA1WiG<(Y3.]iCM/-0ua44Z?6'FKoJfRap$\PuB6JGf_aDcR-pm/VVu%mZGh:o\7.,d6EXOMSo]g\Q5VI,9+);/%7S"%c0dtGqm:pJ,)i^b8cMn'Il67VC`NZdkjWC`2V@_="O>@nA0p1'&uf([PoqAR@n'1%PQ3YQ-ii:6Xj=HBD+5dNlhal9CD]>Snl<F7hm?0?Ak&^l4e&]\F)#l)%o&K"\p/p71hh%=__</*d3aTT1ci6\rTiKnIP.ehg:I(/%T6I):q;BKsQ?tu".5&aPM5YAMKuD2DKLl!iSS?G`)r3e!6uXKU6C:M)jteVH8]557U=N\`BgNN!GC*;29]#/VF(hD6-&"D/*),";%KtIL9'uV,P0XU3O4_]Q1s)'p&-uI4F;Ue`+;d`hFE^pU02+oMEm4X;2+r0bdD[sAr5M7=o#VaOVe%Zdr\!Bk,e#^l-`2Ku0]E(.B%]VuW7ZnlCZ.WmZ5pRC1!`T:T8192ApVDF.qM[6N+YB9q(VMD600K^t&i0&87S0a1cE:#$t9Rkj)nQUjop-QS-cT;RqmXs3l\3?f;%E"iL)1F5+$^Q65s1&Klq&i+r$,Q>MjP/-Gloa]@<+W%'jXLP*oP;L1<2@12IP-J(SQ#*IX_tV",Re[<[_;+DSE)=X.>]$1/%*sgS%[dq6J"?-n]-.kVtSM7,iC:#e<1`4JFoOUKP<n>,sVkC1a<Z[Rg1dW'97,sW3"=*urNQ=1)!g:K(Pqt.BW/OOb6Gd7?75oHjOia5c%.("]ML>](08.l:TGu60'$Uf+N,V7HNi:V.sGgn=rAYH/$08e5.Wu'&^m)HUJ-DY;#V"(KO\Hqn3]thLR=moAZ\I0Bt)^cErk2m+P%*KP_,DKG`\/FcSZ$bs)'Z7C%cC/13`NDXe?2J_=<>!FlJcuh_KaKOR$7j<I)$ir1>87P(!h:2Vq>OCf"j`.^#+RCa)OM@,oQd.m-%N^[,O(H^#?L92UinaeY89YF=A[crmAjZXQ?9W'`K1YEg.KhukC,U8D5<E6_;&,5(k'WXtf,[9Q"#gX+InnDL_ls>T,H+rc?:G6dD%B=A&N.8VI(c4I4jPFabN^s\6t2(BafN0LcW8Kqc7A]XS3/17s1,<lK1"hfANQY5&p<a?WZ3MRQFh!YN#La,^_a'F)59#Idb2M9FJ%iNfGHM.R--`.-Js_)(sXE5^n)8*eqgOZF+WD3t^qn`:t^PkQ=^,\lrp1o]CEa*UA%Hsad7q2R8!HO3)ka,jL,;'%e\-9OP^FIdt,%c=N7;aoau\Q1B+o<^33t5>Xjic(L[hl.19/d!:V0K>L38>=B^3fuQ:>O2H5`VkL@*Lf-F,F9+j?nF;@OjL:e$ONmVM7=ohOC'\GN%'^#;s-C1)HNd>PKJ&';\-%W-rhOGEMRupHCb)aaCA53P$?f6b"-aRt']Z]BnD^qO\JW:h;9k2Ua*B)-c_6/7_<'Re;CL>X`rL%0p%b<8P&bOjOB>c&>YjK'f*&g-L<].:a7`E/*1*I:+P2-XTn71)4>X(Lf/P+Q>G]Z-DR;`XL9IHI(dQ)XgV0A>3s#tKmcl9OEuf[n8R%dHbpMXf_*MmDOK!Fs>2DKL:@_-rPhrX0:hlLA_fsG\*`ilS!:>/+S)O:o=:0-Sdf[+L7`8e%/!VFG0u\EEJ[phD:ulEg<K>>]f93%.soo^0*7h;^]4XX>P:?B`^dLo!,&I/(Pn,b$^QIFX(-`B:J<g)\k9NT'EaLT*]Zb@e_'qfXMhRO6Y^;bTn,o'GC[n2hN?=KHS@Y&%WdToM;[c6:rU)VK*bpL1ZLg%l!:Xu8b%3Jl*Q6&R!>=4`k0VgsjM-Bn-C-eoTH![+NOn2E=,?X>@LpQZe8HLsT=)A++E^/fNAUcO%W:E12!*7&hk"pbDnEOE%1$*D4&nnVaRWS"J,UV=h*Y.PDoXOCP+I9U[5b[@U*gnFQ5VE%Hc>YHfciRsdY.,Bh/O2LWja^n5a+0%r%nCCNnB.:ZE.>@;gQK6cqJKFZ^49o^ek2StGCUEk=/*=3L=No!]+F`rV'(2FcI.:;GU&Vu^OAYOYDjfcKh2$`j%2e+e<S<=j0gU5V%eLXWg+"9us-j8=dpiK+""LRtiFN85<;RE_dYb+[.+ikS2_Z?XqjRC%MF@Qj$'C?"V9\7k>U.XiO]X>2=F1q,GZj*q'l#&WDb`j\o%1LZ/[LDu.KhIZ&/gh\SIk5>tU68/ah'F3#O;gI7KCYp=k/]-g1pr)H>1',kdX'B9<Op"<B*T5]4Z+KGKE"qTa"/g>%^u1lKi=0S:%i-0>1VC6D6]Ns-DbgJ5_))9oa0!)&20"`bGo.Dp)Vea*,'0S#h4?E^"<,TANFqi8B/qZ?"7%lYS`gVa?NEaIS.2]X(eGXUYJm]Fk%C"n`ZP`kk8/8!aX.aOX@E'Pre0QMu2+O86FWKM"!gk^21ZqCa#->GDmWQf"i*$t:Y'fD@*b_T@oTbnUX:]Ss*pi2_,!#^"EjfAYU%7o6;n?8k'p<%ZHf<09iU<rlJ.(rb:Wi,>K!c9dq.U]amu-t.9.AdG?LUE`p`YZ*`cSgmJ4HA3K@Qkp,#0[Wm^V(*0^TWh'R`+V\:%B3mfe0kSW*rC2PkDh!&Th9=2GnSf3gXea/AGaX4l):O$(!cnud3Ys+Q2c.SEZXaIJ;[FZ`ksMo6i4(O*-/.3;`)M>iUlIIT-/W7D%+T[4#e`<)Dkp=(TM?*IB7ZfTs;KlcI"A`Fu<&ZMM,$ST`>/4(0!c8MhjXL7<##M'Xq>+'rWRq+sWJL52aQgWK3Y=#3h-*iFD";,`%#XaAXeOkC:7?jg=cmm!`[EVJ/j)B1ZMml_2Vr@J0:+b+9.(i\0jad#+)3A^&#@Qn).i4Tq8m]BCJ3uF.P34Eq#=`bh"9VXpK?98A%;?H+5Y/;`H()c%(g'a%r63eMdQY&+5P*I550s,d*?;n1QW&-M.;r^llQiu8rD@:ttEOZ4C)NMqTNoTd./^W6,FeGhB!gX::"d'D?%\(FQtOdL[/%\Y>VmS4&jPuJp=E_;h+0C*amL4GY"\9F)Q(h1""=cZ]X^O3r>"J>+[5X!E>$B!&$MZs].Ea1KDDA+/"K'M^VWo<K0%iJr"[cmm^X)(OJn87J;s!*>i!*0GDC:jK(17h,@`PNXp=kgnSmI_Hi2mZSA*1:r,JDjt4S6-NH2_98DDCW')=.'c*.:)<-q.IAS4%%V@tbjr#/XMdDL1<ok'!;j%a:+,gV\FtpA;X9<@VQbe%YXI-i%D?0sGcH.qhRf(#3`\s[Y,/h!69VKkRX=-Wic^e3"L.#EBgU3#7%ntPQJ6sAsYAtg"#`NV&&.s@eUBje6p9JKj].lZEp<&dMu)+AR[(JQg_2]!=>!#ogh9dqHP79.KZY2mH*+%8>c1!Cf04/lJDR][^E%kd)Y.T'PN)lB>rO*7Q#ugg%rn!#)\K,HNW[.765N_RU8HelG:=BQ#VdE4m.<AS]qfV4EP^]Tp%VGa+(.V$Dtj@*NP->(1/+Mc'5c%VSr;9qG="OY-dOTWK,j1A&B4Ph;m*`Snh7/mtXq;7+.8JD:WF(Sd=mre,MhaU(o7M"<`l)m2D'@R3=Sh/*'.!]ePfCioRmb4oWkM%KdjP@#\e0NPHr63js>C#DT[.]ZOX+nH9F,OfTiIj?&*2`V3c+i`pa@+';lsSB,G7IQ,!YcdUPAr8:uuW'$B?t7RmoA6E8i#_OHO-%$Aj2e;`Lkk?@ES7!sBP1c;Dq$0C1BHF)agcC:XnPBF)@=P1t:J;Gc\4#pMEKV@fI*guW63_sW^l(RVX@Z26aHV"@/^%h`Z1BTGWF%B2[M6B4VE>&i7n+8gm^Toai+D&jM)'=^i"g7USd_VXS5/-=^RY+r9WKZCj1o<MhKGWC9DdiW<>D.5BhjDY_p\041"Q,TA^SqBV8,%@$^d;'5ah\?Vt=^+sLf,BM>ZhUZHVfI/DNc&a!Mm0tD[$,[!?JK4Kk$0Rb3oHe@rUQH>XFXK\?`2+#;"2"sl<q-u9:*EMj^P?B0q%,lstnCS%I='+3t/R'6rpY!ISTd(OBQJZODT_M<`0#-nXOA?9Y%Pe(8u_N*YUS#.fnW(3't#I:bD.BCjKYN4h;\iNR0,Xt4Rib`>?%c.bsYSW&OdV!9lj*ZK]t%9T\BY5ST?Yb\bO2=OU/@)aW:3(m#2(2a[bD&H#2Zo$d*F^(CBpbiM#;(*sJX6HaRpY32(&js\TH)npJ%:_QC=]'#.`Rkg6p>HOu;!qW@,M;sf%mepie`g49g<gp%'SXBifd]eFJ$:tOAE$c6<$Ch7N8s,+"OlXiX?Rq)YaQNk5^Qui(ogn<;%X]0JI4i?cqW$$=Dno<LZLF(l]CB7S%<:79>6QTV<1rWqFVOA^R-oHO4L>qZuEJS#V%iEUlmE6A2eT+po+F:qUIFi3qpZ)JGf'QW+%SFbML\Moe1Y^??70+[QO-W`P-nRT75*%CN49lc1:^Lg)C,_.MPk^KG8PNo]&<?XK<f[j!qp>p>=X9,Nd4<MUf1ARk351Kc5n5NK,%rg>QW9h!l=B2'r6C_8DT^cEhAYr*(agW$2e]!Fm%:fkCD/E.*m6d_q_#*([0g`md;OHOf%eO@g'&dfbaDKO[D/VYZfpB*gODNK\!%"0?$KMRs+)7!&^3W1jFCn>[&dPcsO2;%Y.W"qO\-=+.MF*pOcnD>:pN8t*DFF/$_6%Etac7P@uS^@F;bVoftE\Uo+.VARadiNt5+%6<rEQA9mI6Dk+]S'nqdY'kf*Q2uT&H@G-BlA.WU\.!pKm'<f_FmTj1k)>K8n.Wc$#&<cKZ-)<.L"W*rP@/8Ldig?;=O;L#F4@oQW%\9<0*$>DdK;PH@Cq_[>GW._Te3N087>r-F&>+>u^>XMB!Z0\Hg\o2OZVbTJ1lG0K$+?Kj)"b'(G(.;<TJW@oW&W]:I@3Q%KqLGJ2%D@%dI,PH4:.:qJ>SSM-pF6t"kWQ4/VF-6oYfa-tMW(W_1>Z]2II5*@Uj_)"Mha&kE/#6Z#b$SMlg_2Y"#\!#F4E]uIf?1k5[ITaG%rt#.qj$.qeeXui=qEOuWDu]Cg2uiO)hu3&^QXB^V5QBlLJ,<T%pRD3U2o#=IQbWNThu)MQhgY1+Iu@^eDuY:bT=;T7h/E>PJ,e?n%If&gLs7>^Y&!6H!s7idHp#ghp+2@_\04ND;~>%AI9_PrivateDataEnd